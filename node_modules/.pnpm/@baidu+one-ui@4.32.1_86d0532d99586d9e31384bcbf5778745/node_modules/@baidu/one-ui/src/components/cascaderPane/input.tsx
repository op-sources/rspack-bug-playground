import React, {PureComponent} from 'react';
import Input, {InputProps} from '../input';

export interface CascaderInputProps {

    /**
     * 输入框的value
     */
    value?: string;

    /**
     * default value
     */
    defaultValue?: string;

    /**
     * 搜索框的props
     */
    searchProps?: InputProps;

    /**
     * input onChange
     */
    onInputChange?: InputProps['onChange'];

    /**
     * 搜索框的宽度
     */
    width?: number | string;

    /**
     * 输入框类型
     */
    inputType?: InputProps['type'];
};

type CascaderInputState = {
    value?: string;
};

class CascaderInput extends PureComponent<CascaderInputProps, CascaderInputState> {
    static defaultProps = {
        searchProps: {
            placeholder: '请输入...'
        },
        onInputChange() {},
        width: 360
    }

    constructor(props) {
        super(props);
        this.state = {
            value: props.value || props.defaultValue || undefined
        };
    }

    static getDerivedStateFromProps(nextProps) {
        const newState: CascaderInputState = {};
        if ('value' in nextProps) {
            newState.value = nextProps.value;
        }
        return newState;
    }

    onInputChange = e => {
        const value = e.value;
        if (!('value' in this.props)) {
            this.setState({
                value
            });
        }
        this.props.onInputChange(e);
    }

    render() {
        const {searchProps, width, inputType} = this.props;
        const value = this.state.value;
        return (
            <div>
                <Input
                    {...searchProps}
                    value={value}
                    onChange={this.onInputChange}
                    width={width}
                    type={inputType}
                />
            </div>
        );
    }
}

export default CascaderInput;
