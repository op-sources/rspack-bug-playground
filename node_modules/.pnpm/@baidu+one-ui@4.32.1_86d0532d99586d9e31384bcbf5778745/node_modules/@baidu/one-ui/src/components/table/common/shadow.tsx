import React, {PureComponent} from 'react';
import PropTypes from 'prop-types';
import {connect} from 'mini-store';
import {TableStore} from './table';

interface ShadowAreaProps {
    prefixCls, placement, allColumnsWidth
}

class ShadowArea extends PureComponent<ShadowAreaProps> {
    static propTypes = {
        allColumnsWidth: PropTypes.array,
        placement: PropTypes.oneOf(['left', 'right']),
        prefixCls: PropTypes.string
    }

    calcWidth() {
        const {allColumnsWidth, placement} = this.props;
        const filters = allColumnsWidth.filter(col => col.fixed === placement);
        if (!filters.length) {
            return;
        }
        let totalWidth = 0;
        filters.forEach(col => {
            totalWidth += col.width;
        });
        return totalWidth;
    }

    render() {
        const {prefixCls, placement, allColumnsWidth} = this.props;
        if (!allColumnsWidth.length) {
            return null;
        }
        const width = this.calcWidth();
        if (!width) {
            return null;
        }
        return (
            <div className={`${prefixCls}-${placement}-shadow`} style={{width: width}} />
        );
    }
}

export default connect((state: TableStore) => {
    return {
        allColumnsWidth: state.allColumnsWidth
    };
})(ShadowArea);
