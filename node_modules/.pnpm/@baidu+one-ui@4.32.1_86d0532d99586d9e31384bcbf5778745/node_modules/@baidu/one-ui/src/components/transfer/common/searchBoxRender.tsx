import React, {isValidElement, ReactElement} from 'react';
import Select, {SelectProps} from '../../select';
import SearchBox, {SearchBoxProps} from '../../searchBox';

export interface CommonSearchProps {
    levelOptions?: {value: string, label}[],
    handleLevelChange?: (value: string) => void,
    searchBoxProps?: SearchBoxProps,
    isShowLevelSelect?: boolean,
    levelKey?: string,
    onSelectFocus?(),
    prefixCls?: string,
    SearchBoxRender?: ReactElement | ((props: CommonSearchProps) => ReactElement)
};

const Option = Select.Option;

const CommonSearchRender = (props: CommonSearchProps): ReactElement => {
    const {
        levelOptions, handleLevelChange, searchBoxProps, prefixCls,
        isShowLevelSelect, levelKey, onSelectFocus, SearchBoxRender,
        ...customSearchProps
    } = props;
    const selectProps: SelectProps = {
        mode: 'default',
        className: `${prefixCls}-category`
    };
    if (levelKey != null) {
        selectProps.value = levelKey;
    }
    if (SearchBoxRender && typeof SearchBoxRender === 'function') {
        return <SearchBoxRender {...props} />;
    }
    else if (isValidElement(SearchBoxRender)) {
        return SearchBoxRender;
    }
    return (
        <div className={`${prefixCls}-search-box-bar`}>
            {
                isShowLevelSelect
                    ? (
                        <Select
                            defaultValue={levelKey || (levelOptions[0] && levelOptions[0].value)}
                            onChange={handleLevelChange}
                            onFocus={onSelectFocus}
                            {...selectProps}
                        >
                            {
                                levelOptions.map(
                                    option => <Option value={option.value} key={option.value}>{option.label}</Option>
                                )
                            }
                        </Select>
                    )
                    : null
            }
            <SearchBox {...{...searchBoxProps, ...customSearchProps}} />
        </div>
    );
};

CommonSearchRender.defaultProps = {
    levelOptions: null,
    handleLevelChange: () => {},
    searchBoxProps: {},
    isShowLevelSelect: false,
    levelKey: null,
    onSelectFocus: () => {},
    prefixCls: 'one-transfer'
};

export default CommonSearchRender;
