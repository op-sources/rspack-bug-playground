import {CSSProperties, MouseEventHandler, ReactElement, ReactNode} from "react";
import {BaseProps} from "../interface";
import {ButtonProps} from "../button";

export interface DropdownProps extends BaseProps {
    /**
     * 触发方式
     */
    trigger?: 'click' | 'hover' | 'contextMenu' | string[];

    /**
     * 头部自定义区
     */
    header?: ReactNode;

    /**
     * 尾部自定义区
     */
    footer?: ReactNode;

    /**
     * 内部渲染的dom
     */
    overlay?: ReactNode;

    /**
     * 弹窗visible改变时触发
     */
    onVisibleChange?: (visible: boolean) => void;

    /**
     * 是否可见
     */
    visible?: boolean;

    /**
     * 默认可见
     */
    defaultVisible?: boolean;

    /**
     * 是否禁用
     */
    disabled?: boolean;

    /**
     * dom挂载的位置
     */
    getPopupContainer?: (triggerNode: HTMLElement) => HTMLElement;

    /**
     * 弹层位置
     */
    placement?: 'topLeft' | 'topCenter' | 'topRight' | 'bottomLeft' | 'bottomCenter' | 'bottomRight';

    /**
     * 鼠标滑过延时
     */
    mouseEnterDelay?: number;

    /**
     * 鼠标离开延时
     */
    mouseLeaveDelay?: number;

    /**
     * 尺寸
     */
    size?: 'xsmall' | 'small' | 'medium' | 'large';

    /**
     * overlay className
     */
    overlayClassName?: string;

    /**
     * overlay 样式
     */
    overlayStyle?: CSSProperties;

    /**
     * 是否与触发区等宽
     */
    dropdownMatchSelectWidth?: boolean;

    /**
     * @deprecated
     */
    minOverlayWidthMatchTrigger?: boolean;

    /**
     * 背景是否透明
     */
    transparent?: boolean;

    /**
     * 标题
     */
    title?: ReactNode;

    /**
     * 是否展示应用/取消
     */
    showConfirm?: boolean;

    /**
     * 点击应用后回调
     */
    onOk?: (e) => void;

    /**
     * 点击取消后回调
     */
    onCancel?: (e) => void;

    /**
     * 应用按钮文字
     */
    okText?: string;

    /**
     * 取消按钮文字
     */
    cancelText?: string;

    /**
     * 应用按钮属性，可参考Button属性
     */
    okProps?: ButtonProps;

    /**
     * 取消按钮属性，可参考Button属性
     */
    cancelProps?: ButtonProps;

    children?: ReactElement;

    /**
     * @internal
     */
    transitionName?: string;
};

export type DropdownButtonDivider = {
    divider: boolean;
}

export type DropdownButtonOption = DropdownButtonDivider | {
    /**
     * 标签
     */
    label: string;

    /**
     * 值
     */
    value: string;

    /**
     * 禁用
     */
    disabled?: boolean;

    /**
     * 点击回调
     */
    onClick?: MouseEventHandler;

    /**
     * 子选项
     */
    children?: DropdownButtonOption[]
};

export interface DropdownButtonProps extends DropdownProps {

    /**
     * options
     */
    options?: DropdownButtonOption[],

    /**
     * 标题名
     */
    title?: ReactNode,

    /**
     * 点击item触发
     */
    handleMenuClick?: (e) => void,

    /**
     * 设置dropdown的高度
     */
    dropdownHeight?: string | number,

    /**
     * 搜索时候的Placeholder
     */
    searchPlaceholder?: string,

    /**
     * 是否可搜索
     */
    showSearch?: boolean,

    /**
     * 输入框宽度
     */
    searchWidth?: number,

    /**
     * 鼠标移入触发
     */
    onMouseEnter?: (e) => void,

    /**
     * 鼠标移出
     */
    onMouseLeave?: (e) => void,

    /**
     * 可定义单个item的高度
     */
    onMenuItemHeight?: number, // 传入菜单item的高度，便于计算subMenu的placement定位,

    /**
     * 点击搜索
     */
    onClickSearch?: (query: string) => void,

    /**
     * 搜索时触发
     */
    onSearchChange?: (query: string) => void,

    /**
     * 清空搜索时触发
     */
    onClearSearch?: (query: string) => void,

    /**
     * 搜不到的展示话术
     */
    notFound?: ReactNode,

    /**
     * 是否加载中
     */
    loading?: boolean,

    /**
     * 加载中展示话术
     */
    loadingText?: ReactNode,

    /**
     * 自定义宽度
     */
    width?: number,

    /**
     * 点击选项时候的回调
     */
    onHandleMenuClick?: (e) => void,

    /**
     * normal为普通的dropdownButton，primary为带命令按钮的dropdownButton
     */
    type?: 'normal' | 'primary',

    /**
     * 点击button的时候触发
     */
    onClickButton?: (e) =>  void,

    /**
     * 自定义按钮的一些属性，参照button
     */
    buttonProps?: ButtonProps,

    /**
     * 带主命令按钮 - 分成两种样式
     */
    primaryType?: 'primary' | 'normal',

    /**
     * 是否是文字链按钮
     */
    textLink?: boolean,

    /**
     * 搜索结果是否受控，受控则内部不进行筛选，不受控则内部进行筛选
     */
    searchControlled?: boolean,

    /**
     * @deprecated
     */
    searchPrefixCls?: string,

    /**
     * 底部的自定义区域
     */
    BottomCustomPanel?: ReactNode | ((props: DropdownButtonProps) => ReactNode),

    /**
     * 是否展示箭头
     */
    showArrow?: boolean,
}
