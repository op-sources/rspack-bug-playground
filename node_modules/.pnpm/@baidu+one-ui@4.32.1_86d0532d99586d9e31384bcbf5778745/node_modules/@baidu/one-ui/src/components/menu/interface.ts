import {ReactNode} from "react";
import {BasePropsWithChildren} from "../interface";

export interface MenuProps extends BasePropsWithChildren {

    /**
     * 菜单的模式：垂直弹出、垂直内嵌
     */
    mode?: 'vertical' | 'inline';

    /**
     * 菜单的类型
     */
    type?: 'basic' | 'strong';

    /**
     * 尺寸
     */
    size?: 'small' | 'medium' | 'large';

    /**
     * 是否收起
     */
    inlineCollapsed?: boolean;

    /**
     * 缩进
     */
    inlineIndent?: number;

    /**
     * 左边距
     */
    inlinePaddingLeft?: number;

    /**
     * inline是否需要border,默认false
     */
    needBorder?: boolean;

    /**
     * 展开的key
     */
    openKeys?: Array<string | number>;

    /**
     * 默认展开的key值
     */
    defaultOpenKeys?: Array<string | number>;

    /**
     * 多选
     */
    multiple?: boolean;

    /**
     * 选中的key
     */
    selectedKeys?: Array<string | number>;

    /**
     * 默认选中的key
     */
    defaultSelectedKeys?: Array<string | number>;

    /**
     * SubMenu 展开/关闭的回调
     */
    onOpenChange?(openKeys: Array<string | number>): void;

    /**
     * 点击 MenuItem 调用此函数
     */
    onClick?(e: {
        key: string | number;
        keyPath: Array<string | number>;
        domEvent: React.MouseEvent
    }): void;

    /**
     * 导航层级
     */
    menuLevel?: number;

    /**
     * 浮层样式
     */
    popupClassName?: string;

    /**
     * 菜单item剪头位置， 默认右边，支持左边， 传入left right
     */
    arrowPosition?: 'left' | 'right';

    /**
     * 是否可选
     */
    selectable?: boolean;

    /**
     * 选择
     */
    onSelect?(e: {
        key: string | number;
        keyPath: Array<string | number>;
        domEvent: React.MouseEvent;
        selectedKeys: Array<string | number>
    }): void;

    /**
     * 取消选择
     */
    onDeselect?(e: {
        key: string | number;
        keyPath: Array<string | number>;
        domEvent: React.MouseEvent;
        selectedKeys: Array<string | number>
    }): void;
};

export interface MenuItemProps extends BasePropsWithChildren {
    /**
     * 禁用
     */
    disabled?: boolean;

    /**
     * key 注意只能为string，数值请用value
     */
    key?: string;

    /**
     * 当数据为非string，可用value代替key
     */
    value?: string | number;

    /**
     * 菜单icon
     */
    icon?: ReactNode;

    /**
     * 层级
     *
     * @internal
     */
    level?: number;

    /**
     * 菜单的模式：垂直弹出、垂直内嵌
     *
     * @internal
     */
    mode?: 'vertical' | 'inline',

    /**
     * 点击
     */
    onClick?(e: {
        key: string | number;
        keyPath: Array<string | number>;
        domEvent: React.MouseEvent
    }): void;

    /**
     * @internal
     */
    role?: string;
};

export interface SubMenuProps extends BasePropsWithChildren {
    /**
     * 禁用
     */
    disabled?: boolean;

    /**
     * key 注意只能为string，数值请用value
     */
    key?: string;

    /**
     * 当数据为非string，可用value代替key
     */
    value?: string | number;

    /**
     * 子菜单title
     */
    title?: ReactNode

    /**
     * 子菜单icon
     */
    icon?: ReactNode;

    /**
     * 浮层样式
     */
    popupClassName?: string;

    /**
     * 菜单的模式：垂直弹出、垂直内嵌
     *
     * @internal
     */
    mode?: 'vertical' | 'inline';

    /**
     * 菜单的类型
     *
     * @internal
     */
    type?: 'basic' | 'strong';

    /**
     * 尺寸
     *
     * @internal
     */
    size?: 'small' | 'medium' | 'large';

    /**
     * 位置
     *
     * @internal
     */
    placements?: object;

    /**
     * 偏移
     *
     * @internal
     */
    popupOffset?: number[];

    /**
     * 点击
     *
     * @internal
     */
     onClick?(e: {
        key: string | number;
        keyPath: Array<string | number>;
        domEvent: React.MouseEvent
    }): void;
};

export interface MenuItemGroupProps extends BasePropsWithChildren {

    /**
     * 标题
     */
    title?: ReactNode;

    /**
     * @internal
     */
    index?: number;

    /**
     * @internal
     */
    subMenuKey?: string;

    /**
     * @internal
     */
    renderMenuItem?(item: ReactNode, index: number, subMenuKey: string);

    /**
     * @internal
     */
     onClick?(e: {
        key: string | number;
        keyPath: Array<string | number>;
        domEvent: React.MouseEvent
    }): void;
}