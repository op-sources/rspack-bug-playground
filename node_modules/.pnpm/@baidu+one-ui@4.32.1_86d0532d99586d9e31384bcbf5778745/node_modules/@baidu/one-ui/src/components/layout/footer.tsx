import React, {PureComponent} from 'react';
import {LayoutFooterProps, LayoutHeaderProps} from './interface';
import {withConfigConsumer} from '../providerConfig/context';
import {classnames} from '../../core/commonTools';
import Context from './context';

@withConfigConsumer('layout-footer')
class LayoutFooter extends PureComponent<LayoutFooterProps> {
    static defaultProps: LayoutHeaderProps = {
        prefixCls: 'one-layout-footer',
        sticky: false
    }

    static contextType = Context;

    componentDidMount() {
        if (this.props.sticky) {
            this.context?.registerStickyFooter();
        }
    }

    componentDidUpdate(prevProps: LayoutFooterProps) {
        const sticky= this.props.sticky;
        if (this.context && prevProps.sticky !== sticky) {
            sticky
                ? this.context.registerStickyFooter()
                : this.context.unregisterStickyFooter()
        }
    }

    componentWillUnmount() {
        if (this.props.sticky) {
            this.context?.unregisterStickyFooter();
        }
    }

    render() {
        const {
            className,
            prefixCls,
            children,
            sticky,
            ...restProps
        } = this.props;
        return (
            <footer
                className={
                    classnames(prefixCls, className, {
                        [`${prefixCls}-sticky`]: sticky
                    })
                }
                {...restProps}
            >
                {children}
            </footer>
        );
    }
}

export default LayoutFooter;
