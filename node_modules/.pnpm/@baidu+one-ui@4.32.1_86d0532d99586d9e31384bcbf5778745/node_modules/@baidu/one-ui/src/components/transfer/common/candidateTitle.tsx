/**
 * @file candidate render
 * @author huangshiming
 * @date 2020-05-16
 */

import React, {ReactNode, MouseEvent} from 'react';
import Title from './title';
import Button from '../../button';
import Tooltip from '../../tooltip';
import {getCandidateNumber} from '../../../core/transferTools';

interface CandidateTitleProps {
    prefixCls?: string;
    maxSelectedNum?: number;
    allDataMap?: object;
    selectedList?: string[];
    candidateList?: string[];
    treeName?: ReactNode;
    size?;
    onSelectAll?(event?: MouseEvent): void;
    showSelectAll?: boolean;
    showCandidateNum?: boolean;
    CustomCandidateOperation?: ReactNode;
    CandidateTitleRender?
};

const CandidateTitle = (props: CandidateTitleProps) => {
    const {
        prefixCls,
        maxSelectedNum,
        allDataMap,
        candidateList,
        selectedList,
        treeName,
        size,
        onSelectAll,
        showSelectAll,
        showCandidateNum,
        CustomCandidateOperation
    } = props;
    const candidateNum = (getCandidateNumber(allDataMap, candidateList) || []).length;
    let crossLength = 0;
    candidateList.forEach(candidate => {
        const strSelectedList = selectedList.map(item => `${item}`);
        if (strSelectedList.indexOf(`${candidate}`) > -1) {
            crossLength++;
        }
    });
    const selectedListLength = selectedList.length;
    const disabledAddAll = (maxSelectedNum && (maxSelectedNum <= selectedListLength))
        || (maxSelectedNum && candidateNum > maxSelectedNum)
        || (maxSelectedNum && maxSelectedNum < selectedListLength + candidateNum - crossLength);

    const AddAllButton = (
        <Button
            type="text-strong"
            size={size}
            className={`${prefixCls}-add-all-button`}
            disabled={disabledAddAll}
            onClick={onSelectAll}
        >
            全选
        </Button>
    );
    let titleRender;
    if (props.CandidateTitleRender && typeof props.CandidateTitleRender === 'function') {
        const customRenderProps = {
            title: '可选',
            showCandidateNum,
            showSelectedNum: false,
            unSelectedNum: candidateNum,
            selectedNum: selectedListLength
        };
        const CustomCandidateTitleRender = props.CandidateTitleRender;
        titleRender = <CustomCandidateTitleRender {...props} {...customRenderProps} />;
    }
    else if (props.CandidateTitleRender && typeof props.CandidateTitleRender === 'object') {
        titleRender = props.CandidateTitleRender;
    }
    else {
        titleRender = (
            <Title
                {...props}
                title="可选"
                showCandidateNum={showCandidateNum}
                showSelectedNum={false}
                candidateNum={candidateNum}
                selectedNum={selectedListLength}
            />
        );
    }
    let operation;
    if (CustomCandidateOperation) {
        operation = CustomCandidateOperation;
    }
    else {
        operation = !showSelectAll
            ? null
            : (
                disabledAddAll
                    ? (
                        <Tooltip
                            title={`可选${treeName}数量超过可添加数量的上限，无法执行全部添加`}
                            placement="rightBottom"
                        >
                            {AddAllButton}
                        </Tooltip>
                    ) : AddAllButton
            );
    }
    return (
        <div className={`${prefixCls}-pane-title`}>
            {titleRender}
            {operation}
        </div>
    );
};

export default CandidateTitle;
