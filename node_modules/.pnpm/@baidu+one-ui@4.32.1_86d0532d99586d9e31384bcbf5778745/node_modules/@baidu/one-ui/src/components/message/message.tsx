import React, {PureComponent} from 'react';
import {classnames} from '../../core/commonTools';
import Popover from '../popover';
import {MessageProps} from './interface';
import {
    IconInfoCircleSolid,
    IconExclamationCircleSolid,
    IconExclamationTriangleSolid,
    IconCheckCircleSolid
} from 'dls-icons-react';

const typedIcons = {
    info: <IconInfoCircleSolid />,
    aux: <IconInfoCircleSolid />,
    error: <IconExclamationCircleSolid />,
    warning: <IconExclamationTriangleSolid />,
    success: <IconCheckCircleSolid />
};

class Message extends PureComponent<MessageProps> {

    static defaultProps = {
        prefixCls: 'one-message',
        type: 'info',
        size: 'medium',
        display: 'normal'
    };

    renderRoot(iconNode, contentNode?) {
        const {
            prefixCls,
            className,
            type,
            size,
            display,
            children,
            icon,
            ...resetProps
        } = this.props;
        return (
            <div
                className={
                    classnames(
                        prefixCls,
                        `${prefixCls}-${size}`,
                        `${prefixCls}-type-${type}`,
                        `${prefixCls}-display-${display}`,
                        className
                    )
                }
                {...resetProps}
            >
                {iconNode}
                {display !== 'popup' ? contentNode : null}
            </div>
        );
    }

    renderIcon(contentNode) {
        const {
            icon,
            type,
            display,
            prefixCls
        } = this.props;
        if (display === 'simple') {
            return null;
        }
        let iconNode = icon || typedIcons[type];
        if (display === 'popup') {
            iconNode = <Popover placement="top" content={contentNode}>{iconNode}</Popover>;
        }
        return <div className={`${prefixCls}-icon`}>{iconNode}</div>;
    }

    render() {
        const {
            prefixCls,
            children
        } = this.props;

        const contentNode = (<div className={`${prefixCls}-content`}>{children}</div>);
        const iconNode = this.renderIcon(contentNode);

        return this.renderRoot(iconNode, contentNode);
    }
}

export default Message;
