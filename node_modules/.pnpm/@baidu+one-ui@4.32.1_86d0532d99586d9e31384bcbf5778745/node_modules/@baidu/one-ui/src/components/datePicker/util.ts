/**
 * @file date util
 * @author tangjinhua
 */

import dayjs from "dayjs";

// 下拉偏移重置为0, 0
export const align = {offset: [0, 0]};

/**
 * 根据日期选择范围与单元返回有效日期
 *
 * @param date 日期
 * @param dateFormat 格式
 * @param minDate 最小日期
 * @param maxDate 最大日期
 * @param mode 单位
 * @param end 是否为结束日期
 * @returns 有效日期
 */
export const getValidDate = (
    date: dayjs.ConfigType,
    dateFormat: string,
    minDate: dayjs.ConfigType,
    maxDate: dayjs.ConfigType,
    mode: 'week' | 'date',
    end: boolean
): string => {
    const minTime = minDate ? dayjs(minDate).valueOf() : null;
    const maxTime = maxDate ? dayjs(maxDate).valueOf() : null;
    let validDate;
    if (mode === 'week') {
        if (end) {
            const dateTime = dayjs(date).endOf(mode).startOf('day').valueOf();
            validDate = maxTime && dateTime > maxTime ? maxTime : dateTime;
        }
        else {
            const dateTime = dayjs(date).startOf(mode).valueOf();
            validDate = minTime && dateTime < minTime ? minTime : dateTime;
        }
    }
    else {
        validDate = date;
    }
    return dayjs(validDate).format(dateFormat);
};

/**
 * 根据日期选择范围返回有效自然周日期
 *
 * @param date 日期
 * @param dateFormat 格式
 * @param minDate 最小日期
 * @param maxDate 最大日期
 * @returns 有效日期
 */
 export const getValidWeekDates = (
    date: dayjs.ConfigType,
    dateFormat: string,
    minDate: dayjs.ConfigType,
    maxDate: dayjs.ConfigType
): string[] => {
    const minTime = minDate ? dayjs(minDate).valueOf() : null;
    const maxTime = maxDate ? dayjs(maxDate).valueOf() : null;
    const startDateTime = dayjs(date).startOf('week').valueOf();
    const startValidDate = minTime && startDateTime < minTime ? minTime : startDateTime;
    const endDateTime = dayjs(date).endOf('week').startOf('day').valueOf();
    const endValidDate = maxTime && endDateTime > maxTime ? maxTime : endDateTime;
    return [dayjs(startValidDate).format(dateFormat), dayjs(endValidDate).format(dateFormat)];
};
