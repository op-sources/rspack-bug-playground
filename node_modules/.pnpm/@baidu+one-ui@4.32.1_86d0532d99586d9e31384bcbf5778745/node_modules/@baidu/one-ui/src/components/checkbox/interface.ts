import {ReactNode} from 'react';
import {BasePropsWithChildren} from '../interface';

export interface CheckboxProps extends BasePropsWithChildren {
    /**
     * 尺寸
     */
    size?: 'medium' | 'small';

    /**
     * 是否选中
     */
    checked?: boolean;

    /**
     * 禁用
     */
    disabled?: boolean;

    /**
     * 变化时候的回调
     */
    onChange?(e: {
        target: CheckboxProps,
        stopPropagation(): void,
        preventDefault(): void,
        nativeEvent: Event
    }): void;

    /**
     * 设置 indeterminate 状态，只负责样式控制
     */
    indeterminate?: boolean;

    /**
     * 名称
     */
    name?: string;


    /**
     * @internal
     * 方向 水平row, 垂直column
     */
    direction?: 'row' | 'column';

    /**
     * @internal
     * 内部使用，basic为普通多选，strong为加强多选
     */
    mode?: 'basic' | 'strong';

    /**
     * @internal
     * 按钮类型
     */
    buttonType?: 'strong' | 'simple';

    /**
     * 值
     */
    value?: string | number;

    /**
     * @internal
     * 是否为排它项。当为排它项时，选中该项将取消选中其它所有选项。
     */
     exclusive?: boolean;

    /**
     * @internal
     * 鼠标移入触发
     */
    onMouseEnter?(): void;

    /**
     * @internal
     * 鼠标移出触发
     */
    onMouseLeave?(): void;
};

export interface CheckboxButtonProps extends BasePropsWithChildren {
    /**
     * 是否选中，受控
     */
    checked?: boolean;

    /**
     * 禁用
     */
    disabled?: boolean;

    /**
     * 值
     */
    value?: string | number;

    /**
     * 是否为排它项。当为排它项时，选中该项将取消选中其它所有选项。
     */
    exclusive?: boolean;

    /**
     * @internal
     * 按钮类型
     */
    type?: 'strong' | 'simple';

    /**
     * @internal
     * 变化时候的回调
     */
    onChange?(e: {
        target: CheckboxProps,
        stopPropagation(): void,
        preventDefault(): void,
        nativeEvent: Event
    }): void;

    /**
     * @internal
     * 名称
     */
    name?: string;
};

export interface CheckboxGroupProps extends BasePropsWithChildren {
    /**
     * 选中的值, 非受控
     */
    defaultValue?: (string | number)[];

    /**
     * 选中的值
     */
    value?: (string | number)[];

    /**
     * 选择变化回调
     */
    onChange?(value: (string | number)[]): void,

    /**
     * 选项
     */
    options?: (string | number | {
        label: string | ReactNode,
        value: string | number,
        disabled?: boolean,
        exclusive?: boolean
    })[],

    /**
     * 尺寸
     */
    size?: 'small' | 'medium';

    /**
     * 按钮类型
     */
    type?: 'strong' | 'simple';

    /**
     * 禁用
     */
    disabled?: boolean;

    /**
     * 方向 水平row, 垂直column
     */
    direction?: 'row' | 'column';

    /**
     * 当取消所有选择时组件需要默认选中的值，通常用于存在 exclusive 选项的场景。
     */
    emptyValue?: string | number;

    /**
     * 名称
     */
    name?: string;
};
