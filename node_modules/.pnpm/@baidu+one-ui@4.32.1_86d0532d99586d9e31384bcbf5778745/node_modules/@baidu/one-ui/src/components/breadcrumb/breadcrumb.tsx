import React, {PureComponent, cloneElement} from 'react';
import {IconChevronRight} from 'dls-icons-react';
import {classnames} from '../../core/commonTools';
import {BreadcrumbProps} from './interface';
import {withConfigConsumer} from '../providerConfig/context';
import BreadcrumbItem from './breadcrumbItem';

@withConfigConsumer('breadcrumb')
class Breadcrumb extends PureComponent<BreadcrumbProps> {
    static defaultProps = {
        prefixCls: 'one-breadcrumb',
        separator: <IconChevronRight />,
        size: 'medium',
        type: 'normal'
    };

    static Item: typeof BreadcrumbItem;

    render() {
        const {
            separator,
            prefixCls,
            style,
            className,
            children,
            size,
            type
        } = this.props;
        const crumbs = React.Children.map(children, (element, index) => {
            if (!React.isValidElement(element)) {
                return element;
            }
            return cloneElement(element, {
                separator,
                key: index
            });
        });
        const breadcrumbCls = classnames(
            prefixCls,
            `${prefixCls}-${size}`,
            className,
            `${prefixCls}-${type}`
        );
        return (
            <div className={breadcrumbCls} style={style}>
                {crumbs}
            </div>
        );
    }
}

export default Breadcrumb;
