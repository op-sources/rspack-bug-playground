/**
 * 文字链
 * @author huangshiming
 * @email huangshiming@baidu.com
 */
import React, {PureComponent} from 'react';
import {classnames} from '../../core/commonTools';
import {withConfigConsumer} from '../providerConfig/context';
import {LinkProps} from './interface';
import NavLink from './navLink';

@withConfigConsumer('text-link')
class Link extends PureComponent<LinkProps> {

    static defaultProps = {
        type: 'normal',
        target: '_self',
        size: 'medium',
        prefixCls: 'one-text-link',
        disabled: false,
        isAtag: false
    }

    static NavLink: typeof NavLink;

    onClick = () => {
        const {toUrl, target, disabled} = this.props;
        if (disabled) {
            return;
        }
        window.open(toUrl, target);
    }

    render() {
        const {
            type, className, prefixCls,
            children, disabled, size,
            isAtag, target, toUrl, ...rest
        } = this.props;
        const linkClassName = classnames(prefixCls, className, `${prefixCls}-${size}`, {
            [`${prefixCls}-${type}`]: type,
            [`${prefixCls}-disabled`]: disabled,
            [`${prefixCls}-is-a-tag`]: isAtag
        });
        if (isAtag) {
            return disabled
                ? <a {...rest} className={linkClassName}>{children}</a>
                : <a {...rest} className={linkClassName} target={target} href={toUrl}>{children}</a>;
        }
        return (
            <span {...rest} className={linkClassName} onClick={this.onClick}>
                {children}
            </span>
        );
    }
}

export default Link;
