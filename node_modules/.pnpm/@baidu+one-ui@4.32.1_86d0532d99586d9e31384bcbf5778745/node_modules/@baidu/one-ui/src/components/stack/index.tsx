import React, { forwardRef } from 'react';
import classNames from 'classnames';
import { StackProps } from './interface';

/**
 * @visibleName Stack
 */
export const Stack = forwardRef<HTMLDivElement, StackProps>(({
    prefixCls,
    children,
    className,
    direction,
    wrap,
    inline,
    align,
    justify,
    gap,
    ...restProps
}, ref) => {
    const rootClass = classNames(prefixCls, className, {
        [`${prefixCls}-wrap`]: wrap,
        [`${prefixCls}-inline`]: inline,
        [`${prefixCls}-${direction}`]: direction,
        [`${prefixCls}-gap`]: gap
    });
    const realAlign = align || ( direction === 'row' ? 'center' : 'stretch');
    const innerClass = classNames(`${prefixCls}-inner`, {
        [`${prefixCls}-inner-gap-${gap}`]: typeof gap === 'string',
        [`${prefixCls}-inner-align-${realAlign}`]: realAlign,
        [`${prefixCls}-inner-justify-${justify}`]: justify
    });
    const innerStyle = (typeof gap === 'number' && gap > 0)
        ? {[`--${`${prefixCls}-gap`}`]: `${gap}px`}
        : null;
    return (
        <div className={rootClass} {...restProps} ref={ref}>
            <div className={innerClass} style={innerStyle}>{children}</div>
        </div>
    );
});

Stack.defaultProps = {
    prefixCls: 'one-stack',
    direction: 'row',
    wrap: false,
    inline: false
};

Stack.displayName = 'Stack';

export default Stack;
export * from './interface';
