import React, {PureComponent} from 'react';
import {classnames} from '../../../core/commonTools';

interface ContentProps {
    prefixCls: string,
    isActive: boolean,
    children: any,
    destroyNotActivePanel: boolean,
    renderDomWhenHide: boolean,
    contentClassName: string
}

export default class Content extends PureComponent<ContentProps> {

    isItemActive: boolean;

    render() {
        // 判断isItemActive再与避免不用的重复渲染
        const {
            renderDomWhenHide, isActive, prefixCls,
            children, destroyNotActivePanel, contentClassName
        } = this.props;
        this.isItemActive = renderDomWhenHide || this.isItemActive || isActive;
        if (!this.isItemActive) {
            return null;
        }
        const contentCls = classnames(`${prefixCls}-item-content`, {
            [`${prefixCls}-item-content-active`]: isActive,
            [`${prefixCls}-item-content-not-active`]: !isActive
        }, contentClassName);
        const child = !renderDomWhenHide && !isActive && destroyNotActivePanel
            ? null
            : <div className={`${prefixCls}-content-box`}>{children}</div>;
        return (
            <div className={contentCls}>{child}</div>
        );
    }
}
