import {ReactElement, ReactNode} from 'react';
import {BasePropsWithChildren} from '../interface';

export interface CascaderOptionFieldNames {

    /**
     * 标签key
     */
    label?: string;

    /**
     * 值key
     */
    value?: string;

    /**
     * 子节点key
     */
    children?: string;
};

export interface CascaderOption {
    /**
     * 值
     */
    value?: string | number,

    /**
     * 标签
     */
    label?: ReactNode,

    /**
     * 禁用
     */
    disabled?: boolean,

    /**
     * 是否可选
     */
    selectable?: boolean,

    /**
     * 子节点
     */
    children?: CascaderOption[],

    /**
     * 展开类型
     * inline: 内联展开
     * toggle: 内联可收起
     * column: 右侧展开
     */
    expandType?: 'inline' | 'toggle' | 'column',

    [key: string]: any;
}

export interface CascaderProps extends BasePropsWithChildren {

    /**
     * 可选项数据源
     */
    options?: CascaderOption[],

    /**
     * 指定选中项
     */
    value?: Array<string | number>,

    /**
     * 默认的选中项
     */
    defaultValue?: Array<string | number>,

    /**
     * 选择完成后的回调
     */
    onChange?: (value: Array<string | number>, selectedOptions: CascaderOption[]) => void,

    /**
     * 选择后展示的渲染函数
     */
    displayRender?: (label: string, selectedOptions: CascaderOption[], prefixCls: string) => ReactNode,

    /**
     * 自定义浮层类名
     */
    popupClassName?: string,

    /**
     * 浮层预设位置：`bottomLeft` `bottomRight` `topLeft` `topRight`
     */
    popupPlacement?: 'bottomLeft' | 'bottomRight' | 'topLeft' | 'topRight',

    /**
     * 输入框占位文本
     */
    placeholder?: string,

    /**
     * 输入框大小
     */
    size?: 'large' | 'medium' | 'small',

    /**
     * 是否多选
     */
    multiple?: boolean,

    /**
     * 首列分组
     */
    firstColumnGroup?: boolean,

    /**
     * 是否展示全部(多选使用)
     */
    showCheckAll?: boolean,

    /**
     * 展示父级，单选时使用
     */
    displayParent?: boolean,

    /**
     * 禁用
     */
    disabled?: boolean,

    /**
     * 是否支持清除
     */
    allowClear?: boolean,

    /**
     * 自定义前置内容
     */
    before?: ReactNode,

    /**
     * 是否展示 分为boolean 和 object 两种
     * 为对象的时候
     * filter接收 inputValue path 两个参数，当 path 符合筛选条件时，应返回 true，反之则返回 false
     * matchInputWidth搜索结果列表是否与输入框同宽
     * render 用于渲染 filter 后的选项
     * sort用于排序 filter 后的选项
     */
    showSearch?: boolean | {
        filter?: (query: string, path: CascaderOption[], fieldNames?: CascaderOptionFieldNames) => boolean,
        matchInputWidth?: boolean,
        render?: (query: string, path: CascaderOption[], prefixCls?: string) => ReactNode,
        sort?:
            (a: CascaderOption[], b: CascaderOption[], query: string, fieldNames?: CascaderOptionFieldNames) => number
    },

    /**
     * 搜索没有内容的时候
     */
    notFoundContent?: ReactNode,

    /**
     * 用于动态加载选项，无法与 showSearch 一起使用
     */
    loadData?: (activedOptions: CascaderOption[]) => void,

    /**
     * 次级菜单的展开方式，可选 'click' 和 'hover
     */
    expandTrigger?: 'click' | 'hover',

    /**
     * 当此选项为true时，点选每级菜单选项值都会发生变化
     */
    changeOnSelect?: boolean,

    /**
     * 浮层可见变化时回调
     */
    onPopupVisibleChange?: (visible: boolean) => void,

    /**
     * 输入框的前缀类名
     */
    inputPrefixCls?: string,

    /**
     * 弹层挂载的位置的方法
     */
    getPopupContainer?: (triggerNode: HTMLElement) => HTMLElement,

    /**
     * 弹层是否可视
     */
    popupVisible?: boolean,

    /**
     * 弹层宽度
     */
    popupWidthStretch?: 'width' | 'min-width',

    /**
     * 自定义 options 中 label name children 的字段
     */
    fieldNames?: CascaderOptionFieldNames,

    /**
     * 展开面板的时候是否默认展示placeholder
     */
    showPlaceHolderWhenFocuse?: boolean,

    /**
     * 级联器的width
     *
     * @deprecated use `className` or `style`
     */
    width?: number,

    /**
     * 级联器的搜索是否受控
     */
    inputIsControlled?: boolean,

    /**
     * 搜索change的时候触发方法
     */
    onInputChange?: (value: string) => void,

    /**
     * 当此选项为true时，点选每级菜单选项值都会发起loadData
     */
    loadOnSelect?: boolean,

    /**
     * 菜单列头部区
     */
    columnHeader?: ReactNode | ((columnIndex: number, parentOption?: CascaderOption) => ReactNode),

    /**
     * 菜单列底部区
     */
    columnFooter?: ReactNode | ((columnIndex: number, parentOption?: CascaderOption) => ReactNode),

    /**
     * 头部内容区
     */
    header?: ReactNode | (() => ReactNode),

    /**
     * 底部内容区
     */
    footer?: ReactNode | (() => ReactNode),

    /**
     * 自定义选项
     */
    renderOption?:
        (param: {
            node: ReactElement,
            option: CascaderOption
        }) => ReactElement;

    /**
     * @internal
     * @deprecated
     */
    transitionName?: string,

    children?: ReactElement
};
