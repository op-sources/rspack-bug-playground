const targetOffset = [0, 0];

export function getOverflowOptions(autoAdjustOverflow) {
    const autoAdjustOverflowEnabled = {
        adjustX: 1,
        adjustY: 1
    };
    const autoAdjustOverflowDisabled = {
        adjustX: 1,
        adjustY: 1
    };
    if (typeof autoAdjustOverflow === 'boolean') {
        return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;
    }
    return {
        ...autoAdjustOverflowDisabled,
        ...autoAdjustOverflow
    };
}

export default function getPlacements(config) {
    const {
        arrowWidth = 5,
        horizontalArrowShift = 16,
        verticalArrowShift = 12,
        autoAdjustOverflow = true,
        arrowPointAtCenter
    } = config;
    const placementMap = {
        left: {
            points: ['cr', 'cl'],
            offset: [-4, 0]
        },
        right: {
            points: ['cl', 'cr'],
            offset: [4, 0]
        },
        top: {
            points: ['bc', 'tc'],
            offset: [0, -4]
        },
        bottom: {
            points: ['tc', 'bc'],
            offset: [0, 4]
        },
        topLeft: {
            points: arrowPointAtCenter ? ['bl', 'tc'] : ['bl', 'tl'],
            offset: arrowPointAtCenter ? [-(horizontalArrowShift + arrowWidth), -4] : [0, -4]
        },
        leftTop: {
            points: arrowPointAtCenter ? ['tr', 'cl'] : ['tr', 'tl'],
            offset: arrowPointAtCenter ? [-4, -(verticalArrowShift + arrowWidth)] : [-4, 0]
        },
        topRight: {
            points: arrowPointAtCenter ? ['br', 'tc'] : ['br', 'tr'],
            offset: arrowPointAtCenter ? [horizontalArrowShift + arrowWidth, -4] : [0, -4]
        },
        rightTop: {
            points: arrowPointAtCenter ? ['tl', 'cr'] : ['tl', 'tr'],
            offset: arrowPointAtCenter ? [4, -(verticalArrowShift + arrowWidth)] : [4, 0]
        },
        bottomRight: {
            points: arrowPointAtCenter ? ['tr', 'bc'] : ['tr', 'br'],
            offset: arrowPointAtCenter ? [horizontalArrowShift + arrowWidth, 4] : [0, 4]
        },
        rightBottom: {
            points: arrowPointAtCenter ? ['bl', 'cr'] : ['bl', 'br'],
            offset: arrowPointAtCenter ? [4, verticalArrowShift + arrowWidth] : [4, 0]
        },
        bottomLeft: {
            points: arrowPointAtCenter ? ['tl', 'bc'] : ['tl', 'bl'],
            offset: arrowPointAtCenter ? [-(horizontalArrowShift + arrowWidth), 4] : [0, 4]
        },
        leftBottom: {
            points: arrowPointAtCenter ? ['br', 'cl'] : ['br', 'bl'],
            offset: arrowPointAtCenter ? [-4, verticalArrowShift + arrowWidth] : [-4, 0]
        }
    };
    Object.keys(placementMap).forEach(key => {
        placementMap[key] = {
            ...placementMap[key],
            overflow: getOverflowOptions(autoAdjustOverflow),
            targetOffset
        };
    });
    return placementMap;
}
