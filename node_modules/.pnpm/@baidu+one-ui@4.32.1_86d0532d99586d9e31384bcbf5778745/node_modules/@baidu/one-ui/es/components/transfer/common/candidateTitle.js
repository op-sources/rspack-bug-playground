import _extends from "@babel/runtime/helpers/extends";

/**
 * @file candidate render
 * @author huangshiming
 * @date 2020-05-16
 */
import React from 'react';
import Title from './title';
import Button from '../../button';
import Tooltip from '../../tooltip';
import { getCandidateNumber } from '../../../core/transferTools';
;

var CandidateTitle = function CandidateTitle(props) {
  var prefixCls = props.prefixCls,
      maxSelectedNum = props.maxSelectedNum,
      allDataMap = props.allDataMap,
      candidateList = props.candidateList,
      selectedList = props.selectedList,
      treeName = props.treeName,
      size = props.size,
      onSelectAll = props.onSelectAll,
      showSelectAll = props.showSelectAll,
      showCandidateNum = props.showCandidateNum,
      CustomCandidateOperation = props.CustomCandidateOperation;
  var candidateNum = (getCandidateNumber(allDataMap, candidateList) || []).length;
  var crossLength = 0;
  candidateList.forEach(function (candidate) {
    var strSelectedList = selectedList.map(function (item) {
      return "" + item;
    });

    if (strSelectedList.indexOf("" + candidate) > -1) {
      crossLength++;
    }
  });
  var selectedListLength = selectedList.length;
  var disabledAddAll = maxSelectedNum && maxSelectedNum <= selectedListLength || maxSelectedNum && candidateNum > maxSelectedNum || maxSelectedNum && maxSelectedNum < selectedListLength + candidateNum - crossLength;
  var AddAllButton = /*#__PURE__*/React.createElement(Button, {
    type: "text-strong",
    size: size,
    className: prefixCls + "-add-all-button",
    disabled: disabledAddAll,
    onClick: onSelectAll
  }, "\u5168\u9009");
  var titleRender;

  if (props.CandidateTitleRender && typeof props.CandidateTitleRender === 'function') {
    var customRenderProps = {
      title: '可选',
      showCandidateNum: showCandidateNum,
      showSelectedNum: false,
      unSelectedNum: candidateNum,
      selectedNum: selectedListLength
    };
    var CustomCandidateTitleRender = props.CandidateTitleRender;
    titleRender = /*#__PURE__*/React.createElement(CustomCandidateTitleRender, _extends({}, props, customRenderProps));
  } else if (props.CandidateTitleRender && typeof props.CandidateTitleRender === 'object') {
    titleRender = props.CandidateTitleRender;
  } else {
    titleRender = /*#__PURE__*/React.createElement(Title, _extends({}, props, {
      title: "\u53EF\u9009",
      showCandidateNum: showCandidateNum,
      showSelectedNum: false,
      candidateNum: candidateNum,
      selectedNum: selectedListLength
    }));
  }

  var operation;

  if (CustomCandidateOperation) {
    operation = CustomCandidateOperation;
  } else {
    operation = !showSelectAll ? null : disabledAddAll ? /*#__PURE__*/React.createElement(Tooltip, {
      title: "\u53EF\u9009" + treeName + "\u6570\u91CF\u8D85\u8FC7\u53EF\u6DFB\u52A0\u6570\u91CF\u7684\u4E0A\u9650\uFF0C\u65E0\u6CD5\u6267\u884C\u5168\u90E8\u6DFB\u52A0",
      placement: "rightBottom"
    }, AddAllButton) : AddAllButton;
  }

  return /*#__PURE__*/React.createElement("div", {
    className: prefixCls + "-pane-title"
  }, titleRender, operation);
};

export default CandidateTitle;