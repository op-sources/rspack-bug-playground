import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import React, { Component } from 'react';
import Button from '../button';
;
;

var ActionButton = /*#__PURE__*/function (_Component) {
  _inheritsLoose(ActionButton, _Component);

  function ActionButton(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.onClick = function () {
      var _this$props = _this.props,
          actionFn = _this$props.actionFn,
          closeModal = _this$props.closeModal,
          triggerCancel = _this$props.triggerCancel;

      if (actionFn) {
        var ret;

        if (actionFn.length) {
          ret = actionFn(closeModal);
        } else {
          ret = actionFn();

          if (!ret) {
            closeModal({
              triggerCancel: triggerCancel
            });
          }
        }

        if (ret && ret.then) {
          _this.setState({
            loading: true
          });

          ret.then(function () {
            closeModal({
              triggerCancel: triggerCancel
            });
          }, function () {
            _this.setState({
              loading: false
            });
          });
        }
      } else {
        closeModal({
          triggerCancel: triggerCancel
        });
      }
    };

    _this.state = {
      loading: false
    };
    return _this;
  }

  var _proto = ActionButton.prototype;

  _proto.render = function render() {
    var _this$props2 = this.props,
        children = _this$props2.children,
        order = _this$props2.order,
        style = _this$props2.style,
        otherProps = _this$props2.otherProps,
        actionFn = _this$props2.actionFn,
        closeModal = _this$props2.closeModal,
        triggerCancel = _this$props2.triggerCancel,
        restProps = _objectWithoutPropertiesLoose(_this$props2, ["children", "order", "style", "otherProps", "actionFn", "closeModal", "triggerCancel"]);

    var loading = this.state.loading;
    return /*#__PURE__*/React.createElement(Button, _extends({}, restProps, otherProps, {
      style: _extends({}, style, otherProps.style, {
        order: order
      }),
      onClick: this.onClick,
      loading: loading
    }), children);
  };

  return ActionButton;
}(Component);

ActionButton.defaultProps = {
  otherProps: {},
  triggerCancel: true
};
export { ActionButton as default };