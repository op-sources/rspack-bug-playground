import { PureComponent } from 'react';
import { BaseProps } from '../interface';
import { CascaderProps } from './interface';
declare type CascaderTriggerProps = BaseProps & Pick<CascaderProps, 'width' | 'disabled' | 'size' | 'options' | 'multiple' | 'placeholder' | 'before' | 'allowClear' | 'showSearch' | 'onInputChange' | 'inputPrefixCls' | 'displayRender' | 'displayParent'> & {
    expanded: boolean;
    onRemove(key: string): void;
    onRemoveAll(): void;
    onSearch(query: string): void;
    query: string;
};
export default class Trigger extends PureComponent<CascaderTriggerProps> {
    state: {
        query: string;
        rawInputValue: string;
        inputWidth: number;
        options: any[];
    };
    static getDerivedStateFromProps(props: any, state: any): {
        query: any;
        rawInputValue: any;
    };
    handleInputKeyDown: (e: any) => void;
    handleInputValue: (e: any) => void;
    handleOnSearch: (e: any) => void;
    handleInputBlur: () => void;
    handleRemove: (key: any) => void;
    handleRemoveAll: (event: any) => void;
    inputRef: any;
    inputMeasureRef: any;
    saveInputRef: (ref: any) => void;
    saveInputMeasureRef: (ref: any) => void;
    prefix(name: any): string;
    componentDidUpdate(): void;
    render(): {};
    renderQueryInput(): JSX.Element;
    renderPlaceholder(): JSX.Element;
    renderResult(options: any): JSX.Element;
    defaultRender(options: any): JSX.Element;
    renderResults(): JSX.Element | JSX.Element[];
}
export {};
