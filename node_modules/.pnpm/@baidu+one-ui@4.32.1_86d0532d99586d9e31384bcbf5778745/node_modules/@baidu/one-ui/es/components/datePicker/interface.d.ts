import { ReactNode } from 'react';
import { BaseProps } from '../interface';
interface BaseDatePickerProps {
    /**
     * 尺寸
     */
    size?: 'small' | 'medium';
    /**
     * 禁用
     */
    disabled?: boolean;
    /**
     * 日期格式， 可以被dayjs识别的日期格式 eg: YYYY/MM/DD
     */
    dateFormat?: string;
    /**
     * 可选日期的最小日期
     */
    validateMinDate?: string;
    /**
     * placeholder
     */
    placeholder?: string;
    /**
     * 可选日期的最大日期
     */
    validateMaxDate?: string;
    /**
     * 弹层渲染父节点
     */
    getPopupContainer?: (triggerNode: HTMLElement) => HTMLElement;
    /**
     * 日期面板是否可见
     */
    defaultVisible?: boolean;
    /**
     * 日期面板是否可见，受控
     */
    visible?: boolean;
    /**
     *
     * 面板可视变化的时候触发
     */
    onVisibleChange?(visible: boolean): void;
    /**
     * 展示清空按钮
     */
    showDeleteIcon?: boolean;
    /**
     * 清空的回调
     */
    onDelete?(): void;
    /**
     * 弹层位置
     */
    popupPlacement?: 'bottomLeft' | 'bottomRight' | 'topLeft' | 'topRight';
    /**
     * 自定义触发区文案
     */
    customButtonTitle?: ReactNode;
    /**
     * 点击触发区回调
     */
    onClickButton?(event: React.MouseEvent<Element, MouseEvent>): void;
}
export interface DatePickerProps extends BaseDatePickerProps, BaseProps {
    /**
     * 日期 如：2019/08/11
     */
    defaultValue?: string | string[];
    /**
     * 日期，受控 如：2019/08/11
     */
    value?: string | string[];
    /**
     * 选中日期时触发
     */
    onChange?(value: string | string[]): void;
    /**
     * 校验器，如果校验错误，则不触发onChange
     */
    validator?(value: string | string[]): string;
    /**
     * 日期是否disabled校验，dayItem：日期，timeStamp：时间戳，getTimeStamp：时间戳函数
     */
    validateDisabled?(value: {
        dayItem: string;
        timeStamp: number;
        getTimeStamp(value: string): number;
    }): boolean;
    /**
     * 选择方式：按周 | 按日
     */
    mode?: 'week' | 'date';
}
export interface RangePickerProps extends Omit<BaseDatePickerProps, 'placeholder'>, BaseProps {
    /**
     * 日期 如：['2019/08/11', '2019/11/11']
     */
    defaultValue?: string[];
    /**
     * 日期, 受控 如：['2019/08/11', '2019/11/11']
     */
    value?: string[];
    /**
     * placeholder
     */
    placeholder?: string[];
    /**
     * 选中日期时触发
     */
    onChange?(value: string[]): void;
    /**
     * 校验器，如果校验错误，则不触发onChange
     */
    validator?(value: string[]): string;
    /**
     * 自定义快捷方式
     * 类型为 number 时，表示以「今天」为基准，偏移指定天数，比如 -1 等价于 { startOf: 'day', days: -1 }，即「昨天」；
     */
    shortcuts?: {
        label: string;
        from: number | {
            startOf: 'month' | 'week' | 'day';
            months?: number;
            weeks?: number;
            days?: number;
        };
        to: number | {
            startOf: 'month' | 'week' | 'day';
            months?: number;
            weeks?: number;
            days?: number;
        };
    }[];
    /**
     * 日期是否disabled校验，dayItem：日期，timeStamp：时间戳，getTimeStamp：时间戳函数, selectedValue: 当前选则时间
     */
    validateDisabled?(value: {
        selectedValue: string[];
        dayItem: string;
        timeStamp: number;
        getTimeStamp(value: string): number;
    }): boolean;
    /**
     * 选择方式：按周 | 按日
     */
    mode?: 'week' | 'date';
}
export interface MonthPickerProps extends BaseDatePickerProps, BaseProps {
    /**
     * 日期 如：2019/08
     */
    defaultValue?: string;
    /**
     * 日期, 受控 如：2019/08
     */
    value?: string;
    /**
     * 选中日期时触发
     */
    onChange?(value: string): void;
    /**
     * 校验器，如果校验错误，则不触发onChange
     */
    validator?(value: string): string;
}
export {};
