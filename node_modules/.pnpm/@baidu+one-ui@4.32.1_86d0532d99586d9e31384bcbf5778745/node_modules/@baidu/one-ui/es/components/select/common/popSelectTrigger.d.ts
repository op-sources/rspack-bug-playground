import { PureComponent, ReactNode } from 'react';
interface PopSelectTriggerProps {
    trigger: any;
    children: any;
    defaultVisible?: boolean;
    visible: boolean;
    transitionName: string;
    animation?: any;
    onVisibleChange(visible: boolean): any;
    afterVisibleChange?(): any;
    overlay: ReactNode | (() => ReactNode);
    overlayStyle: object;
    overlayClassName: string;
    prefixCls: string;
    mouseEnterDelay: number;
    mouseLeaveDelay: number;
    getPopupContainer(): HTMLElement;
    destroyPopUpOnHide: boolean;
    align: object;
    id?: string;
    dropdownMatchSelectWidth: boolean;
    popupPlacement: string;
}
interface PopSelectTriggerState {
    dropdownWidth: number;
}
declare class PopSelectTrigger extends PureComponent<PopSelectTriggerProps, PopSelectTriggerState> {
    static defaultProps: {
        prefixCls: string;
        mouseEnterDelay: number;
        destroyPopUpOnHide: boolean;
        mouseLeaveDelay: number;
        align: {};
        trigger: string[];
        dropdownMatchSelectWidth: boolean;
        popupPlacement: string;
    };
    constructor(props: any);
    trigger: any;
    root: any;
    componentDidMount(): void;
    componentDidUpdate(): void;
    setDropdownWidth: () => void;
    getPopupElement: () => JSX.Element;
    getPopupDomNode(): any;
    saveTrigger: (node: any) => void;
    saveRoot: (node: any) => void;
    render(): JSX.Element;
}
export default PopSelectTrigger;
