import { ReactNode } from "react";
import { BaseProps, BasePropsWithChildren } from "../interface";
export declare type TagDataItem = {
    label: ReactNode;
    value: string;
    tagProps?: TagProps;
};
export interface TagProps extends BasePropsWithChildren {
    /**
     * tag是否可以关闭
     */
    closable?: boolean;
    /**
     * tag点击关闭时的回调
     */
    onClose?(e: MouseEvent | string): void;
    /**
     * 自定义tag的颜色
     */
    color?: string;
    /**
     * 尺寸
     */
    size?: 'small' | 'medium';
    /**
     * 禁用
     */
    disabled?: boolean;
    /**
     * 是否可点击
     */
    checkable?: boolean;
    /**
     * checkable为true的时候的回调函数，暴露checked
     */
    onChange?(checked: boolean): void;
    /**
     * checked 是否被选中，checkable为true的时候才生效
     */
    checked?: boolean;
    /**
     * tip状态
     */
    tipTag?: 'success' | 'warning' | 'error' | 'info';
    /**
     * 是否需要带边框，默认是带边框的
     */
    bordered?: boolean;
    /**
     * 没有关闭
     */
    noClosed?: boolean;
}
export interface TagGroupProps extends BaseProps {
    /**
     * 默认值
     */
    defaultValue?: string[];
    /**
     * 区分单选和多选，单选取数组第1个
     */
    value?: string[];
    /**
     * mode 单选还是多选
     */
    mode?: 'unique' | 'multiple';
    /**
     * 数据源
     */
    dataSource?: TagDataItem[];
    /**
     * 变化回调
     * @param value 值
     */
    onChange?(value: string[]): void;
    /**
     * 尺寸
     */
    size?: 'small' | 'medium';
}
export interface TagEditableGroupProps extends BaseProps {
    /**
     * 数据源
     */
    dataSource?: TagDataItem[];
    /**
     * 默认数据源
     */
    defaultDataSource?: TagDataItem[];
    /**
     * 删除
     *
     * @param tags 标签
     * @param value 当前值
     */
    onClose?(tags: TagDataItem[], value: string): void;
    /**
     * 尺寸
     */
    size?: 'small' | 'medium';
    /**
     * 输入框回车确定
     *
     * @param tags 标签
     * @param value 当前输入值
     */
    onInputConfirm?(tags: TagDataItem[], value: string): void;
}
