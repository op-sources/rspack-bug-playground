import { ReactElement, ReactNode } from 'react';
import { BasePropsWithChildren } from '../interface';
export interface SelectOptionProps extends BasePropsWithChildren {
    /**
     * 默认根据此属性值进行筛选
     */
    value: string | number;
    /**
     * 是否禁用
     */
    disabled?: boolean;
    /**
     * 值为custom时，option不会收起，可以在option里面写自定义跳转或者其他交互
     */
    type?: 'custom' | 'normal';
    /**
     * 是否为排它项。当为排它项时，选中该项将取消选中其它所有选项。
     * 多选时使用，且不可开启全选。
     */
    exclusive?: boolean;
}
export interface SelectOptionGroupProps {
    /**
     * 组名
     */
    label: ReactNode;
    children: ReactElement<SelectOptionProps>[];
}
export declare type SelectValueType = {
    /**
     * @deprecated
     */
    labelInValue?: boolean;
    /**
     * 下拉选择类型
     */
    mode?: 'default';
    /**
     * 下拉选择的value
     */
    value?: string | number;
    /**
     * 下拉选择默认选中的value
     */
    defaultValue?: string | number;
    /**
     * 选中触发的onChange
     */
    onChange?: (value: string | number, option: ReactElement<SelectOptionProps>) => void;
} | {
    /**
     * 下拉选择类型
     */
    mode?: 'multiple' | 'combobox' | 'tags';
    /**
     * @deprecated
     */
    labelInValue?: boolean;
    /**
     * 下拉选择的value
     */
    value?: Array<string | number>;
    /**
     * 下拉选择默认选中的value
     */
    defaultValue?: Array<string | number>;
    /**
     * 选中触发的onChange
     */
    onChange?: (value: Array<string | number>, options: ReactElement<SelectOptionProps>[]) => void;
} | {
    /**
     * 下拉选择类型
     */
    mode?: 'multiple';
    /**
     * 是否支持全选
     */
    showCheckAll?: boolean;
    /**
     * 下拉选择的value
     */
    value?: Array<string | number>;
    /**
     * 下拉选择默认选中的value
     */
    defaultValue?: Array<string | number>;
    /**
     * 选中触发的onChange
     */
    onChange?: (value: Array<string | number>, options: ReactElement<SelectOptionProps>[]) => void;
};
interface SelectBaseProps extends BasePropsWithChildren {
    /**
     * 下拉选择尺寸
     */
    size?: 'xsmall' | 'small' | 'medium' | 'large';
    /**
     * 搜索时候无内容展现
     */
    notFoundContent?: ReactNode;
    /**
     * 底部自定义区
     */
    footer?: ReactNode | (() => ReactNode);
    /**
     * 动效
     * @deprecated
     */
    transitionName?: string;
    /**
     * @deprecated
     */
    choiceTransitionName?: string;
    /**
     * 是否可搜索
     */
    showSearch?: boolean;
    /**
     * 是否允许清空
     */
    allowClear?: boolean;
    /**
     * 是否禁用
     */
    disabled?: boolean;
    /**
     * placeholder
     */
    placeholder?: string;
    /**
     * 下拉选择自定义类名
     */
    dropdownClassName?: string;
    /**
     * 搜索时触发
     */
    onSearch?: (query: string) => void;
    /**
     * 搜索时是否支持筛选
     */
    filterOption?: boolean | ((query: string, option: ReactElement<SelectOptionProps>) => boolean);
    /**
     * 搜索高亮的节点，默认'children'; 如果是value;展示value值
     */
    optionLabelProp?: string;
    /**
     * 搜索框失去焦点触发
     */
    onBlur?: () => void;
    /**
     * 搜索框触发焦点
     */
    onFocus?: () => void;
    /**
     * 下拉弹窗是否与target同宽
     */
    dropdownMatchSelectWidth?: boolean;
    /**
     * 筛选的节点
     */
    optionFilterProp?: string;
    /**
     * 默认第一个是否高亮
     */
    defaultActiveFirstOption?: boolean;
    /**
     * 弹窗挂载的节点
     */
    getPopupContainer?: (triggerNode: HTMLElement) => HTMLElement;
    /**
     * dropdown visible改变的时候触发
     */
    onDropdownVisibleChange?: (visible: boolean) => void;
    /**
     * 弹窗弹出来的trigger
     */
    trigger?: string;
    /**
     * 下拉选择器名称
     */
    selectorName?: string;
    /**
     * 外部指定的报错信息 - 该字段只在mode为multiple时生效
     *
     * @deprecated
     */
    errorMessage?: string;
    /**
     * 指定输入框的宽度
     */
    width?: string | number;
    /**
     * 自定义target区域的规则, 只能用于单选，或者多选中的 emun、count、custom情况
     */
    customRenderTarget?: (singleValue: any, optionInfo?: any) => ReactNode;
    /**
     * 多选的target回填，四类回填 enum, list, count, custom （枚举，陈列，计数，自定义枚举）
     */
    multipleRenderTargetMode?: 'enum' | 'list' | 'count' | 'custom';
    /**
     * 是否默认展示下拉面板
     */
    defaultVisible?: boolean;
    /**
     * 是否展示下拉面板
     */
    visible?: boolean;
    /**
     * 替换下拉icon
     *
     * @deprecated
     */
    suffixIcon?: ReactNode;
    /**
     * 多选框prefixCls
     *
     * @deprecated
     */
    checkboxPrefixCls?: string;
    /**
     * 穿梭框是否是loading状态
     */
    loading?: boolean;
    /**
     * 穿梭框的loading文案
     */
    loadingText?: ReactNode;
    /**
     * 选择数量限制
     */
    maxTagCount?: number;
    /**
     * 是否选中后自动清除搜索，多选时配置有效
     */
    autoClearSearchValue?: boolean;
}
export declare type SelectProps = SelectBaseProps & SelectValueType;
export {};
