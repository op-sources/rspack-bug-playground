import { PureComponent, ReactNode } from 'react';
import { CheckboxGroupProps } from './interface';
interface CheckboxGroupState {
    value: (number | string)[];
}
declare type Option = {
    label: ReactNode;
    value: string | number;
    disabled?: boolean;
    exclusive?: boolean;
};
declare class CheckboxGroup extends PureComponent<CheckboxGroupProps, CheckboxGroupState> {
    static defaultProps: CheckboxGroupProps;
    constructor(props: CheckboxGroupProps);
    getContext(): {
        toggleOption: (option: Option) => void;
        register: (option: any) => void;
        unregister: (option: any) => void;
        value: (string | number)[];
        disabled: boolean;
        size: "medium" | "small";
        type: "strong" | "simple";
    };
    static getDerivedStateFromProps(nextProps: CheckboxGroupProps): {
        value: (string | number)[];
    };
    options: any[];
    getOptions(): Option[];
    register: (option: any) => void;
    unregister: (option: any) => void;
    exclusive(val: any): boolean;
    toggleOption: (option: Option) => void;
    render(): JSX.Element;
}
export default CheckboxGroup;
