import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import React, { Component } from 'react';
import { classnames } from '../../../core/commonTools';

var LazyRenderBox = /*#__PURE__*/function (_Component) {
  _inheritsLoose(LazyRenderBox, _Component);

  function LazyRenderBox() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = LazyRenderBox.prototype;

  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
    return !!nextProps.hiddenClassName || !!nextProps.visible;
  };

  _proto.render = function render() {
    var _classnames;

    var _this$props = this.props,
        className = _this$props.className,
        hiddenClassName = _this$props.hiddenClassName,
        visible = _this$props.visible,
        restProps = _objectWithoutPropertiesLoose(_this$props, ["className", "hiddenClassName", "visible"]);

    return /*#__PURE__*/React.createElement("div", _extends({
      className: classnames(className, (_classnames = {}, _classnames[hiddenClassName] = !!hiddenClassName && !visible, _classnames))
    }, restProps));
  };

  return LazyRenderBox;
}(Component);

export { LazyRenderBox as default };