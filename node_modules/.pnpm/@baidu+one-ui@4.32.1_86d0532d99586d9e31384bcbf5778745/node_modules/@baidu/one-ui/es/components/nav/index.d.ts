/**
 * @file 导航组件
 * @author huangshiming
 * @date 2020-04-29
 */
import React, { PureComponent } from 'react';
import { NavProps } from './interface';
interface NavState {
    value?: string;
    hoverIndex?: number;
    lastShowIndex?: number;
}
declare class Nav extends PureComponent<NavProps, NavState> {
    static defaultProps: {
        className: string;
        dataSource: any[];
        onChange(): void;
        prefixCls: string;
    };
    resizeObserver: any;
    mutationObserver: any;
    itemTextRefMap: {};
    constructor(props: any);
    normalizeDataSource(): {
        disabled?: boolean;
        key: string;
        label: React.ReactNode;
        overlay?: {
            overlayElement?: React.ReactElement<any, string | React.JSXElementConstructor<any>>;
            hiddenPlacement: any;
            overlayProps?: import("../overlay").OverlayProps;
            className?: string;
        };
        href?: string;
        target?: string;
    }[];
    static getDerivedStateFromProps(nextProps: any, prevState: any): {
        value: any;
    };
    navContainerRef: any;
    componentDidMount(): void;
    componentWillUnmount(): void;
    getMenuItemsByDataSet: (dateset: any) => any;
    setWidthWithResize: () => void;
    getHoverItemTextRef: (index: any, itemRef: any) => void;
    onMouseEnterItem: (currentHoverIndex: any, disabled: any, e: any) => void;
    onMouseLeaveItem: () => void;
    renderItem: (item: any) => JSX.Element;
    onChange: (item: any) => void;
    navRef: (ref: any) => void;
    onOverlayVisibleChange: (visible: any, overlayProps: any, key: any) => void;
    renderOverFlowedItem: (prefixCls: any) => JSX.Element;
    render(): JSX.Element;
}
export default Nav;
export * from './interface';
