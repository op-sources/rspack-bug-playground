import { PureComponent } from 'react';
import Item from './menuItem';
import ItemGroup from './menuItemGroup';
import SubMenu from './subMenu';
import { MenuProps } from './interface';
interface MenuState {
    openKeys?: string[];
    inlineOpenKeys?: string[];
    inlineCollapsed?: boolean;
    switchModeFromInline?: boolean;
    mode?: 'inline' | 'vertical';
}
declare class Menu extends PureComponent<MenuProps, MenuState> {
    static Divider: ({ className, prefixCls, style }: {
        className?: any;
        prefixCls?: string;
        style?: any;
    }) => JSX.Element;
    static Item: typeof Item;
    static SubMenu: typeof SubMenu;
    static ItemGroup: typeof ItemGroup;
    static defaultProps: {
        mode: string;
        type: string;
        menuLevel: number;
        needBorder: boolean;
        popupClassName: string;
        arrowPosition: string;
        inlineIndent: number;
        inlinePaddingLeft: number;
        prefixCls: string;
    };
    constructor(props: any);
    getContext: () => {
        inlineCollapsed: boolean;
        inlineIndent: number;
        inlinePaddingLeft: number;
    };
    static getDerivedStateFromProps(props: any, state: any): MenuState;
    setOpenKeys: (openKeys: any) => void;
    getRealMenuMode: () => "vertical" | "inline";
    getInlineCollapsed: () => boolean;
    handleOpenChange: (openKeys: any) => void;
    handleClick: (e: any) => void;
    render(): JSX.Element;
}
export default Menu;
