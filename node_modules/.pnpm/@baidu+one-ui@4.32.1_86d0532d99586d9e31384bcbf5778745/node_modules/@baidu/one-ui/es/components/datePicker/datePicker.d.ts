import { MouseEvent, PureComponent } from 'react';
import { Store } from 'mini-store';
import { DatePickerProps } from './interface';
import RangePicker from './rangePicker';
import MonthPicker from './monthPicker';
interface DatePickerState {
    currentValue?: string[];
    visible?: boolean;
    errorMessage?: string;
    hoverDate?: string;
}
export interface DatePickerStore {
    _value: string | string[];
    showYear: number;
    showMonth: number;
    panelType: 'date' | 'month';
    validateMinDate: string;
    validateMaxDate: string;
    endDatePanelType?: 'date' | 'month';
    endDateShowYear?: number;
    endDateShowMonth?: number;
}
declare class DatePicker extends PureComponent<DatePickerProps, DatePickerState> {
    static defaultProps: {
        dateFormat: string;
        prefixCls: string;
        disabled: boolean;
        size: string;
        onVisibleChange: (...args: any[]) => void;
        onChange: (...args: any[]) => void;
        onClickButton: (...args: any[]) => void;
        getPopupContainer: () => HTMLElement;
        onDelete: (...args: any[]) => void;
        showDeleteIcon: boolean;
        placeholder: string;
    };
    static RangePicker: typeof RangePicker;
    static MonthPicker: typeof MonthPicker;
    constructor(props: DatePickerProps);
    store: Store<DatePickerStore>;
    static getDerivedStateFromProps: (nextProps: DatePickerProps) => DatePickerState;
    onMouseEnter: (value: string) => void;
    onMouseLeave: () => void;
    componentDidUpdate: (prevProps: DatePickerProps) => void;
    onSelectDay: (value: string | string[], colsePanel?: boolean) => void;
    renderDatePickerBody: () => JSX.Element;
    onLayerVisibleChange: (visible: boolean) => void;
    onOpenDatePicker: (e: MouseEvent) => void;
    onDetete: (e: MouseEvent) => void;
    render(): JSX.Element;
}
export default DatePicker;
