import { Component } from 'react';
import { InnerTableColumnProps } from './interface';
interface HeaderCellProps {
    prefixCls?: string;
    className?: string;
    render?(column: InnerTableColumnProps): any;
    column?: InnerTableColumnProps;
    index?: number;
    left?: number;
    onMoving?(e: {
        key: string;
        width: number;
    }): any;
    width?: number;
    onDragEnd?(): any;
    onDragStart?(): any;
    maxWidth?: any;
    minWidth?: any;
    onHeaderCellMouseEnter?(e: {
        key: string;
    }): any;
    onHeaderCellMouseLeave?(e: {
        key: string;
    }): any;
    dynamicWidth?: any;
}
declare class HeaderCell extends Component<HeaderCellProps> {
    static defaultProps: {
        column: {};
    };
    shouldComponentUpdate(nextProps: any): boolean;
    positionObj: any;
    dragging: any;
    cellRef: any;
    customProps: any;
    onDropped: () => void;
    onDragged: (props: any) => void;
    onMoving: (props: any) => void;
    onMouseEnter: () => void;
    onMouseLeave: () => void;
    getCellRef: (ref: any) => void;
    onClick: (e: any) => void;
    getKey(): string;
    render(): JSX.Element;
}
export default HeaderCell;
