import { PureComponent } from 'react';
import { NumberInputProps } from './interface';
interface NumberInputState {
    arrowUpDisable: boolean;
    arrowDownDisable: boolean;
    value: number | string;
    inputValue: number | string;
    hasFocus: boolean;
}
declare class NumberInput extends PureComponent<NumberInputProps, NumberInputState> {
    static defaultProps: {
        type: string;
        placeholder: string;
        prefixCls: string;
        disabled: boolean;
        max: any;
        min: any;
        step: number;
        fixed: number;
        onChange: () => void;
        onFocus: () => void;
        onBlur: () => void;
        showTip: boolean;
        errorMessage: string;
        location: string;
        tipLocation: any;
        errorLocation: any;
        tailLabel: any;
        width: any;
        mode: string;
        size: string;
        showErrorWithoutErrorMessage: boolean;
        showErrorMessage: boolean;
        autoFocus: boolean;
        showSpinButtons: boolean;
        valueAsNumber: boolean;
    };
    numberBoxRef: HTMLInputElement;
    constructor(props: any);
    static getDerivedStateFromProps(nextProps: any, prevState: any): {
        value: any;
        inputValue: any;
    };
    focus(): void;
    blur(): void;
    componentDidUpdate(): void;
    componentDidMount(): void;
    onInputBoxChange: (e: any) => void;
    onInputBoxBlur: (e: any) => void;
    onSpinButtonClick: (e: any) => void;
    onInputBoxFocus: (e: any) => void;
    disableArrow: (currentValue: any) => void;
    addRef: (node: any) => void;
    onButtonFocusIn: () => void;
    normalizeValue(value: any): any;
    handleOnChange(value: number | ''): void;
    renderPrefix(): JSX.Element;
    renderSuffix(): JSX.Element;
    render(): JSX.Element;
}
export default NumberInput;
