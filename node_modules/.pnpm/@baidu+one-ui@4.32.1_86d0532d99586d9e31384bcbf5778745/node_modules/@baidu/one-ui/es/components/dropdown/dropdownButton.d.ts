import { PureComponent } from 'react';
import { DropdownButtonProps } from './interface';
interface DropdownButtonState {
    isExpand?: boolean;
    searchValue?: string;
    dropdownWidth?: any;
    options?: any;
}
declare class DropdownButton extends PureComponent<DropdownButtonProps, DropdownButtonState> {
    static defaultProps: {
        prefixCls: string;
        disabled: boolean;
        dropdownHeight: string;
        showSearch: boolean;
        style: {};
        trigger: string[];
        notFound: string;
        loadingText: string;
        loading: boolean;
        className: string;
        searchPlaceholder: string;
        size: string;
        type: string;
        onClickButton(): void;
        buttonProps: {};
        primaryType: string;
        textLink: boolean;
        searchControlled: boolean;
        dropdownMatchSelectWidth: boolean;
        showArrow: boolean;
        overlayStyle: {};
        searchPrefixCls: string;
        onVisibleChange(): void;
        onHandleMenuClick(): void;
        handleMenuClick(): void;
        BottomCustomPanel: any;
    };
    constructor(props: any);
    dropdown: any;
    buttonRef: any;
    menuItemRef: any;
    componentDidMount(): void;
    componentDidUpdate(): void;
    static getDerivedStateFromProps: (nextProps: any, prevState: any) => DropdownButtonState;
    onSearch: () => void;
    onChangeSearch: (e: any) => void;
    onClearClick: () => void;
    getButtonRef: (ref: any) => void;
    getMenuItemRef: (ref: any) => void;
    getSubMenuItem: (option: any, optionLength: any, index: any) => JSX.Element;
    getDropdownOverlay: () => JSX.Element;
    getDropdownContainer: (ref: any) => void;
    handleMenuClick: (e: any) => void;
    dropdownVisibleChange: (visible: any) => void;
    setDropdownWidth: () => void;
    render(): JSX.Element;
}
export default DropdownButton;
