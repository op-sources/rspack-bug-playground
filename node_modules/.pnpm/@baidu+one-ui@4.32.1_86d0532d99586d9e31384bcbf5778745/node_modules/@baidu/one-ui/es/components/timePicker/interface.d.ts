import { CSSProperties, KeyboardEventHandler } from "react";
import { BaseProps } from "../interface";
export interface TimePickerProps extends BaseProps {
    /**
     * 尺寸
     */
    size?: 'small' | 'medium';
    /**
     * 时间值
     */
    value?: string;
    /**
     * 面板展开/收起状态
     */
    open?: boolean;
    /**
     * 禁用
     */
    disabled?: boolean;
    /**
     * 是否展现小时选择
     */
    showHour?: boolean;
    /**
     * 是否展现分钟选择
     */
    showMinute?: boolean;
    /**
     * 是否展现秒钟选择
     */
    showSecond?: boolean;
    /**
     * 是否采用12小时制 format 默认为 h:mm:ss a
     */
    use12Hours?: boolean;
    /**
     * 小时选项间隔
     */
    hourStep?: number;
    /**
     * 分钟选项间隔
     */
    minuteStep?: number;
    /**
     * 秒钟选项间隔
     */
    secondStep?: number;
    /**
     * 不可选的小时
     */
    disabledHours?(): number[];
    /**
     * 不可选的分钟
     */
    disabledMinutes?(hour: number): number[];
    /**
     * 不可选的秒钟
     */
    disabledSeconds?(hour: number, minute: number): number[];
    /**
     * 是否隐藏不可选的项
     */
    hideDisabledOptions?: boolean;
    /**
     * 输入框没有值的时候显示的内容
     */
    placeholder?: string;
    /**
     * 宽度
     */
    width?: number;
    /**
     * 时间格式化，Moment支持的格式，如HH:mm:ss
     */
    format?: string;
    /**
     * 是否只读
     */
    inputReadOnly?: boolean;
    /**
     * 是否允许值为null
     */
    allowEmpty?: boolean;
    /**
     * 面板对齐时的位置调整数据
     */
    align?: object;
    /**
     * 定义面板的容器
     */
    getPopupContainer?: (triggerNode: HTMLElement) => HTMLElement;
    /**
     * 面板类名
     */
    popupClassName?: string;
    /**
     * 面板样式对象
     */
    popupStyle?: CSSProperties;
    /**
     * 更改回调函数
     */
    onChange?(value: string): void;
    /**
     * am、pm格式的value更改回调函数
     */
    onAmPmChange?(value: 'AM' | 'PM'): void;
    /**
     * 面板展开状态回调函数
     */
    onOpen?(e: {
        open: boolean;
    }): any;
    /**
     * 面板收起状态回调函数
     */
    onClose?(e: {
        open: boolean;
    }): any;
    /**
     * 表单name
     */
    name?: string;
    /**
     * 错误信息
     */
    errorMessage?: string;
    /**
     * 错误信息展现位置， bottom/right
     * @deprecated
     */
    errorLocation?: 'bottom' | 'right';
    /**
     * 按键
     */
    onKeyDown?: KeyboardEventHandler;
    /**
     * 输入框获得焦点回调函数
     */
    onFocus?(): void;
    /**
     * 输入框失去焦点回调函数
     */
    onBlur?(): void;
}
