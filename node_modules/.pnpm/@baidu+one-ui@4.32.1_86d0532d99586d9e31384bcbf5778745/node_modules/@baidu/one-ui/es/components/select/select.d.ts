import { PureComponent } from 'react';
import { SelectProps } from './interface';
import SelectOption from './option';
import SelectOptionGroup from './optGroup';
import SearchText from './searchText';
import CheckboxText from './checkboxText';
import SingleSelect from './singleSelect';
import SelectPopOver from './selectPopOver';
interface SelectState {
    errorMessage: string;
}
declare class Select extends PureComponent<SelectProps, SelectState> {
    static defaultProps: {
        prefixCls: string;
        className: string;
        size: string;
        transitionName: string;
        choiceTransitionName: string;
        trigger: string;
        optionLabelProp: string;
        notFoundContent: string;
        multipleRenderTargetMode: string;
        suffixIcon: any;
        checkboxPrefixCls: string;
        loading: boolean;
        loadingText: string;
        mode: string;
        placeholder: string;
        showCheckAll: boolean;
        autoClearSearchValue: boolean;
    };
    static Option: typeof SelectOption;
    static OptGroup: typeof SelectOptionGroup;
    /**
     * @deprecated
     */
    static SearchText: typeof SearchText;
    /**
     * @deprecated
     */
    static CheckboxText: typeof CheckboxText;
    /**
     * @deprecated
     */
    static SingleSelect: typeof SingleSelect;
    /**
     * @deprecated
     */
    static SelectPopOver: typeof SelectPopOver;
    constructor(props: any);
    state: {
        errorMessage: any;
    };
    rcSelect: any;
    static getDerivedStateFromProps: (nextProps: any, prevState: any) => {
        errorMessage: any;
    };
    onChange: (value: any, options: any) => void;
    focus(): void;
    blur(): void;
    saveSelect: (node: any) => void;
    getNormalizedShowSearch(mode: any, showSearch: any): any;
    render(): JSX.Element;
}
export default Select;
