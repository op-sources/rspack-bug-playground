import { PureComponent, ReactNode, ReactComponentElement } from 'react';
import { AlertPageProps, AlertProps } from './interface';
import Alert from './alert';
interface AlertPageState {
    dataSource?: ReactComponentElement<typeof Alert, AlertProps>[];
    activeIndex?: number;
}
declare class AlertPage extends PureComponent<AlertPageProps, AlertPageState> {
    static defaultProps: {
        prefixCls: string;
        defaultActiveIndex: number;
        size: string;
        onClose: (...args: any[]) => void;
        onPrevChange: (...args: any[]) => void;
        onNextChange: (...args: any[]) => void;
    };
    constructor(props: AlertPageProps);
    static getDerivedStateFromProps(nextProps: AlertPageProps, prevState: AlertPageState): AlertPageState;
    alertPageRef?: ReactNode;
    onClose: (closeFunc: any, index: number, e: MouseEvent) => void;
    isActiveIndexControlled(): boolean;
    getItems: () => JSX.Element[];
    saveRef: (ref: any) => void;
    prevChange: () => void;
    nextChange: (childrenLength: any) => void;
    render(): JSX.Element;
}
export default AlertPage;
