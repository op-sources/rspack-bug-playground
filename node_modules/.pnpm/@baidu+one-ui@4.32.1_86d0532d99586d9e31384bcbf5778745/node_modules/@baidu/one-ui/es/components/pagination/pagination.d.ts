import { PureComponent } from 'react';
import { PaginationProps } from './interface';
interface PaginationState {
    pageSize?: number;
    pageNo?: number;
    total?: number;
    lastPage?: number;
    searchValue?: string;
}
declare class Pagination extends PureComponent<PaginationProps, PaginationState> {
    static defaultProps: {
        prefixCls: string;
        selectPrefixCls: string;
        pageSizeOptions: number[];
        total: number;
        defaultPageSize: number;
        defaultPageNo: number;
        size: string;
        className: string;
        onPageNoChange: (...args: any[]) => void;
        onPageSizeChange: (...args: any[]) => void;
        hideOnSinglePage: boolean;
        showSizeChange: boolean;
        showPageJumper: boolean;
        showTotal: boolean;
    };
    constructor(props: any);
    static getDerivedStateFromProps: (nextProps: PaginationProps, prevState: PaginationState) => PaginationState;
    getOptionByList: () => any[];
    isValidPage: (page: any) => boolean;
    handlePageSizeChange: (pageSize: any) => void;
    handleChange: (p: any) => void;
    handleItemPageChange: (e: any) => void;
    goToPrevPage: () => void;
    goToNextPage: () => void;
    jumpToPrevPage: () => void;
    jumpToNextPage: () => void;
    generateItemRender: () => any[];
    onChangeInput: (e: any) => void;
    onJumpToPager: (value: any) => void;
    onInputKeyDown: (e: any) => void;
    onInputKeyConfirm: () => void;
    render(): JSX.Element;
}
export default Pagination;
