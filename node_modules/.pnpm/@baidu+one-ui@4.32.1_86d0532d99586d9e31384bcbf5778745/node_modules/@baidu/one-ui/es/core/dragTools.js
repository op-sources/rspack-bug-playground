import _isFunction from "lodash/isFunction";
export var getPositionFromEvent = function getPositionFromEvent(event) {
  var _event$pageX = event.pageX,
      pageX = _event$pageX === void 0 ? 0 : _event$pageX,
      _event$pageY = event.pageY,
      pageY = _event$pageY === void 0 ? 0 : _event$pageY;
  return {
    x: pageX,
    y: pageY
  };
};
export var removeDocumentListener = function removeDocumentListener() {
  document.onmousemove = null;
  document.onmouseup = null;
};
export var onMouseDown = function onMouseDown(_ref) {
  var event = _ref.event,
      onDragged = _ref.onDragged,
      onMoving = _ref.onMoving,
      onDropped = _ref.onDropped;
  var sourcePos = {};
  var startDragFlag = false;
  event.persist();
  event.stopPropagation();
  event.preventDefault();

  document.onmousemove = function (moveEvent) {
    moveEvent.preventDefault();

    if (!startDragFlag) {
      if (_isFunction(onDragged)) {
        var _position = getPositionFromEvent(event);

        onDragged({
          ele: event.target,
          position: _position
        });
        sourcePos = _position;
      }

      startDragFlag = true;
    }

    var position = getPositionFromEvent(moveEvent); // $emit isMoving

    if (_isFunction(onMoving)) {
      onMoving({
        ele: event.target,
        position: position
      });
    }
  };

  document.onmouseup = function (upEvent) {
    var position = getPositionFromEvent(upEvent);
    var _sourcePos = sourcePos,
        x = _sourcePos.x,
        y = _sourcePos.y;
    var isEqualSourcePos = +position.x === +x && +position.y === +y; // $emit isDropped

    if (_isFunction(onDropped) && startDragFlag) {
      onDropped({
        ele: upEvent.target,
        position: position,
        isEqualSourcePos: isEqualSourcePos
      });
    }

    startDragFlag = false;
    removeDocumentListener();
  };
};