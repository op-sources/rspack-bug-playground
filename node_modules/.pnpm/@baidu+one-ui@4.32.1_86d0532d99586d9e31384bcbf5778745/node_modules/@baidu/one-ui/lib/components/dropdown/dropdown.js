"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireWildcard(require("react"));

var _warning = _interopRequireDefault(require("warning"));

var _commonTools = require("../../core/commonTools");

var _dropdown = _interopRequireDefault(require("./common/dropdown"));

var _dlsIconsReact = require("dls-icons-react");

var _context = require("../providerConfig/context");

var _dec, _class, _class2, _temp;

var Dropdown = (_dec = (0, _context.withConfigConsumer)('dropdown'), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(Dropdown, _PureComponent);

  function Dropdown(props) {
    var _this;

    _this = _PureComponent.call(this, props) || this;
    (0, _warning["default"])(!(props.transparent === true), 'The `transparent` prop of `Dropdown` will default to `false` in future versions. ' + 'Please migrate to use `transparent={false}` as soon as possible.');
    return _this;
  }

  var _proto = Dropdown.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        prefixCls = _this$props.prefixCls,
        overlay = _this$props.overlay,
        trigger = _this$props.trigger,
        disabled = _this$props.disabled,
        className = _this$props.className,
        size = _this$props.size;

    var child = _react["default"].Children.only(children);

    var overlayElement = _react["default"].Children.only(overlay);

    if (! /*#__PURE__*/(0, _react.isValidElement)(child) || ! /*#__PURE__*/(0, _react.isValidElement)(overlayElement)) {
      return child;
    }

    var dropdownTrigger = /*#__PURE__*/_react["default"].cloneElement(child, {
      className: (0, _commonTools.classnames)(child.props.className, prefixCls + "-trigger"),
      disabled: disabled
    }); // menu cannot be selectable in dropdown defaultly
    // menu should be focusable in dropdown defaultly


    var _overlayElement$props = overlayElement.props,
        _overlayElement$props2 = _overlayElement$props.selectable,
        selectable = _overlayElement$props2 === void 0 ? false : _overlayElement$props2,
        _overlayElement$props3 = _overlayElement$props.focusable,
        focusable = _overlayElement$props3 === void 0 ? true : _overlayElement$props3;

    var expandIcon = /*#__PURE__*/_react["default"].createElement("span", {
      className: prefixCls + "-menu-submenu-arrow"
    }, /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconChevronRight, {
      className: prefixCls + "-menu-submenu-arrow-icon"
    })); // TODO: 需要优化


    var fixedModeOverlay = typeof overlayElement.type === 'string' ? overlayElement : /*#__PURE__*/_react["default"].cloneElement(overlayElement, {
      // @ts-ignore
      mode: 'vertical',
      selectable: selectable,
      focusable: focusable,
      expandIcon: expandIcon,
      className: (0, _commonTools.classnames)(overlayElement && overlayElement.props && overlayElement.props.className || '', prefixCls + "-menu-" + size)
    });
    var triggerActions = disabled ? [] : trigger;
    var alignPoint;

    if (triggerActions && triggerActions.indexOf('contextMenu') !== -1) {
      alignPoint = true;
    }

    var overlayClassName = (0, _commonTools.classnames)(className, this.props.overlayClassName);
    return /*#__PURE__*/_react["default"].createElement(_dropdown["default"], (0, _extends2["default"])({
      alignPoint: alignPoint
    }, this.props, {
      trigger: triggerActions,
      overlay: fixedModeOverlay,
      overlayClassName: overlayClassName
    }), dropdownTrigger);
  };

  return Dropdown;
}(_react.PureComponent), _class2.Button = void 0, _class2.defaultProps = {
  prefixCls: 'one-dropdown',
  mouseEnterDelay: 0.15,
  mouseLeaveDelay: 0.1,
  placement: 'bottomLeft',
  className: '',
  overlayClassName: '',
  size: 'medium',
  overlayStyle: {},
  transparent: true,
  // 兼容早期默认透明背景实现
  showConfirm: false,
  okText: '应用',
  cancelText: '取消',
  transitionName: 'one-transition-slide-down'
}, _temp)) || _class);
var _default = Dropdown;
exports["default"] = _default;
module.exports = exports.default;