"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireWildcard(require("react"));

var _commonTools = require("../../core/commonTools");

var _virtualTree = _interopRequireDefault(require("./common/virtualTree"));

var _tree = _interopRequireDefault(require("./common/tree"));

var _dlsIconsReact = require("dls-icons-react");

var _loading = _interopRequireDefault(require("../loading"));

/**
 * @file tree main
 * @author huangshiming
 * @date 2020-05-18
 */
var Tree = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(Tree, _PureComponent);

  function Tree() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;
    _this.treeRef = void 0;

    _this.renderSwitcherIcon = function (_ref) {
      var isLeaf = _ref.isLeaf,
          loading = _ref.loading;
      var _this$props = _this.props,
          prefixCls = _this$props.prefixCls,
          switcherIcon = _this$props.switcherIcon;

      if (loading) {
        return /*#__PURE__*/_react["default"].createElement(_loading["default"], {
          size: "small",
          className: prefixCls + "-switcher-loading-icon"
        });
      }

      if (isLeaf) {
        return null;
      }

      var switcherCls = prefixCls + "-switcher-icon";

      if ( /*#__PURE__*/(0, _react.isValidElement)(switcherIcon)) {
        var switcherOriginCls = switcherIcon.props && switcherIcon.props.className || '';
        return /*#__PURE__*/_react["default"].cloneElement(switcherIcon, {
          className: (0, _commonTools.classnames)(switcherOriginCls, switcherCls)
        });
      }

      return /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconCaretRight, {
        className: prefixCls + "-node-switch-arrow"
      });
    };

    _this.setTreeRef = function (node) {
      _this.treeRef = node;
    };

    _this.getTreeInterState = function () {
      return _this.treeRef.state;
    };

    return _this;
  }

  var _proto = Tree.prototype;

  _proto.render = function render() {
    var _classnames;

    var _this$props2 = this.props,
        prefixCls = _this$props2.prefixCls,
        className = _this$props2.className,
        showIcon = _this$props2.showIcon,
        size = _this$props2.size,
        switcherIcon = _this$props2.switcherIcon,
        parentContainerHeight = _this$props2.parentContainerHeight,
        children = _this$props2.children;
    var TreeComponent = !parentContainerHeight ? _tree["default"] : _virtualTree["default"];
    return /*#__PURE__*/_react["default"].createElement(TreeComponent, (0, _extends2["default"])({}, this.props, {
      ref: this.setTreeRef,
      className: (0, _commonTools.classnames)(className, (_classnames = {}, _classnames[prefixCls + "-icon-hide"] = !showIcon, _classnames), prefixCls + "-" + size),
      switcherIcon: typeof switcherIcon === 'function' ? switcherIcon : this.renderSwitcherIcon
    }), children);
  };

  return Tree;
}(_react.PureComponent);

Tree.defaultProps = {
  prefixCls: 'one-tree',
  checkable: false,
  showIcon: false,
  checkStrictly: false,
  size: 'medium'
};
Tree.TreeNode = void 0;
Tree.VirtualTreeNode = void 0;
var _default = Tree;
exports["default"] = _default;
module.exports = exports.default;