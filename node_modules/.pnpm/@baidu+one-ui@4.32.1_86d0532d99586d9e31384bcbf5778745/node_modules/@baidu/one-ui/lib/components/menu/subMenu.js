"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireWildcard(require("react"));

var _subMenu = _interopRequireDefault(require("./common/subMenu"));

var _commonTools = require("../../core/commonTools");

var _omit = _interopRequireDefault(require("omit.js"));

var sizeArray = ['xsmall', 'small', 'medium', 'large', 'xlarge'];

var SubMenu = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(SubMenu, _PureComponent);

  function SubMenu() {
    return _PureComponent.apply(this, arguments) || this;
  }

  var _proto = SubMenu.prototype;

  _proto.render = function render() {
    var _classnames, _classnames2;

    var _this$props = this.props,
        placements = _this$props.placements,
        mode = _this$props.mode,
        prefixCls = _this$props.prefixCls,
        size = _this$props.size,
        popupClassName = _this$props.popupClassName,
        icon = _this$props.icon,
        title = _this$props.title,
        className = _this$props.className,
        type = _this$props.type;
    var alreadyHasSizeClassName = false;
    sizeArray.forEach(function (string) {
      if (popupClassName.indexOf(prefixCls + "-submenu-" + string) > -1) {
        alreadyHasSizeClassName = true;
        return false;
      }
    });
    var newTitleNode = [/*#__PURE__*/_react["default"].createElement("span", {
      key: "title-node"
    }, title)];

    var hasIcon = icon && /*#__PURE__*/_react["default"].isValidElement(icon);

    if (hasIcon) {
      newTitleNode.unshift( /*#__PURE__*/_react["default"].createElement("span", {
        key: "custom-icon",
        className: prefixCls + "-submenu-custom-icon anchor"
      }, icon));
    }

    var props = (0, _extends2["default"])({}, (0, _omit["default"])(this.props, ['placements', 'icon']), {
      builtinPlacements: placements,
      popupClassName: (0, _commonTools.classnames)(popupClassName, (_classnames = {}, _classnames[prefixCls + "-submenu-" + size] = !!prefixCls && !alreadyHasSizeClassName, _classnames[prefixCls + "-type-basic"] = type === 'basic', _classnames)),
      className: (0, _commonTools.classnames)(className, (_classnames2 = {}, _classnames2[prefixCls + "-submenu-has-icon"] = mode === 'inline' && hasIcon, _classnames2)),
      title: newTitleNode
    });
    return /*#__PURE__*/_react["default"].createElement(_subMenu["default"], props);
  };

  return SubMenu;
}(_react.PureComponent);

SubMenu.defaultProps = {
  placements: {},
  popupClassName: '',
  size: 'medium',
  type: 'strong',
  prefixCls: 'one-menu'
};
SubMenu.isSubMenu = true;
var _default = SubMenu;
exports["default"] = _default;
module.exports = exports.default;