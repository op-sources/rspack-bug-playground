"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireWildcard(require("react"));

var _timePickerTools = require("../../../core/timePickerTools");

var _commonTools = require("../../../core/commonTools");

;

var TimeSelecter = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(TimeSelecter, _PureComponent);

  function TimeSelecter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;
    _this.state = {
      active: false
    };
    _this.root = /*#__PURE__*/(0, _react.createRef)();

    _this.onSelect = function (value) {
      var _this$props = _this.props,
          onSelect = _this$props.onSelect,
          type = _this$props.type;
      onSelect(type, value);
    };

    _this.getOptions = function () {
      var _this$props2 = _this.props,
          options = _this$props2.options,
          selectedIndex = _this$props2.selectedIndex,
          prefixCls = _this$props2.prefixCls;
      return options.map(function (item, index) {
        var _classnames;

        var cls = (0, _commonTools.classnames)((_classnames = {}, _classnames[prefixCls + "-select-option-selected"] = selectedIndex === index, _classnames[prefixCls + "-select-option-disabled"] = item.disabled, _classnames));
        var onClick = item.disabled ? undefined : function () {
          _this.onSelect(item.value);
        };
        return /*#__PURE__*/_react["default"].createElement("li", {
          onClick: onClick,
          className: cls,
          key: index
        }, item.value);
      });
    };

    _this.handleMouseEnter = function (e) {
      _this.setState({
        active: true
      });

      _this.props.onMouseEnter(e);
    };

    _this.handleMouseLeave = function () {
      _this.setState({
        active: false
      });
    };

    _this.list = void 0;

    _this.saveList = function (node) {
      _this.list = node;
    };

    _this.scrollToSelected = function (duration) {
      // move to selected item
      if (!_this.list) {
        return;
      }

      var index = _this.props.selectedIndex;

      if (index < 0) {
        index = 0;
      }

      var topOption = _this.list.children[index];
      var to = topOption.offsetTop;
      (0, _timePickerTools.scrollTo)(_this.root.current, to, duration);
    };

    return _this;
  }

  var _proto = TimeSelecter.prototype;

  _proto.componentDidMount = function componentDidMount() {
    // jump to selected option
    this.scrollToSelected(0);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    // smooth scroll to selected option
    if (prevProps.selectedIndex !== this.props.selectedIndex) {
      this.scrollToSelected(120);
    }
  };

  _proto.render = function render() {
    var _classnames2;

    var _this$props3 = this.props,
        prefixCls = _this$props3.prefixCls,
        options = _this$props3.options;

    if (options.length === 0) {
      return null;
    }

    var cls = (0, _commonTools.classnames)(prefixCls + "-select", (_classnames2 = {}, _classnames2[prefixCls + "-select-active"] = this.state.active, _classnames2));
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: cls,
      onMouseEnter: this.handleMouseEnter,
      onMouseLeave: this.handleMouseLeave,
      ref: this.root
    }, /*#__PURE__*/_react["default"].createElement("ul", {
      ref: this.saveList
    }, this.getOptions()));
  };

  return TimeSelecter;
}(_react.PureComponent);

exports["default"] = TimeSelecter;
module.exports = exports.default;