"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
var _exportNames = {
  InnerForm: true
};
exports["default"] = exports.InnerForm = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _createFormField = _interopRequireDefault(require("./common/createFormField"));

var _formItem = _interopRequireDefault(require("./formItem"));

var _formField = _interopRequireDefault(require("./formField"));

var _formFieldGroup = _interopRequireDefault(require("./formFieldGroup"));

var _createBaseForm = _interopRequireWildcard(require("./common/createBaseForm"));

var _context = require("./context");

var _commonTools = require("../../core/commonTools");

var _interface = require("./interface");

Object.keys(_interface).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _interface[key]) return;
  exports[key] = _interface[key];
});

/**
 * @visibleName Form
 */
var InnerForm = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var _classnames;

  var context = (0, _react.useContext)(_context.LegacyFormContext);
  var prefixCls = props.prefixCls,
      className = props.className,
      wrapperCol = props.wrapperCol,
      labelAlign = props.labelAlign,
      labelPosition = props.labelPosition,
      labelCol = props.labelCol,
      layout = props.layout,
      colon = props.colon,
      hideRequiredMark = props.hideRequiredMark,
      size = props.size,
      onFinish = props.onFinish,
      onFinishFailed = props.onFinishFailed,
      scrollToFirstError = props.scrollToFirstError,
      fieldNameProp = props.fieldNameProp,
      validateMessages = props.validateMessages,
      onFieldsChange = props.onFieldsChange,
      onValuesChange = props.onValuesChange,
      mapProps = props.mapProps,
      mapPropsToFields = props.mapPropsToFields,
      formPropName = props.formPropName,
      density = props.density,
      restProps = (0, _objectWithoutPropertiesLoose2["default"])(props, ["prefixCls", "className", "wrapperCol", "labelAlign", "labelPosition", "labelCol", "layout", "colon", "hideRequiredMark", "size", "onFinish", "onFinishFailed", "scrollToFirstError", "fieldNameProp", "validateMessages", "onFieldsChange", "onValuesChange", "mapProps", "mapPropsToFields", "formPropName", "density"]);
  var formClassName = (0, _commonTools.classnames)(prefixCls, className, prefixCls + "-" + layout, (_classnames = {}, _classnames[prefixCls + "-hide-required-mark"] = hideRequiredMark, _classnames[prefixCls + "-label-position-" + labelPosition] = labelPosition, _classnames[prefixCls + "-legacy"] = context.legacy, _classnames), prefixCls + "-" + size, prefixCls + "-type-" + density);
  var formRef = (0, _react.useRef)();
  var formProps = restProps;

  if (!context.legacy) {
    _react["default"].useImperativeHandle(ref, function () {
      return formRef.current.getForm();
    });

    formProps.onSubmit = (0, _react.useCallback)(function (event) {
      event.preventDefault();
      event.stopPropagation();
      formRef.current.validateForm(scrollToFirstError).then(function (values) {
        return onFinish && onFinish(values);
      })["catch"](function (_ref) {
        var errors = _ref.errors,
            values = _ref.values;
        return onFinishFailed && onFinishFailed(errors, values);
      });
      props.onSubmit && props.onSubmit(event);
    }, [onFinish, onFinishFailed, props.onSubmit]);
    formProps.onReset = (0, _react.useCallback)(function (event) {
      event.preventDefault();
      event.stopPropagation();
      formRef.current.resetFields();
      props.onReset && props.onReset(event);
    }, [props.onReset]);
  }

  var formNode = /*#__PURE__*/_react["default"].createElement("form", (0, _extends2["default"])({}, formProps, {
    className: formClassName,
    autoComplete: "off"
  }));

  return /*#__PURE__*/_react["default"].createElement(_context.FormContext.Provider, {
    value: {
      wrapperCol: wrapperCol,
      labelAlign: labelAlign,
      labelCol: labelCol,
      labelPosition: labelPosition,
      // @ts-ignore
      vertical: layout === 'vertical',
      colon: colon,
      size: size
    }
  }, context.legacy ? formNode : /*#__PURE__*/_react["default"].createElement(_createBaseForm.BaseForm, (0, _extends2["default"])({
    ref: formRef
  }, {
    fieldNameProp: fieldNameProp,
    validateMessages: validateMessages,
    onFieldsChange: onFieldsChange,
    onValuesChange: onValuesChange,
    mapProps: mapProps,
    mapPropsToFields: mapPropsToFields,
    formPropName: formPropName
  }), formNode));
});
exports.InnerForm = InnerForm;
InnerForm.defaultProps = {
  prefixCls: 'one-form',
  layout: 'default',
  className: '',
  size: 'medium',
  labelAlign: 'right',
  labelPosition: 'side',
  density: 'default',
  colon: false
};
var Form = InnerForm;
Form.Item = _formItem["default"];
Form.Field = _formField["default"];
Form.FieldGroup = _formFieldGroup["default"];
Form.createFormField = _createFormField["default"];
Form.create = _createBaseForm["default"];
var _default = Form;
exports["default"] = _default;