"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.getValidWeekDates = exports.getValidDate = exports.align = void 0;

var _dayjs = _interopRequireDefault(require("dayjs"));

/**
 * @file date util
 * @author tangjinhua
 */
// 下拉偏移重置为0, 0
var align = {
  offset: [0, 0]
};
/**
 * 根据日期选择范围与单元返回有效日期
 *
 * @param date 日期
 * @param dateFormat 格式
 * @param minDate 最小日期
 * @param maxDate 最大日期
 * @param mode 单位
 * @param end 是否为结束日期
 * @returns 有效日期
 */

exports.align = align;

var getValidDate = function getValidDate(date, dateFormat, minDate, maxDate, mode, end) {
  var minTime = minDate ? (0, _dayjs["default"])(minDate).valueOf() : null;
  var maxTime = maxDate ? (0, _dayjs["default"])(maxDate).valueOf() : null;
  var validDate;

  if (mode === 'week') {
    if (end) {
      var dateTime = (0, _dayjs["default"])(date).endOf(mode).startOf('day').valueOf();
      validDate = maxTime && dateTime > maxTime ? maxTime : dateTime;
    } else {
      var _dateTime = (0, _dayjs["default"])(date).startOf(mode).valueOf();

      validDate = minTime && _dateTime < minTime ? minTime : _dateTime;
    }
  } else {
    validDate = date;
  }

  return (0, _dayjs["default"])(validDate).format(dateFormat);
};
/**
 * 根据日期选择范围返回有效自然周日期
 *
 * @param date 日期
 * @param dateFormat 格式
 * @param minDate 最小日期
 * @param maxDate 最大日期
 * @returns 有效日期
 */


exports.getValidDate = getValidDate;

var getValidWeekDates = function getValidWeekDates(date, dateFormat, minDate, maxDate) {
  var minTime = minDate ? (0, _dayjs["default"])(minDate).valueOf() : null;
  var maxTime = maxDate ? (0, _dayjs["default"])(maxDate).valueOf() : null;
  var startDateTime = (0, _dayjs["default"])(date).startOf('week').valueOf();
  var startValidDate = minTime && startDateTime < minTime ? minTime : startDateTime;
  var endDateTime = (0, _dayjs["default"])(date).endOf('week').startOf('day').valueOf();
  var endValidDate = maxTime && endDateTime > maxTime ? maxTime : endDateTime;
  return [(0, _dayjs["default"])(startValidDate).format(dateFormat), (0, _dayjs["default"])(endValidDate).format(dateFormat)];
};

exports.getValidWeekDates = getValidWeekDates;