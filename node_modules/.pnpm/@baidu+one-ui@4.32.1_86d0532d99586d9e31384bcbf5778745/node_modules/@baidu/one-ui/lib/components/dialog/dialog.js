"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireWildcard(require("react"));

var _button = _interopRequireDefault(require("../button"));

var _dialogWrapper = _interopRequireDefault(require("./common/dialogWrapper"));

var _commonTools = require("../../core/commonTools");

var widthSizeMap = {
  small: 400,
  medium: 600,
  large: 800
};
;

var Dialog = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(Dialog, _PureComponent);

  /**
   * @deprecated
   */
  function Dialog(props) {
    var _this;

    _this = _PureComponent.call(this, props) || this;

    _this.getWidthBySize = function () {
      var width = _this.props.width;

      if (widthSizeMap[width]) {
        return widthSizeMap[width];
      }

      return width;
    };

    _this.handleCancel = function (e) {
      var _this$props = _this.props,
          onCancel = _this$props.onCancel,
          visibleControlledWhenClose = _this$props.visibleControlledWhenClose;

      if (!visibleControlledWhenClose) {
        _this.setState({
          visible: false
        });
      }

      if (onCancel) {
        onCancel(e);
      }
    };

    _this.handleOk = function (e) {
      var onOk = _this.props.onOk;

      if (onOk) {
        onOk(e);
      }
    };

    _this.renderFooter = function () {
      var _this$props2 = _this.props,
          okText = _this$props2.okText,
          okType = _this$props2.okType,
          cancelText = _this$props2.cancelText,
          confirmLoading = _this$props2.confirmLoading,
          okProps = _this$props2.okProps,
          cancelProps = _this$props2.cancelProps,
          okOrder = _this$props2.okOrder,
          cancelOrder = _this$props2.cancelOrder,
          size = _this$props2.size,
          buttonPosition = _this$props2.buttonPosition;
      var buttonSize = _this.props.buttonSize || size;
      var okStyle = okOrder ? (0, _extends2["default"])({}, okProps.style || {}, {
        order: okOrder
      }) : (0, _extends2["default"])({}, okProps.style || {});
      var cancelStyle = cancelOrder ? (0, _extends2["default"])({}, cancelProps.style || {}, {
        order: cancelOrder
      }) : (0, _extends2["default"])({}, cancelProps.style || {});

      var confirmButton = /*#__PURE__*/_react["default"].createElement(_button["default"], (0, _extends2["default"])({
        key: "confirm",
        type: okType,
        size: buttonSize,
        loading: confirmLoading,
        onClick: _this.handleOk
      }, okProps, {
        style: okStyle
      }), okText || '确定');

      var cancelButton = /*#__PURE__*/_react["default"].createElement(_button["default"], (0, _extends2["default"])({
        key: "cancel",
        size: buttonSize,
        type: "normal",
        onClick: _this.handleCancel
      }, cancelProps, {
        style: cancelStyle
      }), cancelText || '取消');

      var defaultFooter = buttonPosition === 'right' ? [cancelButton, confirmButton] : [confirmButton, cancelButton];
      return defaultFooter;
    };

    _this.state = {
      visible: props.visible
    };
    return _this;
  }

  var _proto = Dialog.prototype;

  _proto.render = function render() {
    var _classnames;

    var _this$props3 = this.props,
        footer = _this$props3.footer,
        wrapClassName = _this$props3.wrapClassName,
        centered = _this$props3.centered,
        className = _this$props3.className,
        prefixCls = _this$props3.prefixCls,
        buttonPosition = _this$props3.buttonPosition,
        destroyOnClose = _this$props3.destroyOnClose,
        size = _this$props3.size,
        fullScreen = _this$props3.fullScreen,
        okOrder = _this$props3.okOrder,
        cancelOrder = _this$props3.cancelOrder,
        restProps = (0, _objectWithoutPropertiesLoose2["default"])(_this$props3, ["footer", "wrapClassName", "centered", "className", "prefixCls", "buttonPosition", "destroyOnClose", "size", "fullScreen", "okOrder", "cancelOrder"]);
    var visible = this.state.visible;
    var defaultFooter = this.renderFooter();

    if (!visible && destroyOnClose) {
      // 关闭的时候销毁节点
      return null;
    }

    var wrapClass = (0, _commonTools.classnames)(prefixCls + "-" + buttonPosition, prefixCls + "-" + size, (_classnames = {}, _classnames[prefixCls + "-centered"] = !!centered, _classnames[prefixCls + "-full-screen"] = fullScreen, _classnames[prefixCls + "-order-reverse"] = okOrder && cancelOrder && cancelOrder < okOrder, _classnames[prefixCls + "-order-normal"] = okOrder && cancelOrder && cancelOrder > okOrder, _classnames), wrapClassName, className);
    return /*#__PURE__*/_react["default"].createElement(_dialogWrapper["default"], (0, _extends2["default"])({}, restProps, {
      prefixCls: prefixCls,
      wrapClassName: wrapClass,
      width: this.getWidthBySize(),
      footer: footer === undefined ? defaultFooter : footer,
      visible: visible,
      onClose: this.handleCancel
    }));
  };

  return Dialog;
}(_react.PureComponent);

Dialog.defaultProps = {
  prefixCls: 'one-dialog',
  size: 'medium',
  confirmLoading: false,
  visible: false,
  okType: 'primary',
  centered: true,
  destroyOnClose: false,
  mask: true,
  maskClosable: false,
  buttonPosition: 'left',
  footer: undefined,
  needCloseIcon: true,
  okProps: {},
  cancelProps: {},
  width: 'medium',
  fullScreen: false,
  visibleControlledWhenClose: false,
  contentClassName: '',
  maskClassName: ''
};
Dialog.confirm = void 0;
Dialog.alert = void 0;
Dialog.toast = void 0;

Dialog.getDerivedStateFromProps = function (nextProps, prevState) {
  if ('visible' in nextProps && nextProps.visible !== prevState.visible) {
    return {
      visible: nextProps.visible
    };
  }

  return null;
};

var _default = Dialog;
exports["default"] = _default;
module.exports = exports.default;