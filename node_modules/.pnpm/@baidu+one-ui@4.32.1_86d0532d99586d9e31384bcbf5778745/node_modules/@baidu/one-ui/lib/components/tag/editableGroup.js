"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _partial2 = _interopRequireDefault(require("lodash/partial"));

var _react = _interopRequireWildcard(require("react"));

var _dlsIconsReact = require("dls-icons-react");

var _tag = _interopRequireDefault(require("./tag"));

var _tooltip = _interopRequireDefault(require("../tooltip"));

var _input = _interopRequireDefault(require("../input"));

var _commonTools = require("../../core/commonTools");

var _context = require("../providerConfig/context");

var _dec, _class, _class2, _temp;

var inputWidth = 58;
;
var TagEditableGroup = (_dec = (0, _context.withConfigConsumer)('tag'), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(TagEditableGroup, _PureComponent);

  function TagEditableGroup(props) {
    var _this;

    _this = _PureComponent.call(this, props) || this;

    _this.handleClose = function (value) {
      var dataSource = _this.state.dataSource;
      var onClose = _this.props.onClose;
      onClose(dataSource, value);

      if (!('dataSource' in _this.props)) {
        dataSource = dataSource.filter(function (tag) {
          return tag.value !== value;
        });

        _this.setState({
          dataSource: dataSource
        });
      }
    };

    _this.input = void 0;

    _this.showInput = function () {
      _this.setState({
        inputVisible: true
      }, function () {
        return _this.input.focus();
      });
    };

    _this.handleInputChange = function (e) {
      _this.setState({
        inputValue: e.value
      });
    };

    _this.handleInputConfirm = function () {
      var _this$state = _this.state,
          dataSource = _this$state.dataSource,
          inputValue = _this$state.inputValue;
      var onInputConfirm = _this.props.onInputConfirm;
      onInputConfirm(dataSource, inputValue);
      var newState = {
        inputVisible: false,
        inputValue: ''
      };

      if (!('dataSource' in _this.props)) {
        var currentTags = dataSource;

        if (inputValue) {
          currentTags = [].concat(currentTags, [{
            label: inputValue,
            value: inputValue
          }]);
        }

        newState.dataSource = currentTags;
      }

      _this.setState(newState);
    };

    _this.saveInputRef = function (input) {
      _this.input = input;
    };

    _this.state = {
      dataSource: props.defaultDataSource || props.dataSource || [],
      inputVisible: false,
      inputValue: ''
    };
    return _this;
  }

  var _proto = TagEditableGroup.prototype;

  _proto.render = function render() {
    var _this2 = this;

    var _this$props = this.props,
        className = _this$props.className,
        prefixCls = _this$props.prefixCls,
        size = _this$props.size;
    var _this$state2 = this.state,
        dataSource = _this$state2.dataSource,
        inputVisible = _this$state2.inputVisible,
        inputValue = _this$state2.inputValue;
    var groupTagClassName = (0, _commonTools.classnames)(className, prefixCls + "-group-wrapper");
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: groupTagClassName
    }, dataSource.map(function (tag, index) {
      var label = tag.label,
          value = tag.value,
          tagProps = tag.tagProps;
      var isLongTag = typeof label === 'string' && label.length > 20;

      var tagElem = /*#__PURE__*/_react["default"].createElement(_tag["default"], (0, _extends2["default"])({
        key: index,
        closable: true,
        onClose: (0, _partial2["default"])(_this2.handleClose, value),
        noClosed: true
      }, tagProps), isLongTag ? label.slice(0, 20) + "..." : label);

      return isLongTag ? /*#__PURE__*/_react["default"].createElement(_tooltip["default"], {
        title: label,
        key: index
      }, tagElem) : tagElem;
    }), inputVisible && /*#__PURE__*/_react["default"].createElement(_input["default"], {
      inputRef: this.saveInputRef,
      size: size,
      style: {
        width: inputWidth
      },
      value: inputValue,
      onChange: this.handleInputChange,
      onBlur: this.handleInputConfirm,
      onPressEnter: this.handleInputConfirm
    }), !inputVisible && /*#__PURE__*/_react["default"].createElement(_tag["default"], {
      onClick: this.showInput,
      className: prefixCls + "-add-tag"
    }, /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconPlus, {
      className: prefixCls + "-add-icon"
    }), "\u6DFB\u52A0"));
  };

  return TagEditableGroup;
}(_react.PureComponent), _class2.defaultProps = {
  prefixCls: 'one-tag',
  className: '',
  size: 'medium',
  onClose: function onClose() {},
  onInputConfirm: function onInputConfirm() {}
}, _class2.getDerivedStateFromProps = function (nextProps, prevState) {
  if ('dataSource' in nextProps && nextProps.dataSource !== prevState.dataSource) {
    return {
      dataSource: nextProps.dataSource
    };
  }

  return null;
}, _temp)) || _class);
var _default = TagEditableGroup;
exports["default"] = _default;
module.exports = exports.default;