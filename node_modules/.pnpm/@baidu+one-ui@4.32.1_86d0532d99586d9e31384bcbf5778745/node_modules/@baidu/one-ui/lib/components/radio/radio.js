"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireWildcard(require("react"));

var _commonTools = require("../../core/commonTools");

var _commonCheckbox = _interopRequireDefault(require("../checkbox/common/commonCheckbox"));

var _context = _interopRequireDefault(require("./context"));

var _context2 = require("../providerConfig/context");

var _dec, _class, _class2, _temp;

var Radio = (_dec = (0, _context2.withConfigConsumer)('radio'), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(Radio, _PureComponent);

  function Radio() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;
    _this.refCheckbox = void 0;

    _this.saveCheckbox = function (node) {
      _this.refCheckbox = node;
    };

    return _this;
  }

  var _proto = Radio.prototype;

  _proto.focus = function focus() {
    this.refCheckbox.focus();
  };

  _proto.blur = function blur() {
    this.refCheckbox.blur();
  };

  _proto.render = function render() {
    var _this2 = this;

    return /*#__PURE__*/_react["default"].createElement(_context["default"].Consumer, null, function (context) {
      return _this2.renderRadio(context);
    });
  };

  _proto.renderRadio = function renderRadio(context) {
    var _classnames;

    var props = this.props;
    var prefixCls = props.prefixCls,
        className = props.className,
        children = props.children,
        style = props.style,
        direction = props.direction,
        type = props.type,
        size = props.size,
        restProps = (0, _objectWithoutPropertiesLoose2["default"])(props, ["prefixCls", "className", "children", "style", "direction", "type", "size"]);
    var radioGroup = context;
    var radioProps = (0, _extends2["default"])({}, restProps);

    if (radioGroup) {
      var value = radioGroup.value,
          _disabled = radioGroup.disabled;
      radioProps.name = radioGroup.name;
      radioProps.onChange = radioGroup.onChange;
      radioProps.checked = value != null ? props.value === value : props.checked;
      radioProps.disabled = props.disabled || _disabled;
    }

    var checked = radioProps.checked,
        disabled = radioProps.disabled;
    var wrapperClassString = (0, _commonTools.classnames)(className, prefixCls + "-wrapper-" + size, (_classnames = {}, _classnames[prefixCls + "-wrapper"] = true, _classnames[prefixCls + "-wrapper-checked"] = checked, _classnames[prefixCls + "-wrapper-disabled"] = disabled, _classnames[prefixCls + "-wrapper-checked-disabled"] = checked && disabled, _classnames[prefixCls + "-wrapper-" + direction] = direction, _classnames[prefixCls + "-wrapper-" + type] = type, _classnames));
    return /*#__PURE__*/_react["default"].createElement("label", {
      className: wrapperClassString,
      style: style,
      onMouseEnter: props.onMouseEnter,
      onMouseLeave: props.onMouseLeave
    }, /*#__PURE__*/_react["default"].createElement(_commonCheckbox["default"], (0, _extends2["default"])({}, radioProps, {
      prefixCls: prefixCls,
      ref: this.saveCheckbox,
      type: "radio"
    })), children != null ? /*#__PURE__*/_react["default"].createElement("span", null, children) : null);
  };

  return Radio;
}(_react.PureComponent), _class2.defaultProps = {
  direction: 'row',
  prefixCls: 'one-radio'
}, _class2.Group = void 0, _class2.Button = void 0, _temp)) || _class);
var _default = Radio;
exports["default"] = _default;
module.exports = exports.default;