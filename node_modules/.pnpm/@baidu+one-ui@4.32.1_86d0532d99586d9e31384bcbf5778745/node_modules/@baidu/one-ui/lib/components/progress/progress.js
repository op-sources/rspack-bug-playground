"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports["default"] = exports.PROGRESS_STATUS_MAP = void 0;

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _values2 = _interopRequireDefault(require("lodash/values"));

var _react = _interopRequireWildcard(require("react"));

var _line = _interopRequireDefault(require("./common/line"));

var _circle = _interopRequireDefault(require("./common/circle"));

var _commonTools = require("../../core/commonTools");

var _dlsIconsReact = require("dls-icons-react");

var _context = require("../providerConfig/context");

var _dec, _class, _class2, _temp;

var PROGRESS_STATUS_MAP = {
  NORMAL: 'normal',
  EXCEPTION: 'exception',
  SUCCESS: 'success'
};
exports.PROGRESS_STATUS_MAP = PROGRESS_STATUS_MAP;
var ProgressStatuses = (0, _values2["default"])(PROGRESS_STATUS_MAP);
var strokeWidthMap = {
  medium: 6,
  small: 4,
  xsmall: 2
};

var validProgress = function validProgress(progress) {
  if (!progress || progress < 0) {
    return 0;
  }

  if (progress > 100) {
    return 100;
  }

  return progress;
};

var Progress = (_dec = (0, _context.withConfigConsumer)('progress'), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(Progress, _PureComponent);

  function Progress() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;

    _this.getProgressStatus = function () {
      var _this$props = _this.props,
          status = _this$props.status,
          percent = _this$props.percent;

      if (ProgressStatuses.indexOf(status) < 0 && percent >= 100) {
        return 'success';
      }

      return status || 'normal';
    };

    _this.renderProcessInfo = function (prefixCls, progressStatus) {
      var _this$props2 = _this.props,
          showInfo = _this$props2.showInfo,
          format = _this$props2.format,
          type = _this$props2.type,
          percent = _this$props2.percent;

      if (!showInfo) {
        return null;
      }

      var text;

      var textFormatter = format || function (percentNumber) {
        return percentNumber + "%";
      };

      if (format || progressStatus !== 'exception' && progressStatus !== 'success') {
        text = textFormatter(validProgress(percent));
      } else if (progressStatus === 'exception') {
        if (type === 'line') {
          text = /*#__PURE__*/_react["default"].createElement("span", null, /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconTimesCircle, {
            className: prefixCls + "-close-circle-icon"
          }));
        } else {
          text = /*#__PURE__*/_react["default"].createElement("span", null, /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconTimes, {
            className: prefixCls + "-close-icon"
          }));
        }
      } else if (progressStatus === 'success') {
        if (type === 'line') {
          text = /*#__PURE__*/_react["default"].createElement("span", null, /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconCheckCircle, {
            className: prefixCls + "-check-circle-icon"
          }));
        } else {
          text = /*#__PURE__*/_react["default"].createElement("span", null, /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconCheck, {
            className: prefixCls + "-check-icon"
          }));
        }
      }

      return /*#__PURE__*/_react["default"].createElement("span", {
        className: prefixCls + "-text",
        title: typeof text === 'string' ? text : undefined
      }, text);
    };

    return _this;
  }

  var _proto = Progress.prototype;

  _proto.render = function render() {
    var _classnames;

    var _this$props3 = this.props,
        prefixCls = _this$props3.prefixCls,
        className = _this$props3.className,
        type = _this$props3.type,
        showInfo = _this$props3.showInfo,
        percent = _this$props3.percent,
        strokeLinecap = _this$props3.strokeLinecap,
        strokeColor = _this$props3.strokeColor,
        strokeWidth = _this$props3.strokeWidth,
        width = _this$props3.width,
        trailColor = _this$props3.trailColor,
        onRetry = _this$props3.onRetry,
        onCancel = _this$props3.onCancel,
        size = _this$props3.size,
        style = _this$props3.style;
    var progressStatus = this.getProgressStatus();
    var classString = (0, _commonTools.classnames)(prefixCls, className, [prefixCls + "-" + type], [prefixCls + "-status-" + progressStatus], (_classnames = {}, _classnames[prefixCls + "-show-info"] = showInfo, _classnames[prefixCls + "-" + size] = size, _classnames[prefixCls + "-show-operation"] = onRetry || onCancel, _classnames));
    var validPercent = validProgress(percent);
    var lineProps = {
      prefixCls: prefixCls,
      percent: validPercent,
      strokeLinecap: strokeLinecap,
      strokeColor: strokeColor,
      trailColor: trailColor,
      width: width,
      strokeWidth: strokeWidth || strokeWidthMap[size],
      showRetry: onRetry && progressStatus === PROGRESS_STATUS_MAP.EXCEPTION,
      showCancel: onCancel && progressStatus !== PROGRESS_STATUS_MAP.EXCEPTION && progressStatus !== PROGRESS_STATUS_MAP.SUCCESS,
      onRetry: onRetry,
      onCancel: onCancel
    };
    var circleProps = {
      prefixCls: prefixCls,
      percent: validPercent,
      strokeLinecap: strokeLinecap,
      strokeColor: strokeColor,
      strokeWidth: strokeWidth || strokeWidthMap[size],
      width: width,
      trailColor: trailColor
    };
    var progressInfo = this.renderProcessInfo(prefixCls, progressStatus);
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: classString,
      style: style
    }, type === 'line' ? /*#__PURE__*/_react["default"].createElement(_line["default"], lineProps, progressInfo) : null, type === 'circle' ? /*#__PURE__*/_react["default"].createElement(_circle["default"], circleProps, progressInfo) : null);
  };

  return Progress;
}(_react.PureComponent), _class2.defaultProps = {
  prefixCls: 'one-progress',
  type: 'line',
  size: 'medium',
  percent: 0,
  showInfo: true,
  strokeLinecap: 'round',
  trailColor: ''
}, _temp)) || _class);
var _default = Progress;
exports["default"] = _default;