"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireWildcard(require("react"));

var _itemRender = _interopRequireDefault(require("./itemRender"));

var _tree = _interopRequireDefault(require("../../tree"));

var _button = _interopRequireDefault(require("../../button"));

var _dlsIconsReact = require("dls-icons-react");

var _transferTools = require("../../../core/transferTools");

var _stack = _interopRequireDefault(require("../../stack"));

var _message = _interopRequireDefault(require("../../message"));

/**
 * @author huangshiming
 * @file selected pane
 * @date 2020-05-16
 */
var TreeNode = _tree["default"].TreeNode,
    VirtualTreeNode = _tree["default"].VirtualTreeNode;

var SelectedPane = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(SelectedPane, _PureComponent);

  function SelectedPane() {
    return _PureComponent.apply(this, arguments) || this;
  }

  var _proto = SelectedPane.prototype;

  _proto.renderNode = function renderNode(key, entities) {
    var _this$props = this.props,
        prefixCls = _this$props.prefixCls,
        allDataMap = _this$props.allDataMap,
        selectedItemProps = _this$props.selectedItemProps,
        SelectedItem = _this$props.SelectedItem,
        onDelete = _this$props.onDelete,
        virtualListHeight = _this$props.virtualListHeight;
    var CustomTreeNode = virtualListHeight ? VirtualTreeNode : TreeNode;
    var selectedItem = allDataMap[key] || {};
    var treeNodeKey = selectedItem.key;
    var disabled = selectedItem.disabled;
    var children = entities[key] && entities[key].children;
    var renderItem;

    if (SelectedItem && typeof SelectedItem === 'function') {
      var CustomSelectedItemRender = SelectedItem;
      var selectedProps = (0, _extends2["default"])({}, selectedItem, {
        itemKey: treeNodeKey,
        prefixCls: prefixCls
      }, selectedItemProps);
      delete selectedProps.CandidateItem;
      renderItem = /*#__PURE__*/_react["default"].createElement(CustomSelectedItemRender, selectedProps);
    } else if (SelectedItem && typeof SelectedItem === 'object') {
      renderItem = SelectedItem;
    } else {
      renderItem = /*#__PURE__*/_react["default"].createElement(_itemRender["default"], {
        prefixCls: prefixCls,
        title: selectedItem.title
      });
    }

    var treeNodeProps = (0, _extends2["default"])({}, selectedItem, {
      disabled: disabled,
      title: /*#__PURE__*/_react["default"].createElement("div", {
        className: prefixCls + "-select-selected"
      }, renderItem, /*#__PURE__*/_react["default"].createElement(_button["default"], {
        disabled: disabled,
        type: "text-aux",
        className: prefixCls + "-delete-item",
        onClick: function onClick(e) {
          return onDelete(key, e);
        }
      }, /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconTimes, null)))
    });

    if (children) {
      return /*#__PURE__*/_react["default"].createElement(CustomTreeNode, (0, _extends2["default"])({}, treeNodeProps, {
        key: treeNodeKey
      }), this.selectedNodeTrees(children, entities));
    }

    return /*#__PURE__*/_react["default"].createElement(CustomTreeNode, (0, _extends2["default"])({}, treeNodeProps, {
      key: treeNodeKey
    }));
  };

  _proto.selectedNodeTrees = function selectedNodeTrees(topLevel, entities) {
    var _this = this;

    return topLevel.map(function (key) {
      return _this.renderNode(key, entities);
    });
  };

  _proto.render = function render() {
    var _this$props2 = this.props,
        selectedList = _this$props2.selectedList,
        parentRelationMap = _this$props2.parentRelationMap,
        expandedSelectedKeys = _this$props2.expandedSelectedKeys,
        onExpand = _this$props2.onExpand,
        onSelect = _this$props2.onSelect,
        prefixCls = _this$props2.prefixCls,
        getSelectedTreeRef = _this$props2.getSelectedTreeRef,
        virtualListHeight = _this$props2.virtualListHeight,
        size = _this$props2.size,
        allDataMap = _this$props2.allDataMap,
        selectedEmpty = _this$props2.selectedEmpty;

    var _formatSelectedList = (0, _transferTools.formatSelectedList)(selectedList, parentRelationMap, allDataMap),
        entities = _formatSelectedList.entities,
        topLevel = _formatSelectedList.topLevel;

    var selectedTreeProps = {
      expandedKeys: (expandedSelectedKeys || []).map(function (key) {
        return "" + key;
      }),
      onExpand: onExpand,
      onSelect: onSelect,
      className: prefixCls + "-selected-tree",
      parentContainerHeight: virtualListHeight || null,
      selectedKeys: [],
      size: size
    };
    return selectedList.length ? /*#__PURE__*/_react["default"].createElement(_tree["default"], (0, _extends2["default"])({}, selectedTreeProps, {
      ref: getSelectedTreeRef
    }), this.selectedNodeTrees(topLevel, entities)) : /*#__PURE__*/_react["default"].createElement(_stack["default"], {
      justify: "center",
      className: prefixCls + "-empty"
    }, /*#__PURE__*/_react["default"].createElement(_message["default"], {
      type: "aux",
      display: "simple",
      size: size
    }, selectedEmpty));
  };

  return SelectedPane;
}(_react.PureComponent);

var _default = SelectedPane;
exports["default"] = _default;
module.exports = exports.default;