"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = HeadTable;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _omit2 = _interopRequireDefault(require("lodash/omit"));

var _react = _interopRequireWildcard(require("react"));

var _baseTable = _interopRequireDefault(require("./baseTable"));

var _context = _interopRequireDefault(require("./context"));

var _loading = _interopRequireDefault(require("../../loading"));

var _classnames = _interopRequireDefault(require("classnames"));

function HeadTable(props) {
  var _classNames;

  var _useContext = (0, _react.useContext)(_context["default"]),
      table = _useContext.table;

  var _table$props = table.props,
      prefixCls = _table$props.prefixCls,
      scroll = _table$props.scroll,
      showHeader = _table$props.showHeader,
      headerFixTop = _table$props.headerFixTop,
      loadingOption = _table$props.loadingOption,
      headerBottom = _table$props.headerBottom,
      loading = _table$props.loading;
  var columns = props.columns,
      tableClassName = props.tableClassName,
      expander = props.expander,
      onDragStart = props.onDragStart,
      onDraging = props.onDraging,
      onDragEnd = props.onDragEnd,
      onHeaderCellMouseEnter = props.onHeaderCellMouseEnter,
      onHeaderCellMouseLeave = props.onHeaderCellMouseLeave;
  var saveRef = table.saveRef,
      containerWidth = table.containerWidth;
  var useFixedHeader = table.props.useFixedHeader;
  var isFixedHeader = typeof headerFixTop === 'number' && headerFixTop != null;
  var refName = 'headTable';
  var headStyle = isFixedHeader ? {
    top: headerFixTop
  } : {};
  var showLoadBar = !loadingOption || loadingOption.type !== 'spinner';

  if (scroll.y || table.props.headerFixTop !== null || headerBottom || showLoadBar) {
    useFixedHeader = true;
  }

  var headContent = /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _classnames["default"])(prefixCls + "-header-container", (_classNames = {}, _classNames[prefixCls + "-sticky-header"] = isFixedHeader, _classNames)),
    style: headStyle
  }, !useFixedHeader || !showHeader ? null : /*#__PURE__*/_react["default"].createElement("div", {
    key: refName,
    ref: saveRef(refName),
    className: prefixCls + "-header"
  }, /*#__PURE__*/_react["default"].createElement(_baseTable["default"], {
    tableClassName: tableClassName,
    hasHead: true,
    hasBody: false,
    fixedHeader: isFixedHeader || useFixedHeader,
    columns: columns,
    expander: expander,
    onDragStart: onDragStart,
    onDraging: onDraging,
    onDragEnd: onDragEnd,
    onHeaderCellMouseEnter: onHeaderCellMouseEnter,
    onHeaderCellMouseLeave: onHeaderCellMouseLeave
  })), showLoadBar ? /*#__PURE__*/_react["default"].createElement("div", {
    className: prefixCls + "-loading-bar"
  }, /*#__PURE__*/_react["default"].createElement(_loading["default"].Bar, (0, _extends2["default"])({
    size: "xsmall",
    loading: loading
  }, (0, _omit2["default"])(loadingOption, ['type'])))) : null, headerBottom ? /*#__PURE__*/_react["default"].createElement("div", {
    className: prefixCls + "-header-bottom"
  }, headerBottom) : null);

  return headContent;
}

HeadTable.defaultProps = {
  refName: '',
  fixedStyle: {},
  onDragStart: function onDragStart() {},
  onDraging: function onDraging() {},
  onDragEnd: function onDragEnd() {}
};
module.exports = exports.default;