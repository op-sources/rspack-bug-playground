"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports["default"] = TableHeader;

var _react = _interopRequireWildcard(require("react"));

var _tableHeaderRow = _interopRequireDefault(require("./tableHeaderRow"));

var _context = _interopRequireDefault(require("./context"));

function getHeaderRows(columns, currentRow, rows) {
  if (currentRow === void 0) {
    currentRow = 0;
  }

  rows = rows || [];
  rows[currentRow] = rows[currentRow] || [];
  columns.forEach(function (column) {
    if (column.rowSpan && rows.length < column.rowSpan) {
      while (rows.length < column.rowSpan) {
        rows.push([]);
      }
    }

    var cell = {
      key: column.key,
      className: column.className || '',
      render: column.renderTitle,
      column: column
    };

    if (column.children) {
      getHeaderRows(column.children, currentRow + 1, rows);
    }

    if (column.colSpan !== 0) {
      rows[currentRow].push(cell);
    }
  });
  return rows.filter(function (row) {
    return row.length > 0;
  });
}

function TableHeader(props) {
  var _useContext = (0, _react.useContext)(_context["default"]),
      table = _useContext.table;

  var _table$props = table.props,
      prefixCls = _table$props.prefixCls,
      showHeader = _table$props.showHeader,
      onHeaderRow = _table$props.onHeaderRow;
  var expander = props.expander,
      columns = props.columns,
      fixed = props.fixed,
      onMoving = props.onMoving,
      onDragEnd = props.onDragEnd,
      onDragStart = props.onDragStart,
      onHeaderCellMouseEnter = props.onHeaderCellMouseEnter,
      onHeaderCellMouseLeave = props.onHeaderCellMouseLeave;

  if (!showHeader) {
    return null;
  }

  var rows = getHeaderRows(columns); // expander.renderExpandIndentCell(rows);

  return /*#__PURE__*/_react["default"].createElement("thead", {
    className: prefixCls + "-thead"
  }, rows.map(function (row, index) {
    return /*#__PURE__*/_react["default"].createElement(_tableHeaderRow["default"], {
      key: index,
      index: index,
      last: index === rows.length - 1,
      fixed: fixed,
      columns: columns,
      row: row,
      rows: rows,
      onHeaderRow: onHeaderRow,
      prefixCls: prefixCls,
      onMoving: onMoving,
      onDragEnd: onDragEnd,
      onDragStart: onDragStart,
      onHeaderCellMouseEnter: onHeaderCellMouseEnter,
      onHeaderCellMouseLeave: onHeaderCellMouseLeave
    });
  }));
}

module.exports = exports.default;