"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireWildcard(require("react"));

var _dlsIconsReact = require("dls-icons-react");

var _omit = _interopRequireDefault(require("omit.js"));

var _popover = _interopRequireDefault(require("../popover"));

var _commonTools = require("../../core/commonTools");

var _inputTools = require("../../core/inputTools");

var _context = require("../providerConfig/context");

var _config = require("../config");

var _dec, _class, _class2, _temp;

;
var Input = (_dec = (0, _context.withConfigConsumer)('input'), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(Input, _PureComponent);

  function Input(_props) {
    var _this;

    _this = _PureComponent.call(this, _props) || this; // const {value, errorMessage} = args;

    _this.inputContainerRef = void 0;
    _this.inputDetailRef = void 0;
    _this.addonBeforeRef = void 0;
    _this.addonAfterRef = void 0;
    _this.inputCountAnchor = void 0;
    _this.___countLabelTimer___ = void 0;
    _this.___imeStart___ = void 0;

    _this.onInputCompositionStart = function () {
      _this.___imeStart___ = true;
    };

    _this.onInputCompositionEnd = function (e) {
      _this.___imeStart___ = false;

      _this.onChange(e);
    };

    _this.onChange = function (e) {
      var value = e.target.value;
      var props = _this.props;

      if (_this.___imeStart___) {
        _this.setState({
          // value,
          cacheValue: value
        });

        return;
      }

      var errorMessage = (0, _inputTools.handleErrorMessage)((0, _extends2["default"])({}, props, {
        value: value
      }), true, true);
      var result = {
        value: value,
        errorMessage: errorMessage,
        event: e,
        target: e.target
      };
      var newState = {
        errorMessage: errorMessage
      };

      if (!('value' in _this.props)) {
        newState.value = value;
        newState.cacheValue = value;
      } else {
        newState.cacheValue = _this.state.value;
      }

      _this.setState(newState);

      _this.setLabelWidth();

      var onChange = props.onChange;

      if (onChange) {
        onChange(result);
      }
    };

    _this.onClear = function () {
      var newState = {
        errorMessage: '',
        cacheValue: ''
      };

      if (!('value' in _this.props)) {
        newState.value = '';
      }

      _this.setState(newState);

      _this.props.onClear();
    };

    _this.onKeyDown = function (e) {
      var _this$props = _this.props,
          onKeyDown = _this$props.onKeyDown,
          onPressEnter = _this$props.onPressEnter;

      if (e.keyCode === 13 && onPressEnter) {
        onPressEnter({
          value: e.target.value,
          errorMessage: _this.state.value
        });
      }

      if (onKeyDown) {
        onKeyDown(e);
      }
    };

    _this.setLabelWidth = function (showLabel) {
      if (showLabel === void 0) {
        showLabel = true;
      }

      var me = (0, _assertThisInitialized2["default"])(_this);
      var inputCountAnchor = me.inputCountAnchor;

      if (!inputCountAnchor) {
        me.setState({
          countLabelWidth: 0
        });
        return;
      }

      var countLabelWidth = showLabel ? inputCountAnchor.offsetWidth : 0;

      if (countLabelWidth === me.state.countLabelWidth) {
        return;
      }

      me.setState({
        countLabelWidth: countLabelWidth
      });
    };

    _this.focus = function (e) {
      _this.___countLabelTimer___ = setTimeout(_this.setLabelWidth, 0); // display为none时无法获取宽度

      _this.setState({
        hasFocus: true
      });

      var onFocus = _this.props.onFocus;

      if (onFocus) {
        onFocus((0, _commonTools.handleEventParams)(e, (0, _assertThisInitialized2["default"])(_this)));
      }
    };

    _this.blur = function (e) {
      _this.setState({
        hasFocus: false
      });

      var onBlur = _this.props.onBlur;

      if (onBlur) {
        onBlur((0, _commonTools.handleEventParams)(e, (0, _assertThisInitialized2["default"])(_this)));
      }
    };

    _this.saveRef = function (name) {
      return function (node) {
        _this[name] = node;
      };
    };

    _this.isAddonInput = function () {
      var _this$props2 = _this.props,
          addonBefore = _this$props2.addonBefore,
          addonAfter = _this$props2.addonAfter;
      return addonBefore || addonAfter;
    };

    _this.validateLength = function () {
      var value = _this.state.value;
      var props = _this.props;
      return value && value.length && ((0, _inputTools.isMaxLenError)((0, _extends2["default"])({}, props, {
        value: value
      })) || (0, _inputTools.isMinLenError)((0, _extends2["default"])({}, props, {
        value: value
      }))) || '';
    };

    var _value = typeof _props.value === 'undefined' ? _props.defaultValue : _props.value;

    _this.state = {
      hasFocus: false,
      countLabelWidth: 0,
      value: _value,
      errorMessage: '',
      // errorMessage || ''
      prevValue: _value,
      cacheValue: _value
    };
    return _this;
  }

  var _proto = Input.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.setLabelWidth();
    var _this$props3 = this.props,
        width = _this$props3.width,
        _this$props3$style = _this$props3.style,
        style = _this$props3$style === void 0 ? {} : _this$props3$style;
    var inputDetailRef = this.inputDetailRef;

    if (this.isAddonInput()) {
      // 组合的话要宽度要重新计算
      var inputWidth = width || style.width || _inputTools.defaultInputWidth;
      var addonBeforeRefWidth = this.addonBeforeRef && this.addonBeforeRef.offsetWidth || 0;
      var addonAfterRefWidth = this.addonAfterRef && this.addonAfterRef.offsetWidth || 0;
      inputDetailRef.style.width = inputWidth + addonBeforeRefWidth + addonAfterRefWidth + "px";
    } else if (style.width === '100%' || width === '100%') {
      // 父级别input也应该100%来自定义
      inputDetailRef.style.width = '100%';
      this.inputContainerRef.style.width = '100%';
    }
  };

  Input.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    var newState = {
      prevValue: nextProps.value
    }; // state变化的时候不触发，只有props变化的时候触发，处理中文输入的时候onChange不触发时候改变了state的问题

    if ('value' in nextProps && nextProps.value !== prevState.prevValue) {
      newState.value = nextProps.value;
      newState.cacheValue = nextProps.value;
      var errorMessage = (0, _inputTools.handleErrorMessage)((0, _extends2["default"])({}, nextProps, {
        value: nextProps.value
      }), true, true);
      newState.errorMessage = errorMessage;
    }

    return newState;
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    clearTimeout(this.___countLabelTimer___);
  };

  _proto.getInputClassName = function getInputClassName() {
    var _classnames;

    var _this$props4 = this.props,
        prefixCls = _this$props4.prefixCls,
        disabled = _this$props4.disabled,
        readOnly = _this$props4.readOnly,
        size = _this$props4.size,
        prefix = _this$props4.prefix,
        suffix = _this$props4.suffix;
    return (0, _commonTools.classnames)(prefixCls, (_classnames = {}, _classnames[_config.COMPONENT_MAIN] = !(prefix || suffix), _classnames[prefixCls + "-focus"] = !(prefix || suffix) && this.state.hasFocus, _classnames[prefixCls + "-" + size] = size, _classnames[prefixCls + "-disabled"] = disabled, _classnames[prefixCls + "-readOnly"] = readOnly, _classnames));
  };

  _proto.renderInnerSuffix = function renderInnerSuffix() {
    var _classnames2;

    var _this$props5 = this.props,
        prefixCls = _this$props5.prefixCls,
        maxLen = _this$props5.maxLen,
        propsErrorMessage = _this$props5.errorMessage,
        showClear = _this$props5.showClear;
    var value = this.state.value;
    var operationClassName = (0, _commonTools.classnames)(prefixCls + "-operation", (_classnames2 = {}, _classnames2[prefixCls + "-operation-error"] = this.validateLength(), _classnames2));
    return showClear && value && value.length || maxLen != null ? /*#__PURE__*/_react["default"].createElement("span", {
      className: operationClassName,
      ref: this.saveRef('inputCountAnchor')
    }, this.renderClearIcon(), maxLen != null ? /*#__PURE__*/_react["default"].createElement("span", {
      className: prefixCls + "-count"
    }, (0, _commonTools.handleCountTips)((0, _commonTools.getRealLength)(this.props, value), maxLen)) : null) : null;
  };

  _proto.renderLabeledIcon = function renderLabeledIcon(children) {
    var _classnames3;

    var _this$props6 = this.props,
        prefix = _this$props6.prefix,
        suffix = _this$props6.suffix,
        prefixCls = _this$props6.prefixCls,
        className = _this$props6.className,
        style = _this$props6.style,
        disabled = _this$props6.disabled;

    var inputContent = /*#__PURE__*/_react["default"].createElement("div", {
      className: prefixCls + "-content"
    }, /*#__PURE__*/(0, _react.cloneElement)(children, {
      style: {
        paddingRight: this.state.countLabelWidth || null
      },
      className: this.getInputClassName()
    }), this.renderInnerSuffix());

    if (!prefix && !suffix) {
      return inputContent;
    } // 以下暂时未用到


    var prefixItem = prefix ? /*#__PURE__*/_react["default"].createElement("span", {
      className: prefixCls + "-prefix"
    }, prefix) : null;
    var suffixItem = suffix ? /*#__PURE__*/_react["default"].createElement("span", {
      className: prefixCls + "-suffix"
    }, suffix) : null;
    var wrapperClassName = (0, _commonTools.classnames)(className, _config.COMPONENT_MAIN, prefixCls + "-affix-wrapper", (_classnames3 = {}, _classnames3[prefixCls + "-affix-wrapper-has-prefix"] = !!prefix, _classnames3[prefixCls + "-affix-wrapper-has-suffix"] = !!suffix, _classnames3[prefixCls + "-affix-wrapper-disabled"] = disabled, _classnames3['one-input-focus'] = this.state.hasFocus, _classnames3));
    return /*#__PURE__*/_react["default"].createElement("span", {
      className: wrapperClassName,
      style: style
    }, prefixItem, inputContent, suffixItem);
  };

  _proto.renderInput = function renderInput() {
    var stateValue = this.state.value;
    var cacheValue = this.state.cacheValue;
    var props = this.props;
    var otherProps = (0, _omit["default"])(props, ['prefixCls', 'onPressEnter', 'addonBefore', 'addonAfter', 'prefix', 'suffix', 'defaultValue', 'originInputProps', 'showClear', 'onClear'].concat(_inputTools.commonRemoveProps, ['filterArray', 'isErrorHTML', 'showErrorMessage', 'inputRef']));
    otherProps.value = this.___imeStart___ ? (0, _inputTools.fixControlledValue)(cacheValue) : (0, _inputTools.fixControlledValue)(stateValue);
    otherProps.style = {
      paddingRight: this.state.countLabelWidth || null
    };
    otherProps.onFocus = this.focus;
    otherProps.onBlur = this.blur;
    otherProps.onCompositionStart = this.onInputCompositionStart;
    otherProps.onCompositionEnd = this.onInputCompositionEnd;
    otherProps.onChange = this.onChange;
    otherProps.onKeyDown = this.onKeyDown;
    otherProps.ref = props.inputRef || this.saveRef('inputRef');
    return this.renderLabeledIcon( /*#__PURE__*/_react["default"].createElement("input", (0, _extends2["default"])({}, otherProps, props.originInputProps, {
      "data-type": "input",
      className: (0, _commonTools.classnames)(this.getInputClassName())
    })));
  };

  _proto.renderLabeledInput = function renderLabeledInput(children) {
    var _classnames4;

    var _this$props7 = this.props,
        addonBefore = _this$props7.addonBefore,
        addonAfter = _this$props7.addonAfter,
        prefixCls = _this$props7.prefixCls,
        style = _this$props7.style;

    if (!addonBefore && !addonAfter) {
      return children;
    }

    var wrapperClassName = prefixCls + "-group";
    var addonClassName = wrapperClassName + "-addon";
    var addonBeforeItem = addonBefore ? /*#__PURE__*/_react["default"].createElement("span", {
      className: (0, _commonTools.classnames)(addonClassName, addonClassName + "-before"),
      ref: this.saveRef('addonBeforeRef')
    }, addonBefore) : null;
    var addonAfterItem = addonAfter ? /*#__PURE__*/_react["default"].createElement("span", {
      className: (0, _commonTools.classnames)(addonClassName, addonClassName + "-after"),
      ref: this.saveRef('addonAfterRef')
    }, addonAfter) : null;
    var className = (0, _commonTools.classnames)(prefixCls + "-wrapper", (_classnames4 = {}, _classnames4[wrapperClassName] = addonBeforeItem || addonAfterItem, _classnames4));

    if (addonBeforeItem || addonAfterItem) {
      return /*#__PURE__*/_react["default"].createElement("span", {
        className: prefixCls + "-group-wrapper",
        style: style
      }, /*#__PURE__*/_react["default"].createElement("span", {
        className: className
      }, addonBeforeItem, /*#__PURE__*/(0, _react.cloneElement)(children, {
        style: null
      }), addonAfterItem));
    }

    return /*#__PURE__*/_react["default"].createElement("span", {
      className: className
    }, addonBeforeItem, children, addonAfterItem);
  };

  _proto.renderClearIcon = function renderClearIcon() {
    var value = this.state.value;
    var _this$props8 = this.props,
        prefixCls = _this$props8.prefixCls,
        showClear = _this$props8.showClear,
        maxLen = _this$props8.maxLen,
        disabled = _this$props8.disabled,
        readOnly = _this$props8.readOnly;

    if (showClear && value && value.length && !disabled && !readOnly) {
      var _classnames5;

      var className = (0, _commonTools.classnames)(prefixCls + "-clear-icon", (_classnames5 = {}, _classnames5[prefixCls + "-clear-icon-has-count"] = maxLen !== null, _classnames5));
      return /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconTimesCircle, {
        className: className,
        onClick: this.onClear
      });
    }

    return null;
  };

  _proto.render = function render() {
    var _classnames6;

    var props = this.props;
    var prefixCls = props.prefixCls,
        errorLocation = props.errorLocation,
        _props$style = props.style,
        style = _props$style === void 0 ? {} : _props$style,
        isErrorHTML = props.isErrorHTML,
        className = props.className,
        showError = props.showErrorMessage,
        propsErrorMessage = props.errorMessage,
        width = props.width,
        size = props.size,
        type = props.type,
        suffix = props.suffix,
        prefix = props.prefix;
    var _this$state = this.state,
        hasFocus = _this$state.hasFocus,
        stateErrorMessage = _this$state.errorMessage;
    var errorMessage = propsErrorMessage == null ? stateErrorMessage || this.validateLength() : propsErrorMessage;
    var containerClass = prefixCls + "-all-container";
    var containerProps = {
      className: (0, _commonTools.classnames)(className, containerClass, containerClass + "-" + size, containerClass + "-" + type, (_classnames6 = {}, _classnames6[containerClass + "-error"] = errorMessage, _classnames6[containerClass + "-has-focused"] = hasFocus, _classnames6[_config.COMPONENT_FOCUS] = hasFocus, _classnames6[containerClass + "-has-suffix"] = !!suffix, _classnames6[containerClass + "-has-prefix"] = !!prefix, _classnames6[containerClass + "-error-bottom"] = errorLocation === 'bottom', _classnames6)),
      ref: this.saveRef('inputContainerRef')
    };
    var detailProps = {
      className: prefixCls + "-detail",
      style: (0, _extends2["default"])({}, style),
      ref: this.saveRef('inputDetailRef')
    };

    if (!this.isAddonInput() && (width || style.width)) {
      detailProps.style.width = width || style.width;
    }

    var errorClass = prefixCls + "-error";
    var errorProps = {
      className: (0, _commonTools.classnames)(errorClass, errorClass + "-" + errorLocation)
    };
    var showErrorMessage = showError && (errorLocation === 'layer' ? hasFocus && errorMessage : errorMessage);
    var errorRender = isErrorHTML ? /*#__PURE__*/_react["default"].createElement("div", (0, _extends2["default"])({}, errorProps, {
      /* eslint-disable react/no-danger */
      dangerouslySetInnerHTML: {
        __html: errorMessage
      }
    })) : /*#__PURE__*/_react["default"].createElement("div", errorProps, errorMessage);

    var input = /*#__PURE__*/_react["default"].createElement("div", detailProps, this.renderLabeledInput(this.renderInput()));

    if (errorLocation === 'layer') {
      input = /*#__PURE__*/_react["default"].createElement(_popover["default"], {
        visible: showErrorMessage,
        content: errorRender,
        placement: "bottomLeft"
      }, input);
    }

    return /*#__PURE__*/_react["default"].createElement("div", containerProps, input, errorLocation !== 'layer' && showErrorMessage ? errorRender : null);
  };

  return Input;
}(_react.PureComponent), _class2.defaultProps = {
  prefixCls: 'one-input',
  disabled: false,
  readOnly: false,
  maxLen: null,
  minLen: null,
  errorMessage: null,
  showErrorMessage: true,
  errorLocation: 'right',
  isRequired: false,
  requiredErrorMessage: '',
  maxLenErrorMessage: '',
  minLenErrorMessage: '',
  width: null,
  style: {},
  filterArray: [],
  isErrorHTML: false,
  className: '',
  countMode: _commonTools.CHINA_COUNT_MODE,
  getLength: null,
  size: 'medium',
  originInputProps: {},
  type: 'normal',
  showClear: false,
  onClear: function onClear() {}
}, _class2.Group = void 0, _temp)) || _class);
var _default = Input;
exports["default"] = _default;
module.exports = exports.default;