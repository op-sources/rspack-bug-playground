"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _noop2 = _interopRequireDefault(require("lodash/noop"));

var _react = _interopRequireWildcard(require("react"));

var _componentClasses = _interopRequireDefault(require("component-classes"));

var _dlsIconsReact = require("dls-icons-react");

var _commonTools = require("../../core/commonTools");

var _iconSvg = _interopRequireDefault(require("../iconSvg"));

var _context = require("../providerConfig/context");

var _omit = _interopRequireDefault(require("omit.js"));

var _dec, _class, _class2, _temp;

var defaultHeight = 32;
var Alert = (_dec = (0, _context.withConfigConsumer)('alert'), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(Alert, _PureComponent);

  function Alert(props) {
    var _this;

    _this = _PureComponent.call(this, props) || this;
    _this.alertContentRef = void 0;
    _this.alertRef = void 0;

    _this.componentDidMount = function () {
      _this.setDomClassByHeight();
    };

    _this.componentDidUpdate = function () {
      _this.setDomClassByHeight();
    };

    _this.setDomClassByHeight = function () {
      var alertContentRef = _this.alertContentRef;
      var alertRef = _this.alertRef;

      if (!alertContentRef || !alertRef) {
        return null;
      }

      var height = alertContentRef.offsetHeight;
      var multipleClassName = _this.props.prefixCls + "-multiple";
      var singleClassName = _this.props.prefixCls + "-single";
      var dom = (0, _componentClasses["default"])(alertRef);

      if (height > defaultHeight) {
        dom.remove(singleClassName);
        dom.add(multipleClassName);
      } else if (dom.has(multipleClassName)) {
        dom.remove(multipleClassName);
        dom.add(singleClassName);
      }
    };

    _this.onHandleClose = function (e) {
      e.preventDefault();

      if (!('visble' in _this.props)) {
        _this.setState({
          visible: false
        });
      }

      var onClose = _this.props.onClose;

      if (onClose) {
        onClose(e);
      }
    };

    _this.saveRef = function (type) {
      return function (ref) {
        _this[type] = ref;
      };
    };

    _this.state = {
      visible: props.visible || true
    };
    return _this;
  }

  var _proto = Alert.prototype;

  _proto.render = function render() {
    var _classnames;

    var _this$props = this.props,
        className = _this$props.className,
        prefixCls = _this$props.prefixCls,
        showIcon = _this$props.showIcon,
        icon = _this$props.icon,
        type = _this$props.type,
        content = _this$props.content,
        closable = _this$props.closable,
        title = _this$props.title,
        size = _this$props.size,
        rest = (0, _objectWithoutPropertiesLoose2["default"])(_this$props, ["className", "prefixCls", "showIcon", "icon", "type", "content", "closable", "title", "size"]);
    var visible = this.state.visible;

    if (!visible) {
      return null;
    }

    var iconNode = null;

    if (!icon) {
      switch (type) {
        case 'success':
          iconNode = /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconCheckCircleSolid, {
            className: prefixCls + "-title-icon"
          });
          break;

        case 'info':
          iconNode = /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconInfoCircleSolid, {
            className: prefixCls + "-title-icon"
          });
          break;

        case 'error':
          iconNode = /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconTimesCircleSolid, {
            className: prefixCls + "-title-icon"
          });
          break;

        case 'warning':
          iconNode = /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconExclamationCircleSolid, {
            className: prefixCls + "-title-icon"
          });
          break;

        default:
          iconNode = null;
      }
    } else if (typeof icon === 'string') {
      iconNode = /*#__PURE__*/_react["default"].createElement(_iconSvg["default"], {
        className: prefixCls + "-title-icon",
        type: icon
      });
    } else if ( /*#__PURE__*/_react["default"].isValidElement(icon)) {
      iconNode = icon;
    }

    var alertCls = (0, _commonTools.classnames)(prefixCls, prefixCls + "-" + type, prefixCls + "-" + size, (_classnames = {}, _classnames[prefixCls + "-no-title"] = !title, _classnames[prefixCls + "-with-title"] = !!title, _classnames[prefixCls + "-show-icon"] = showIcon, _classnames[prefixCls + "-has-close-icon"] = closable, _classnames), className);
    var closeIcon = closable ? /*#__PURE__*/_react["default"].createElement("span", {
      onClick: this.onHandleClose,
      className: prefixCls + "-close-icon"
    }, /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconTimes, null)) : null;
    return /*#__PURE__*/_react["default"].createElement("div", (0, _extends2["default"])({
      className: alertCls,
      ref: this.saveRef('alertRef')
    }, (0, _omit["default"])(rest, ['visible', 'onClose'])), showIcon ? /*#__PURE__*/_react["default"].createElement("span", {
      className: prefixCls + "-icon"
    }, iconNode) : null, /*#__PURE__*/_react["default"].createElement("div", null, title ? /*#__PURE__*/_react["default"].createElement("div", {
      className: prefixCls + "-title"
    }, title) : null, /*#__PURE__*/_react["default"].createElement("div", {
      className: prefixCls + "-content",
      ref: this.saveRef('alertContentRef')
    }, content)), closeIcon);
  };

  return Alert;
}(_react.PureComponent), _class2.defaultProps = {
  onClose: _noop2["default"],
  prefixCls: 'one-alert',
  type: 'info',
  size: 'medium'
}, _class2.Page = void 0, _class2.getDerivedStateFromProps = function (nextProps, prevState) {
  if ('visible' in nextProps && nextProps.visible !== prevState.visible) {
    return {
      visible: nextProps.visible
    };
  }

  return null;
}, _temp)) || _class);
var _default = Alert;
exports["default"] = _default;
module.exports = exports.default;