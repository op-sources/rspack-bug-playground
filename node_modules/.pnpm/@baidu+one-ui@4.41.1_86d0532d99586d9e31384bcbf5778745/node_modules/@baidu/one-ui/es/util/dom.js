import _camelCase from "lodash/camelCase";
var scrollbarWidth = null;
export function getScrollbarWidth() {
  if (scrollbarWidth !== null) {
    return scrollbarWidth;
  }

  var measurer = document.createElement('div');
  measurer.style.cssText = 'height:1px;overflow-y:scroll';
  document.body.appendChild(measurer);
  scrollbarWidth = measurer.offsetWidth - measurer.clientWidth;
  document.body.removeChild(measurer);
  return scrollbarWidth;
}
var probe = null;
export function cssSupports(prop, val) {
  if (typeof CSS !== 'undefined') {
    return CSS.supports(prop, typeof val === 'undefined' ? 'inherit' : val);
  }

  if (!probe) {
    probe = document.createElement('div');
  }

  var style = probe.style;

  var p = _camelCase(prop);

  if (typeof style[p] === 'undefined') {
    // prop is not supported
    return false;
  }

  if (typeof val === 'undefined') {
    return true;
  }

  style[p] = val;
  var result = style[p] !== '';
  style[p] = '';
  return result;
}
/**
 * 获取当前元素所在的滚动容器
 *
 * @param elem 当前元素
 */

export function getScrollableContainer(elem) {
  var node = elem;
  var nodeName;
  /* eslint no-cond-assign:0 */

  while ((nodeName = node.nodeName.toLowerCase()) !== 'body') {
    var overflowY = window.getComputedStyle(node).overflowY;

    if (node !== elem && (overflowY === 'auto' || overflowY === 'scroll') && node.scrollHeight > node.clientHeight) {
      return node;
    }

    node = node.parentNode;
  }

  return nodeName === 'body' ? node.ownerDocument : node;
}