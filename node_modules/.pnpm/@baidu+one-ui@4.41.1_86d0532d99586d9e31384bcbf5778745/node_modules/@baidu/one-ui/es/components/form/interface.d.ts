import { ReactNode } from 'react';
import { RuleItem } from 'async-validator';
import { ColProps } from '../grid/interface';
import { BasePropsWithChildren } from '../interface';
import { MessageProps } from '../message';
export interface FormProps extends BasePropsWithChildren, Omit<JSX.IntrinsicElements['form'], 'ref'> {
    /**
     * 尺寸
     */
    size?: 'small' | 'medium' | 'large';
    /**
     * 表单布局
     */
    layout?: 'default' | 'inline' | 'grid';
    /**
     * 紧凑性
     */
    density?: 'compact' | 'default';
    /**
     * 是否展示必填标记
     */
    hideRequiredMark?: boolean;
    /**
     * 是否展示标签后的冒号
     */
    colon?: boolean;
    /**
     * 标签布局
     */
    labelCol?: ColProps;
    /**
     * 内容区布局
     */
    wrapperCol?: ColProps;
    /**
     * 标签的文本对齐方式
     */
    labelAlign?: 'left' | 'right';
    /**
     * 表单项名称映射属性
     */
    fieldNameProp?: string;
    /**
     * 校验信息
     */
    validateMessages?: {
        [key: string]: string;
    };
    /**
     * 表单变化回调，包括error
     */
    onFieldsChange?(formProps: FormProps, changedFields: {
        [key: string]: any;
    }, allFields: {
        [key: string]: any;
    }): void;
    /**
     * 表单值变化回调
     */
    onValuesChange?(formProps: FormProps, changedValues: {
        [key: string]: any;
    }, allValues: {
        [key: string]: any;
    }): void;
    /**
     * 属性处理
     */
    mapProps?(props: FormProps): FormProps;
    /**
     * 属性与field映射
     */
    mapPropsToFields?(props: FormProps): {
        [key: string]: FormField;
    };
    /**
     * 表单属性名称，默认`form`
     */
    formPropName?: string;
    /**
     * 表单名
     */
    name?: string;
    /**
     * 提交表单数据验证成功回调
     */
    onFinish?: (values: Record<string, any>) => void;
    /**
     * 提交表单数据验证失败回调
     */
    onFinishFailed?: (errors: Record<string, {
        errors: Array<{
            field: string;
            message: ReactNode | ReactNode[];
        }>;
    }>, values: Record<string, any>) => void;
    /**
     * 提交失败自动滚动到第一个错误字段
     */
    scrollToFirstError?: boolean;
    /**
     * 标签位置，仅适用于Form.Field
     */
    labelPosition?: 'side' | 'top';
    /**
     * 表单项撑满宽度
     */
    fillWidth?: boolean;
}
export interface FormFieldGroupProps extends BasePropsWithChildren, Omit<JSX.IntrinsicElements['div'], 'ref'> {
    /**
     * 尺寸
     */
    size?: 'small' | 'medium' | 'large';
    /**
     * 表单布局
     */
    layout?: 'default' | 'inline' | 'grid';
    /**
     * 紧凑性
     */
    density?: 'compact' | 'default';
    /**
     * 是否展示必填标记
     */
    hideRequiredMark?: boolean;
    /**
     * 标签的文本对齐方式
     */
    labelAlign?: 'left' | 'right';
    /**
     * 标签位置，仅适用于Form.Field
     */
    labelPosition?: 'side' | 'top';
    /**
     * 表单项撑满宽度
     */
    fillWidth?: boolean;
}
export interface FormField {
    /**
     * 值
     */
    value: any;
    /**
     * 错误
     */
    errors?: Array<{
        field?: string;
        message: ReactNode | ReactNode[];
    }>;
    /**
     * 警告
     */
    warnings?: Array<{
        field?: string;
        message: ReactNode | ReactNode[];
    }>;
    /**
     * 正确
     */
    successes?: Array<{
        field?: string;
        message: ReactNode | ReactNode[];
    }>;
    /**
     * 名称
     */
    name?: string;
    /**
     * 校验中
     */
    validating?: boolean;
    /**
     * 标记dirty，则不重新校验
     */
    dirty?: boolean;
}
interface FormFieldRule extends RuleItem {
    /**
     * 校验类型
     */
    invalidType?: 'error' | 'warning';
    /**
     * 展示成功信息
     */
    successMessage?: ReactNode;
}
export interface FormFieldOption {
    /**
     * 初始值
     */
    initialValue?: any;
    /**
     * 值属性名
     */
    valuePropName?: string;
    /**
     * 值变化触发属性，默认`onChange`
     */
    trigger?: string;
    /**
     * 校验触发属性，默认同`trigger`
     */
    validateTrigger?: string;
    /**
     * 校验规则
     */
    rules?: FormFieldRule[];
    /**
     * 归一化
     */
    normalize?: (value: any, values: Record<string, any>, newValues: Record<string, any>) => any;
    /**
     * 隐藏(不收集)
     */
    hidden?: boolean;
    /**
     * trigger回调值转换
     */
    getValueFromEvent?: (...args: any[]) => any;
    /**
     * 当某一规则校验不通过，是否停止校验
     */
    validateFirst?: boolean;
    /**
     * 字段删除时保留值
     */
    preserve?: boolean;
}
export interface FormOption {
    /**
     * 表单项名称映射属性
     */
    fieldNameProp?: string;
    /**
     * 校验信息
     */
    validateMessages?: {
        [key: string]: string;
    };
    /**
     * 表单变化回调，包括error
     */
    onFieldsChange?(formProps: FormProps, changedFields: {
        [key: string]: any;
    }, allFields: {
        [key: string]: any;
    }): void;
    /**
     * 表单值变化回调
     */
    onValuesChange?(formProps: FormProps, changedValues: {
        [key: string]: any;
    }, allValues: {
        [key: string]: any;
    }): void;
    /**
     * 属性处理
     */
    mapProps?(props: FormProps): FormProps;
    /**
     * 属性与field映射
     */
    mapPropsToFields?(props: FormProps): {
        [key: string]: FormField;
    };
    /**
     * 表单属性名称，默认`form`
     */
    formPropName?: string;
    /**
     * 表单名
     */
    name?: string;
    /**
     * 尺寸
     */
    size?: 'small' | 'medium' | 'large';
}
export interface FormItemProps extends BasePropsWithChildren {
    /**
     * 标签
     */
    label?: ReactNode;
    /**
     * 标签的文本对齐方式
     */
    labelAlign?: string;
    /**
     * 标签布局
     */
    labelCol?: ColProps;
    /**
     * 内容区布局
     */
    wrapperCol?: ColProps;
    /**
     * 校验状态，如不设置，则会根据校验规则自动生成
     */
    validateStatus?: 'success' | 'warning' | 'error' | 'validating';
    /**
     * 是否必填
     */
    required?: boolean;
    /**
     * 是否展示标签后的冒号
     */
    colon?: boolean;
    /**
     * 提示信息，如不设置，则会根据校验规则自动生成
     */
    help?: ReactNode | boolean;
    /**
     * 额外的提示信息，和 help 类似，当需要错误信息和提示文案同时出现时，可以使用
     */
    extra?: ReactNode;
    /**
     * 提示信息位置
     */
    extralPlacemenet?: 'left' | 'center' | 'right';
    /**
     * 用于标签for属性
     */
    htmlFor?: string;
    /**
     * 用于标签for属性
     */
    id?: string;
}
export interface FormFieldProps extends FormFieldOption, BasePropsWithChildren {
    /**
     * 标签
     */
    label?: ReactNode;
    /**
     * 提示
     */
    tip?: ReactNode | MessageProps;
    /**
     * 表单项名称
     */
    name?: string;
    /**
     * 校验状态，如不设置，则会根据校验规则自动生成
     */
    validateStatus?: 'success' | 'warning' | 'error' | 'validating';
    /**
     * 校验信息，如不设置，则会根据校验规则自动生成
     */
    validateMessage?: ReactNode;
    /**
     * 校验中提示
     */
    validatingMessage?: ReactNode;
    /**
     * 是否必填
     */
    required?: boolean;
    /**
     * 提示信息，如不设置，则会根据校验规则自动生成
     */
    help?: ReactNode | boolean;
    /**
     * 提示信息位置
     */
    helpPosition?: 'top' | 'bottom' | 'side';
    /**
     * 抽象表单项，抽象的项目没有标题，也不会展示校验信息
     */
    abstract?: boolean;
    /**
     * 表单项的校验信息是否展示图标
     */
    messageDisplay?: 'normal' | 'simple';
    /**
     * 是否是操作项
     */
    actions?: boolean;
    /**
     * 用于标签for属性
     */
    htmlFor?: string;
    /**
     * 独占行
     */
    display?: 'standalone';
    /**
     * 表单项撑满宽度
     */
    fillWidth?: boolean;
}
export {};
