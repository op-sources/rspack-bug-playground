/**
 * @file 菜单的列
 */
import { CSSProperties, PureComponent, ReactElement, ReactNode } from 'react';
import { CascaderOption } from '../cascader';
interface ColumnProps {
    prefixCls: string;
    style?: CSSProperties;
    size: 'xsmall' | 'small' | 'medium' | 'large';
    options: Array<{
        parent: CascaderOption;
    }>;
    showCheckbox: boolean;
    index: number;
    width: number;
    value: string | number;
    valuePath: Array<string | number>;
    activeValuePath?: Array<string | number>;
    expandIcon: ReactNode;
    loadingIcon: ReactNode;
    loadingMap: Record<string, boolean>;
    onSelect: (key: string, keyPath: string, index: number) => void;
    onHover: (key: string, keyPath: string, index: number) => void;
    onCheck: (key: string) => void;
    expandTrigger: 'click' | 'hover';
    firstColumnGroup: boolean | Array<{
        label: string;
        value: string;
        children: string[];
    }>;
    CustomItemRender: ReactNode;
    header: ReactNode;
    footer: ReactNode;
    checkboxPrefixCls?: string;
    renderOption?: (param: {
        node: ReactElement;
        option: CascaderOption;
    }) => ReactElement;
}
export default class Column extends PureComponent<ColumnProps> {
    state: {
        expandedKeys: any[];
    };
    prefix(name: any): string;
    render(): JSX.Element;
    renderGroup: (option: any) => any;
    renderGroupOptions(options: any): any;
    renderOptions(options: any): any;
    renderOption(option: any, group?: any): any;
    handleOnHover: (key: any, keyPath: any) => void;
    static getDerivedStateFromProps(nextProps: any, prevState: any): {
        expandedKeys: any;
        inited: boolean;
    };
    componentDidUpdate(prevProps: any): void;
    handleOnSelect: (key: any, keyPath: any) => void;
    renderCustomItem(CustomItemRender: any): JSX.Element;
    getParentOption(): any;
    renderHeader(): JSX.Element;
    renderFooter(): JSX.Element;
}
export {};
