import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import React, { isValidElement } from 'react';
import Select from '../../select';
import SearchBox from '../../searchBox';
import { withConfigConsumer } from '../../providerConfig/context';
;
var Option = Select.Option;

var CommonSearchRender = function CommonSearchRender(props) {
  var levelOptions = props.levelOptions,
      handleLevelChange = props.handleLevelChange,
      searchBoxProps = props.searchBoxProps,
      prefixCls = props.prefixCls,
      isShowLevelSelect = props.isShowLevelSelect,
      levelKey = props.levelKey,
      onSelectFocus = props.onSelectFocus,
      SearchBoxRender = props.SearchBoxRender,
      customSearchProps = _objectWithoutPropertiesLoose(props, ["levelOptions", "handleLevelChange", "searchBoxProps", "prefixCls", "isShowLevelSelect", "levelKey", "onSelectFocus", "SearchBoxRender"]);

  var selectProps = {
    mode: 'default',
    className: prefixCls + "-category"
  };

  if (levelKey != null) {
    selectProps.value = levelKey;
  }

  if (SearchBoxRender && typeof SearchBoxRender === 'function') {
    return /*#__PURE__*/React.createElement(SearchBoxRender, props);
  } else if ( /*#__PURE__*/isValidElement(SearchBoxRender)) {
    return SearchBoxRender;
  }

  return /*#__PURE__*/React.createElement("div", {
    className: prefixCls + "-search-box-bar"
  }, isShowLevelSelect ? /*#__PURE__*/React.createElement(Select, _extends({
    defaultValue: levelKey || levelOptions[0] && levelOptions[0].value,
    onChange: handleLevelChange,
    onFocus: onSelectFocus
  }, selectProps), levelOptions.map(function (option) {
    return /*#__PURE__*/React.createElement(Option, {
      value: option.value,
      key: option.value
    }, option.label);
  })) : null, /*#__PURE__*/React.createElement(SearchBox, _extends({}, searchBoxProps, customSearchProps)));
};

CommonSearchRender.defaultProps = {
  levelOptions: null,
  handleLevelChange: function handleLevelChange() {},
  searchBoxProps: {},
  isShowLevelSelect: false,
  levelKey: null,
  onSelectFocus: function onSelectFocus() {},
  prefixCls: 'one-transfer'
};
export default withConfigConsumer('transfer')(CommonSearchRender);