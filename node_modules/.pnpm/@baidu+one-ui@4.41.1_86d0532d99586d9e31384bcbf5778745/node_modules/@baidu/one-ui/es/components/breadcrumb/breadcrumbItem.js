import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import _noop from "lodash/noop";

var _dec, _class, _class2, _temp;

import React, { PureComponent } from 'react';
import { IconChevronRight } from 'dls-icons-react';
import { classnames } from '../../core/commonTools';
import { withConfigConsumer } from '../providerConfig/context';
var BreadcrumbItem = (_dec = withConfigConsumer('breadcrumb'), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_PureComponent) {
  _inheritsLoose(BreadcrumbItem, _PureComponent);

  function BreadcrumbItem() {
    return _PureComponent.apply(this, arguments) || this;
  }

  var _proto = BreadcrumbItem.prototype;

  _proto.render = function render() {
    var _classnames;

    var _this$props = this.props,
        prefixCls = _this$props.prefixCls,
        separator = _this$props.separator,
        children = _this$props.children,
        onClick = _this$props.onClick,
        disabled = _this$props.disabled,
        className = _this$props.className,
        lightPrefix = _this$props.lightPrefix,
        restProps = _objectWithoutPropertiesLoose(_this$props, ["prefixCls", "separator", "children", "onClick", "disabled", "className", "lightPrefix"]);

    var link;
    var linkClassName = classnames((_classnames = {}, _classnames[prefixCls + "-link-disabled"] = disabled, _classnames[prefixCls + "-link"] = !disabled, _classnames), className);

    var linkProps = _extends({
      className: linkClassName
    }, restProps);

    if ('href' in this.props) {
      if (disabled) {
        delete linkProps.href;
      }

      link = /*#__PURE__*/React.createElement("a", linkProps, children);
    } else {
      link = /*#__PURE__*/React.createElement("span", linkProps, children);
    }

    if (children) {
      return /*#__PURE__*/React.createElement("span", {
        onClick: onClick
      }, link, /*#__PURE__*/React.createElement("span", {
        className: prefixCls + "-separator"
      }, separator));
    }

    return null;
  };

  return BreadcrumbItem;
}(PureComponent), _class2.defaultProps = {
  prefixCls: 'one-breadcrumb',
  separator: /*#__PURE__*/React.createElement(IconChevronRight, null),
  onClick: _noop,
  disabled: false
}, _temp)) || _class);
export default BreadcrumbItem;