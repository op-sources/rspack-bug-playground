import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import React, { PureComponent } from 'react';
import { classnames } from '../../../core/commonTools';

var Content = /*#__PURE__*/function (_PureComponent) {
  _inheritsLoose(Content, _PureComponent);

  function Content() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;
    _this.isItemActive = void 0;
    return _this;
  }

  var _proto = Content.prototype;

  _proto.render = function render() {
    var _classnames;

    // 判断isItemActive再与避免不用的重复渲染
    var _this$props = this.props,
        renderDomWhenHide = _this$props.renderDomWhenHide,
        isActive = _this$props.isActive,
        prefixCls = _this$props.prefixCls,
        children = _this$props.children,
        destroyNotActivePanel = _this$props.destroyNotActivePanel,
        contentClassName = _this$props.contentClassName;
    this.isItemActive = renderDomWhenHide || this.isItemActive || isActive;

    if (!this.isItemActive) {
      return null;
    }

    var contentCls = classnames(prefixCls + "-item-content", (_classnames = {}, _classnames[prefixCls + "-item-content-active"] = isActive, _classnames[prefixCls + "-item-content-not-active"] = !isActive, _classnames), contentClassName);
    var child = !renderDomWhenHide && !isActive && destroyNotActivePanel ? null : /*#__PURE__*/React.createElement("div", {
      className: prefixCls + "-content-box"
    }, children);
    return /*#__PURE__*/React.createElement("div", {
      className: contentCls
    }, child);
  };

  return Content;
}(PureComponent);

export { Content as default };