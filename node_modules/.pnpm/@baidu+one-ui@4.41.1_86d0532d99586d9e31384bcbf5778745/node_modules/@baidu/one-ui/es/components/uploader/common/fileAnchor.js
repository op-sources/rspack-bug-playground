import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import React, { PureComponent } from 'react';
import { classnames } from '../../../core/commonTools';
import Button from '../../button';

var FileAnchor = /*#__PURE__*/function (_PureComponent) {
  _inheritsLoose(FileAnchor, _PureComponent);

  function FileAnchor() {
    return _PureComponent.apply(this, arguments) || this;
  }

  var _proto = FileAnchor.prototype;

  _proto.render = function render() {
    var _classnames;

    var _this$props = this.props,
        onClick = _this$props.onClick,
        loading = _this$props.loading,
        prefixCls = _this$props.prefixCls,
        disabled = _this$props.disabled,
        helperText = _this$props.helperText,
        maxSize = _this$props.maxSize,
        helperTextPosition = _this$props.helperTextPosition,
        pickerIcon = _this$props.pickerIcon,
        pickerText = _this$props.pickerText;
    var buttonClassName = prefixCls + "-anchor-file-button";
    var buttonProps = {
      className: buttonClassName,
      onClick: onClick,
      loading: loading,
      disabled: disabled,
      icon: pickerIcon || 'upload'
    };
    var fileAnchorClassName = classnames(prefixCls + "-anchor-file-container", (_classnames = {}, _classnames[prefixCls + "-anchor-file-container-" + helperTextPosition] = helperTextPosition === 'right' || helperTextPosition === 'bottom', _classnames));
    var helperTextNode;

    if (helperText === undefined) {
      helperTextNode = defaultHelperText(maxSize); // 兼容之前实现
    } else if (typeof helperText === 'function') {
      helperTextNode = helperText();
    } else {
      helperTextNode = helperText;
    }

    return /*#__PURE__*/React.createElement("span", {
      className: fileAnchorClassName
    }, /*#__PURE__*/React.createElement(Button, buttonProps, pickerText || '文件上传'), helperTextNode ? /*#__PURE__*/React.createElement("span", {
      className: prefixCls + "-helper-text"
    }, helperTextNode) : null);
  };

  return FileAnchor;
}(PureComponent);

FileAnchor.defaultProps = {
  helperTextPosition: 'right'
};
export { FileAnchor as default };

function defaultHelperText(maxSize) {
  if (maxSize) {
    return '文件大小不超过' + maxSize / (1024 * 1024) + 'MB';
  }

  return null;
}