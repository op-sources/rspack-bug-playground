import React from 'react';
import { Store } from 'mini-store';
import { MenuProps } from '../interface';
interface InnerMenuProps extends MenuProps {
    selectable: boolean;
    subMenuOpenDelay: number;
    subMenuCloseDelay: number;
    triggerSubMenuAction: string;
    builtinPlacements: object;
}
export interface MenuStore {
    selectedKeys: Array<string | number>;
    openKeys: Array<string | number>;
    activeKey: {
        [key: string]: string | number;
    };
}
declare class Menu extends React.Component<InnerMenuProps> {
    static defaultProps: {
        selectable: boolean;
        onClick: () => void;
        onSelect: () => void;
        onOpenChange: () => void;
        onDeselect: () => void;
        defaultSelectedKeys: any[];
        defaultOpenKeys: any[];
        subMenuOpenDelay: number;
        subMenuCloseDelay: number;
        triggerSubMenuAction: string;
        prefixCls: string;
        className: string;
        mode: string;
        builtinPlacements: {};
    };
    isRootMenu: any;
    store: Store<MenuStore>;
    innerMenu: any;
    constructor(props: any);
    componentDidMount(): void;
    componentDidUpdate(): void;
    onSelect: (selectInfo: any) => void;
    onKeyDown: (e: any, callback: any) => void;
    onOpenChange: (event: any) => void;
    onDeselect: (selectInfo: any) => void;
    setInnerMenu: (node: any) => void;
    updateMiniStore(): void;
    render(): JSX.Element;
}
export default Menu;
