import MessageContainer from './common/message';
import { ToastConfigOptions, ToastProps } from './interface';
declare const _default: {
    info(props: ToastProps): {
        (): void;
        then(filled: any, rejected: any): Promise<unknown>;
        promise: Promise<unknown>;
    };
    success(props: ToastProps): {
        (): void;
        then(filled: any, rejected: any): Promise<unknown>;
        promise: Promise<unknown>;
    };
    error(props: ToastProps): {
        (): void;
        then(filled: any, rejected: any): Promise<unknown>;
        promise: Promise<unknown>;
    };
    warning(props: ToastProps): {
        (): void;
        then(filled: any, rejected: any): Promise<unknown>;
        promise: Promise<unknown>;
    };
    loading(props: ToastProps): {
        (): void;
        then(filled: any, rejected: any): Promise<unknown>;
        promise: Promise<unknown>;
    };
    config(options: ToastConfigOptions): void;
    destroy(): void;
    /**
     * @internal 仅限特殊场合，不得用于业务
     */
    Element: typeof MessageContainer;
};
export default _default;
export * from './interface';
