import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import React, { PureComponent } from 'react';
import { connect } from 'mini-store';
import WeekRender from './weekRender';
import Calendar from './calendar';
import classNames from 'classnames';

var DayItemRender = /*#__PURE__*/function (_PureComponent) {
  _inheritsLoose(DayItemRender, _PureComponent);

  function DayItemRender() {
    return _PureComponent.apply(this, arguments) || this;
  }

  var _proto = DayItemRender.prototype;

  _proto.render = function render() {
    var _classNames;

    var _this$props = this.props,
        panelType = _this$props.panelType,
        prefixCls = _this$props.prefixCls,
        mode = _this$props.mode;

    if (panelType === 'month') {
      return null;
    }

    var bodyContainerClassName = classNames(prefixCls + "-day-container", (_classNames = {}, _classNames[prefixCls + "-week-mode"] = mode === 'week', _classNames));
    return /*#__PURE__*/React.createElement("div", {
      className: bodyContainerClassName
    }, /*#__PURE__*/React.createElement(WeekRender, this.props), /*#__PURE__*/React.createElement(Calendar, this.props));
  };

  return DayItemRender;
}(PureComponent);

export default connect(function (state) {
  var _ref = state._value,
      beginDate = _ref[0],
      endDate = _ref[1];
  return {
    showYear: state.showYear,
    showMonth: state.showMonth,
    panelType: state.panelType,
    beginDate: beginDate,
    endDate: endDate,
    validateMinDate: state.validateMinDate,
    validateMaxDate: state.validateMaxDate
  };
})(DayItemRender);