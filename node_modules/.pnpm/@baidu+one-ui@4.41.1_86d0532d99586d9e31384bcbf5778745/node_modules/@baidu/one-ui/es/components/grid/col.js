import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import React from 'react';
import { classnames } from '../../core/commonTools';
import { withConfigConsumer } from '../providerConfig/context';
var colSize = ['xs', 'sm', 'md', 'lg', 'xl'];
export var GridCol = function GridCol(props) {
  var _classnames;

  var span = props.span,
      order = props.order,
      offset = props.offset,
      push = props.push,
      pull = props.pull,
      className = props.className,
      children = props.children,
      _props$prefixCls = props.prefixCls,
      prefixCls = _props$prefixCls === void 0 ? 'one-col' : _props$prefixCls,
      lightPrefix = props.lightPrefix,
      others = _objectWithoutPropertiesLoose(props, ["span", "order", "offset", "push", "pull", "className", "children", "prefixCls", "lightPrefix"]);

  var sizeClassObj = {};
  colSize.forEach(function (size) {
    var _extends2;

    var sizeProps = {};

    if (typeof props[size] === 'number') {
      sizeProps.span = props[size];
    } else if (typeof props[size] === 'object') {
      sizeProps = props[size] || {};
    }

    delete others[size];
    sizeClassObj = _extends({}, sizeClassObj, (_extends2 = {}, _extends2[prefixCls + "-" + size + "-" + sizeProps.span] = sizeProps.span !== undefined, _extends2[prefixCls + "-" + size + "-order-" + sizeProps.order] = sizeProps.order || sizeProps.order === 0, _extends2[prefixCls + "-" + size + "-offset-" + sizeProps.offset] = sizeProps.offset || sizeProps.offset === 0, _extends2[prefixCls + "-" + size + "-push-" + sizeProps.push] = sizeProps.push || sizeProps.push === 0, _extends2[prefixCls + "-" + size + "-pull-" + sizeProps.pull] = sizeProps.pull || sizeProps.pull === 0, _extends2));
  });
  var classes = classnames((_classnames = {}, _classnames[prefixCls + "-" + span] = span !== undefined, _classnames[prefixCls + "-order-" + order] = order, _classnames[prefixCls + "-offset-" + offset] = offset, _classnames[prefixCls + "-push-" + push] = push, _classnames[prefixCls + "-pull-" + pull] = pull, _classnames), className, sizeClassObj);
  return /*#__PURE__*/React.createElement("div", _extends({}, others, {
    className: classes
  }), children);
};
export default withConfigConsumer('col')(GridCol);