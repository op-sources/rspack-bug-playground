import { PureComponent, ReactNode } from 'react';
interface SelectPopOverProps {
    prefixCls: string;
    overlayClassName: string;
    style: object;
    overlayStyle: object;
    visible: boolean;
    onVisibleChange(visible: boolean): any;
    mouseEnterDelay: number;
    mouseLeaveDelay: number;
    transitionName: string;
    openClassName: string;
    autoAdjustOverflow: boolean | ({
        adjustX: 0 | 1;
        adjustY: 0 | 1;
    });
    getPopupContainer(): HTMLElement;
    overlay: ReactNode;
    dropdownMatchSelectWidth: boolean;
    onClickConfirm(): any;
    onClickCancel(): any;
    onRemoveSelected(selectedKey: string, value: Array<string | number>): any;
    titleCallback: {
        type: string;
        selectorName: string;
    };
    value: Array<string | number>;
    maxTagCount: number;
    errorMessage: string;
    showConfirmButton: boolean;
    showCancelButton: boolean;
}
interface SelectPopOverState {
    visible?: boolean;
    open?: boolean;
    value?: Array<string | number>;
    prevProps?: SelectPopOverProps;
}
declare class SelectPopOver extends PureComponent<SelectPopOverProps, SelectPopOverState> {
    static defaultProps: {
        prefixCls: string;
        transitionName: string;
        mouseEnterDelay: number;
        mouseLeaveDelay: number;
        autoAdjustOverflow: boolean;
        dropdownMatchSelectWidth: boolean;
        titleCallback: {
            type: string;
            selectorName: string;
        };
        value: any[];
        showConfirmButton: boolean;
        showCancelButton: boolean;
    };
    constructor(props: any);
    saveSelectionRef: any;
    selectPopOver: any;
    static getDerivedStateFromProps: (nextProps: any, prevState: any) => SelectPopOverState;
    onVisibleChange: (visible: any) => void;
    onClickConfirm: () => void;
    onClickCancel: () => void;
    getContainerLayer: (ref: any) => void;
    getErrorMessage(): JSX.Element;
    removeSelected: (selectedKey: any, e: any) => void;
    renderOverLay(): JSX.Element;
    renderTopControlNode: () => JSX.Element;
    renderTotalDom(): JSX.Element;
    render(): JSX.Element;
}
export default SelectPopOver;
