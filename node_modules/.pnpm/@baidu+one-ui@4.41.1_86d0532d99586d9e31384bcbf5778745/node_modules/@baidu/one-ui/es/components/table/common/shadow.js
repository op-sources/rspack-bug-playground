import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { connect } from 'mini-store';

var ShadowArea = /*#__PURE__*/function (_PureComponent) {
  _inheritsLoose(ShadowArea, _PureComponent);

  function ShadowArea() {
    return _PureComponent.apply(this, arguments) || this;
  }

  var _proto = ShadowArea.prototype;

  _proto.calcWidth = function calcWidth() {
    var _this$props = this.props,
        allColumnsWidth = _this$props.allColumnsWidth,
        placement = _this$props.placement;
    var filters = allColumnsWidth.filter(function (col) {
      return col.fixed === placement;
    });

    if (!filters.length) {
      return;
    }

    var totalWidth = 0;
    filters.forEach(function (col) {
      totalWidth += col.width;
    });
    return totalWidth;
  };

  _proto.render = function render() {
    var _this$props2 = this.props,
        prefixCls = _this$props2.prefixCls,
        placement = _this$props2.placement,
        allColumnsWidth = _this$props2.allColumnsWidth;

    if (!allColumnsWidth.length) {
      return null;
    }

    var width = this.calcWidth();

    if (!width) {
      return null;
    }

    return /*#__PURE__*/React.createElement("div", {
      className: prefixCls + "-" + placement + "-shadow",
      style: {
        width: width
      }
    });
  };

  return ShadowArea;
}(PureComponent);

ShadowArea.propTypes = {
  allColumnsWidth: PropTypes.array,
  placement: PropTypes.oneOf(['left', 'right']),
  prefixCls: PropTypes.string
};
export default connect(function (state) {
  return {
    allColumnsWidth: state.allColumnsWidth
  };
})(ShadowArea);