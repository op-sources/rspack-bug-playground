import { PureComponent, ReactNode } from 'react';
import { BaseProps } from '../interface';
declare type SingleSelectOption = {
    disabled?: boolean;
    value: string | number;
    label: ReactNode;
    divider?: boolean;
    children?: SingleSelectOption[];
};
interface SingleSelectProps extends BaseProps {
    /** options */
    options: SingleSelectOption[];
    /** 传入的value */
    value: string | number;
    /** 弹出的位置 */
    placement: 'bottomLeft' | 'bottomRight' | 'topLeft' | 'topRight';
    /** 是否禁用 */
    disabled: boolean;
    /** 触发的trigger, 可选hover,click */
    trigger: string;
    /** 视图改变时候触发 */
    onVisibleChange(visible: boolean): any;
    /** 是否可见 */
    visible: any;
    /** 弹窗挂载的位置 */
    getPopupContainer: any;
    /** 选择的时候触发 */
    onChange(menuInfo: any): any;
    /** 可定义dropdown的高度 */
    dropdownHeight: string | number;
    /** placeholder名称 */
    selectorName: string;
}
interface SingleSelectState {
    value: string | number;
    isExpend: boolean;
}
export default class SingleSelect extends PureComponent<SingleSelectProps, SingleSelectState> {
    static defaultProps: {
        prefixCls: string;
        disabled: boolean;
        dropdownHeight: string;
        style: {};
        trigger: string;
        selectorName: string;
    };
    constructor(props: any);
    onChange: (e: any) => void;
    getSubMenuItem: (option: any, index?: any) => JSX.Element;
    getDropdownOverlay: () => JSX.Element;
    renderValueByOptions: (options: any, value: any, label?: string) => string;
    getSelectedLabel: () => string;
    dropdownVisibleChange: (visible: any) => void;
    render(): JSX.Element;
}
export {};
