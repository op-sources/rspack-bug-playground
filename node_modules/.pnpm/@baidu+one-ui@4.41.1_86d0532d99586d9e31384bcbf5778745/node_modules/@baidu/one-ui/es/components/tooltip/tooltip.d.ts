import { PureComponent } from 'react';
import { TooltipProps } from './interface';
declare type TooltipState = {
    visible: boolean;
};
declare class Tooltip extends PureComponent<TooltipProps, TooltipState> {
    static defaultProps: {
        prefixCls: string;
        placement: string;
        transitionName: string;
        mouseEnterDelay: number;
        mouseLeaveDelay: number;
        arrowPointAtCenter: boolean;
        autoAdjustOverflow: boolean;
        type: string;
    };
    constructor(props: any);
    static getDerivedStateFromProps: (nextProps: any, prevState: any) => {
        visible: any;
    };
    onVisibleChange: (visible: any) => void;
    tooltipRef: any;
    getTooltipRef: (ref: any) => void;
    onPopupAlign: (domNode: any, align: any) => void;
    getPlacements(): {
        left: {
            points: string[];
            offset: number[];
        };
        right: {
            points: string[];
            offset: number[];
        };
        top: {
            points: string[];
            offset: number[];
        };
        bottom: {
            points: string[];
            offset: number[];
        };
        topLeft: {
            points: string[];
            offset: number[];
        };
        leftTop: {
            points: string[];
            offset: number[];
        };
        topRight: {
            points: string[];
            offset: any[];
        };
        rightTop: {
            points: string[];
            offset: number[];
        };
        bottomRight: {
            points: string[];
            offset: any[];
        };
        rightBottom: {
            points: string[];
            offset: any[];
        };
        bottomLeft: {
            points: string[];
            offset: number[];
        };
        leftBottom: {
            points: string[];
            offset: any[];
        };
    };
    getDisabledCompatibleChildren(element: any): any;
    isHoverTrigger(): boolean;
    isNoTitle(): boolean;
    render(): JSX.Element;
}
export default Tooltip;
