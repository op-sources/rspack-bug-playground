import { PureComponent } from 'react';
import TabPane from './tabPane';
import { TabsProps } from './interface';
interface TabsState {
    activeKey?: string;
}
declare class Tabs extends PureComponent<TabsProps, TabsState> {
    static defaultProps: {
        prefixCls: string;
        className: string;
        size: string;
        showAdd: boolean;
        type: string;
        bordered: boolean;
        sortable: boolean;
        onTabClick(): void;
        onChange(): void;
        onDelete(): void;
        onAdd(): void;
        showAddDisabled: boolean;
        addButtonText: string;
        hideSpace: boolean;
    };
    constructor(props: any);
    static getDerivedStateFromProps: (nextProps: any, prevState: any) => TabsState;
    static TabPane: typeof TabPane;
    onClick: (key: any, props: any) => void;
    onBeforeDelete: (key: any, props: any) => Promise<boolean>;
    onDelete: (key: any, props: any) => void;
    onAdd: () => void;
    onChange: (currentKey: any) => void;
    renderChildren: () => {
        newTitleChildren: JSX.Element[];
        newPaneChildren: any[];
    };
    scrollBarRef: any;
    getScrollBarRef: (ref: any) => void;
    render(): JSX.Element;
}
export default Tabs;
