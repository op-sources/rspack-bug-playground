import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import React, { forwardRef } from 'react';
import classNames from 'classnames';
import { withConfigConsumer } from '../providerConfig/context';

var CardHeader = function CardHeader(_ref) {
  var prefixCls = _ref.prefixCls,
      children = _ref.children,
      extra = _ref.extra;

  if (children || extra) {
    return /*#__PURE__*/React.createElement("div", {
      className: prefixCls + "-header"
    }, /*#__PURE__*/React.createElement("div", {
      className: prefixCls + "-header"
    }, children), extra ? /*#__PURE__*/React.createElement("div", {
      className: prefixCls + "-header-extra"
    }, extra) : null);
  }

  return null;
};

var CardBody = function CardBody(_ref2) {
  var prefixCls = _ref2.prefixCls,
      children = _ref2.children;

  if (children) {
    return /*#__PURE__*/React.createElement("div", {
      className: prefixCls + "-body"
    }, children);
  }

  return null;
};

var CardFooter = function CardFooter(_ref3) {
  var prefixCls = _ref3.prefixCls,
      children = _ref3.children;

  if (children) {
    return /*#__PURE__*/React.createElement("div", {
      className: prefixCls + "-footer"
    }, children);
  }

  return null;
};
/**
 * @visibleName Card
 */


export var CardInternal = /*#__PURE__*/forwardRef(function (_ref4, ref) {
  var _classNames, _extends2;

  var prefixCls = _ref4.prefixCls,
      children = _ref4.children,
      className = _ref4.className,
      header = _ref4.header,
      headerExtra = _ref4.headerExtra,
      footer = _ref4.footer,
      bordered = _ref4.bordered,
      headerLine = _ref4.headerLine,
      footerLine = _ref4.footerLine,
      size = _ref4.size,
      styleProp = _ref4.style,
      borderRadius = _ref4.borderRadius,
      shadow = _ref4.shadow,
      lightPrefix = _ref4.lightPrefix,
      restProps = _objectWithoutPropertiesLoose(_ref4, ["prefixCls", "children", "className", "header", "headerExtra", "footer", "bordered", "headerLine", "footerLine", "size", "style", "borderRadius", "shadow", "lightPrefix"]);

  var rootClass = classNames(prefixCls, className, (_classNames = {}, _classNames[prefixCls + "-bordered"] = bordered, _classNames[prefixCls + "-shadow-" + shadow] = shadow, _classNames[prefixCls + "-header-line"] = headerLine, _classNames[prefixCls + "-footer-line"] = footerLine, _classNames[prefixCls + "-" + size] = size, _classNames[prefixCls + "-border-radius-" + borderRadius] = typeof borderRadius === 'string', _classNames));
  var style = typeof borderRadius === 'number' ? _extends((_extends2 = {}, _extends2["--" + (prefixCls + "-border-radius")] = borderRadius + "px", _extends2), styleProp) : styleProp;
  return /*#__PURE__*/React.createElement("div", _extends({
    className: rootClass
  }, restProps, {
    style: style,
    ref: ref
  }), /*#__PURE__*/React.createElement(CardHeader, {
    prefixCls: prefixCls,
    extra: headerExtra
  }, header), /*#__PURE__*/React.createElement(CardBody, {
    prefixCls: prefixCls
  }, children), /*#__PURE__*/React.createElement(CardFooter, {
    prefixCls: prefixCls
  }, footer));
});
CardInternal.defaultProps = {
  prefixCls: 'one-card',
  size: 'medium',
  bordered: true,
  headerLine: true,
  footerLine: true
};
CardInternal.displayName = 'Card';
var Card = withConfigConsumer('card')(CardInternal);
export default Card;
export * from './interface';