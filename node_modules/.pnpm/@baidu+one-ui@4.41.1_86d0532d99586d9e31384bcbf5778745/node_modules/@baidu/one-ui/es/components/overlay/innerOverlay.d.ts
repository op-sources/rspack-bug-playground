/**
 * @file inner overlay
 * @author huangshiming
 * @date 2020-05-04
 */
import { ReactNode, PureComponent } from 'react';
interface InnerOverlayProps {
    trigger?: any;
    children?: any;
    defaultVisible?: boolean;
    visible?: boolean;
    transitionName?: string;
    animation?: any;
    onVisibleChange?(visible: boolean): any;
    afterVisibleChange?(visible: boolean): any;
    overlay?: ReactNode;
    overlayStyle?: object;
    overlayClassName?: string;
    prefixCls?: string;
    mouseEnterDelay?: number;
    mouseLeaveDelay?: number;
    getPopUpContainer?(): HTMLElement;
    destroyPopUpOnHide?: boolean;
    align?: object;
    id?: string;
    dropdownMatchSelectWidth?: boolean;
    popupPlacement?: 'bottomLeft' | 'bottomRight' | 'topLeft' | 'topRight';
}
interface OverlayState {
    dropdownWidth: number;
}
declare class InnerOverlay extends PureComponent<InnerOverlayProps, OverlayState> {
    static defaultProps: {
        prefixCls: string;
        mouseEnterDelay: number;
        destroyPopUpOnHide: boolean;
        mouseLeaveDelay: number;
        align: {
            ignoreShake: boolean;
        };
        trigger: string[];
        dropdownMatchSelectWidth: boolean;
        popupPlacement: string;
    };
    constructor(props: any);
    trigger: any;
    root: any;
    componentDidMount(): void;
    componentDidUpdate(): void;
    setDropdownWidth: () => void;
    getPopupElement: () => JSX.Element;
    getPopupDomNode(): any;
    saveTrigger: (node: any) => void;
    saveRoot: (node: any) => void;
    render(): JSX.Element;
}
export default InnerOverlay;
