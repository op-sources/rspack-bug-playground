/**
 * @file transfer candidate pane
 * @author huangshiming
 * @date 2020-05-16
 */
import { PureComponent, ReactNode } from 'react';
import { TreeProps } from '../../tree';
import { TransferProps } from '../interface';
export interface CandidatePaneProps extends Pick<TreeProps, 'onExpand' | 'onSelect' | 'onCheck'> {
    candidateList?: string[];
    prefixCls?: string;
    allDataMap?: object;
    loading?: boolean;
    loadingText?: ReactNode;
    maxSelectedNum?: any;
    selectedList?: any;
    hasSearch?: any;
    searchValue?: any;
    candidateItemProps?: any;
    CandidateItem?: any;
    isShowLevel?: any;
    parentRelationMap?: any;
    virtualListHeight?: any;
    expandedCandidateKeys?: any;
    size?: any;
    candidateTreeRef?: any;
    onCandidateScroll?: any;
    loadData?: TransferProps['loadData'];
    candidateEmpty?: ReactNode;
}
declare class CandidatePane extends PureComponent<CandidatePaneProps> {
    getLevelText: (text: any, id: any, parentRelationMap: any, allDataMap: any) => any;
    renderNode(key: any): JSX.Element;
    candidateNodeTrees(candidateList: any): any;
    loadData: (node: any, key: string, type: 'expand' | 'check' | 'select') => Promise<void>;
    render(): JSX.Element;
}
export default CandidatePane;
