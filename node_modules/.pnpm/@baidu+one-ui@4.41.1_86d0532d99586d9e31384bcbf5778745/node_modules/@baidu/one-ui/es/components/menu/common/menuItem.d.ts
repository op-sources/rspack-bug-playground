import React, { PureComponent } from 'react';
import { MenuItemProps } from '../interface';
interface InnerMenuItemProps extends MenuItemProps {
    onMouseEnter: any;
    multiple: any;
    onClick: any;
    onSelect: any;
    selected: any;
    onMouseLeave: any;
    title: string;
    href: string;
    target: string;
    mode: 'inline' | 'vertical';
    role: string;
    itemIcon: any;
    store: any;
    inlineIndent: any;
    renderMenuItem: any;
    parentMenu: any;
    eventKey: any;
    onItemHover: any;
    subMenuOpenDelay: any;
    subMenuCloseDelay: any;
    forceSubMenuRender: any;
    onOpenChange: any;
    onDeselect: any;
    builtinPlacements: any;
    openKeys: any;
    selectedKeys: any;
    triggerSubMenuAction: any;
    subMenuKey: any;
    manualRef: any;
    active: any;
    prefixCls: any;
    onTitleMouseEnter: any;
    onTitleMouseLeave: any;
    onTitleClick: any;
}
export declare class MenuItem extends PureComponent<InnerMenuItemProps> {
    static isMenuItem: boolean;
    static defaultProps: {
        onSelect: () => void;
        onMouseEnter: () => void;
        onMouseLeave: () => void;
        manualRef: () => void;
    };
    static contextType: React.Context<{
        inlineCollapsed?: boolean;
        inlineIndent?: number;
        inlinePaddingLeft?: number;
    }>;
    node: any;
    componentDidUpdate(prevProps: any): void;
    onKeyDown: (e: any) => boolean;
    onMouseLeave: (e: any) => void;
    onMouseEnter: (e: any) => void;
    onClick: (e: any) => void;
    saveNode: (node: any) => void;
    render(): JSX.Element;
}
declare const connected: any;
export default connected;
