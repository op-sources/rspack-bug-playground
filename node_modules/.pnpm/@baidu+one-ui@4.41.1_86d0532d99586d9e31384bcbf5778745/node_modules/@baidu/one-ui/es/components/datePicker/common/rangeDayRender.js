import _extends from "@babel/runtime/helpers/extends";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import React, { PureComponent } from 'react';
import { connect } from 'mini-store';
import WeekRender from './weekRender';
import Calendar from './calendar';

var DayItemRender = /*#__PURE__*/function (_PureComponent) {
  _inheritsLoose(DayItemRender, _PureComponent);

  function DayItemRender() {
    return _PureComponent.apply(this, arguments) || this;
  }

  var _proto = DayItemRender.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        panelType = _this$props.panelType,
        prefixCls = _this$props.prefixCls,
        type = _this$props.type,
        endDatePanelType = _this$props.endDatePanelType,
        endDateShowYear = _this$props.endDateShowYear,
        endDateShowMonth = _this$props.endDateShowMonth,
        currentDate = _this$props.currentDate;
    var currentPanelType = type === 'nextMultiple' ? endDatePanelType : panelType;

    if (currentPanelType === 'month') {
      return null;
    }

    var bodyContainerClassName = prefixCls + "-day-container";
    var otherProps = {
      beginDate: currentDate[0] || '',
      endDate: currentDate[1] || ''
    };

    if (type === 'nextMultiple') {
      otherProps = _extends({}, otherProps, {
        showYear: endDateShowYear,
        showMonth: endDateShowMonth
      });
    }

    return /*#__PURE__*/React.createElement("div", {
      className: bodyContainerClassName
    }, /*#__PURE__*/React.createElement(WeekRender, this.props), /*#__PURE__*/React.createElement(Calendar, _extends({}, this.props, otherProps, {
      multiple: true
    })));
  };

  return DayItemRender;
}(PureComponent);

export default connect(function (state) {
  return {
    showYear: state.showYear,
    showMonth: state.showMonth,
    panelType: state.panelType,
    validateMinDate: state.validateMinDate,
    validateMaxDate: state.validateMaxDate,
    endDateShowYear: state.endDateShowYear,
    endDateShowMonth: state.endDateShowMonth,
    endDatePanelType: state.endDatePanelType
  };
})(DayItemRender);