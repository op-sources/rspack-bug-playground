import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import React, { forwardRef } from 'react';
import classNames from 'classnames';
import { withConfigConsumer } from '../providerConfig/context';
/**
 * @visibleName Stack
 */

export var StackInternal = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var _classNames, _classNames2, _ref2;

  var prefixCls = _ref.prefixCls,
      children = _ref.children,
      className = _ref.className,
      direction = _ref.direction,
      wrap = _ref.wrap,
      inline = _ref.inline,
      align = _ref.align,
      justify = _ref.justify,
      gap = _ref.gap,
      lightPrefix = _ref.lightPrefix,
      distribution = _ref.distribution,
      restProps = _objectWithoutPropertiesLoose(_ref, ["prefixCls", "children", "className", "direction", "wrap", "inline", "align", "justify", "gap", "lightPrefix", "distribution"]);

  var normalizeDistribution = Array.isArray(distribution) ? distribution : [];
  var rootClass = classNames(prefixCls, className, (_classNames = {}, _classNames[prefixCls + "-wrap"] = wrap, _classNames[prefixCls + "-inline"] = inline, _classNames[prefixCls + "-" + direction] = direction, _classNames[prefixCls + "-gap"] = gap, _classNames[prefixCls + "-distribution"] = normalizeDistribution.length, _classNames[prefixCls + "-distribution-even"] = distribution === 'even', _classNames));
  var realAlign = align || (direction === 'row' ? 'center' : 'stretch');
  var innerClass = classNames(prefixCls + "-inner", (_classNames2 = {}, _classNames2[prefixCls + "-inner-gap-" + gap] = typeof gap === 'string', _classNames2[prefixCls + "-inner-align-" + realAlign] = realAlign, _classNames2[prefixCls + "-inner-justify-" + justify] = justify, _classNames2));
  var innerStyle = typeof gap === 'number' && gap > 0 ? (_ref2 = {}, _ref2["--" + (prefixCls + "-gap")] = gap + "px", _ref2) : {};
  normalizeDistribution.forEach(function (num, i) {
    innerStyle["--" + (prefixCls + "-item-flex-" + (i + 1))] = num + " " + num + " 0";
  });
  return /*#__PURE__*/React.createElement("div", _extends({
    className: rootClass
  }, restProps, {
    ref: ref
  }), /*#__PURE__*/React.createElement("div", {
    className: innerClass,
    style: innerStyle
  }, children));
});
StackInternal.defaultProps = {
  prefixCls: 'one-stack',
  direction: 'row',
  wrap: false,
  inline: false
};
StackInternal.displayName = 'Stack';
var Stack = withConfigConsumer('stack')(StackInternal);
export default Stack;
export * from './interface';