import { PureComponent } from 'react';
import { Tree } from '../../data/tree';
import { CascaderOption, CascaderProps } from './interface';
interface CascaderState {
    value?: CascaderProps['value'];
    options?: CascaderOption[];
    optionsClone?: CascaderOption[];
    resultOptions?: CascaderOption[];
    query?: string;
    expanded?: boolean;
    loadData?: boolean;
    tree?: Tree;
}
declare class Cascader extends PureComponent<CascaderProps, CascaderState> {
    static defaultProps: {
        prefixCls: string;
        inputPrefixCls: string;
        placeholder: string;
        popupPlacement: string;
        options: any[];
        disabled: boolean;
        allowClear: boolean;
        notFoundContent: string;
        style: {};
        size: string;
        inputIsControlled: boolean;
        onInputChange: () => void;
        multiple: boolean;
        showCheckAll: boolean;
        displayParent: boolean;
    };
    /**
     * 全部选项的值
     */
    static ALL_VALUE: string;
    constructor(props: any);
    static getDerivedStateFromProps: (props: any, state: any) => CascaderState;
    prefix(key: any): string;
    rcTrigger: any;
    componentDidUpdate(): void;
    render(): JSX.Element;
    toggleExpanded: (expanded: any) => void;
    handleCheckboxChange: (value: any) => void;
    handleOnHover: (option: any, columnIndex?: any, value?: any) => void;
    handleOnSelect: (option: any, columnIndex?: any, value?: any) => void;
    handleOnSearch: (query: any) => void;
    handleOnRemove: (key: any) => void;
    handleOnRemoveAll: () => void;
    private loadData;
}
export default Cascader;
