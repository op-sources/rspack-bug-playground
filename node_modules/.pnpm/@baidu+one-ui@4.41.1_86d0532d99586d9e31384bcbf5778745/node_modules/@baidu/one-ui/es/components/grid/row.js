import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";

var _dec, _class, _class2, _temp;

import React, { PureComponent, Children, cloneElement, isValidElement } from 'react';
import { classnames } from '../../core/commonTools';
import { withConfigConsumer } from '../providerConfig/context';
import Col from './col';
var GridRow = (_dec = withConfigConsumer('row'), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_PureComponent) {
  _inheritsLoose(GridRow, _PureComponent);

  function GridRow() {
    return _PureComponent.apply(this, arguments) || this;
  }

  var _proto = GridRow.prototype;

  _proto.render = function render() {
    var _classnames;

    var _this$props = this.props,
        type = _this$props.type,
        justify = _this$props.justify,
        align = _this$props.align,
        className = _this$props.className,
        gutter = _this$props.gutter,
        style = _this$props.style,
        children = _this$props.children,
        _this$props$prefixCls = _this$props.prefixCls,
        prefixCls = _this$props$prefixCls === void 0 ? 'one-row' : _this$props$prefixCls,
        lightPrefix = _this$props.lightPrefix,
        others = _objectWithoutPropertiesLoose(_this$props, ["type", "justify", "align", "className", "gutter", "style", "children", "prefixCls", "lightPrefix"]);

    var classes = classnames((_classnames = {}, _classnames[prefixCls] = !type, _classnames[prefixCls + "-" + type] = type, _classnames[prefixCls + "-" + type + "-" + justify] = type && justify, _classnames[prefixCls + "-" + type + "-" + align] = type && align, _classnames), className);
    var rowStyle = gutter > 0 ? _extends({
      marginLeft: gutter / -2,
      marginRight: gutter / -2
    }, style) : style;
    var cols = Children.map(children, function (col) {
      if ( /*#__PURE__*/isValidElement(col) && col.type === Col && gutter > 0) {
        return /*#__PURE__*/cloneElement(col, {
          style: _extends({
            paddingLeft: gutter / 2,
            paddingRight: gutter / 2
          }, col.props.style)
        });
      }

      return col;
    });
    return /*#__PURE__*/React.createElement("div", _extends({}, others, {
      className: classes,
      style: rowStyle
    }), cols);
  };

  return GridRow;
}(PureComponent), _class2.defaultProps = {
  gutter: 0
}, _temp)) || _class);
export default GridRow;