import React, { PureComponent } from 'react';
import { TreeNodeProps } from '../interface';
declare class VirtualTreeNode extends PureComponent<TreeNodeProps> {
    static contextType: React.Context<{}>;
    static defaultProps: {
        title: string;
        size: string;
        isFileNode: boolean;
        disabledAllWhenNodeDisabled: boolean;
    };
    selectHandle: any;
    componentDidMount(): void;
    componentDidUpdate(): void;
    onSelectorClick: (e: any) => void;
    onSelectorDoubleClick: (e: any) => void;
    onSelect: (e: any) => void;
    onCheck: (e: any) => void;
    onMouseEnter: (e: any) => void;
    onMouseLeave: (e: any) => void;
    onContextMenu: (e: any) => void;
    onExpand: (e: any) => void;
    setSelectHandle: (node: any) => void;
    getNodeChildren: () => any;
    getNodeState: (isLeaf: any) => "close" | "open";
    isLeaf: (hasChildren: any) => boolean;
    isDisabled: () => boolean;
    isSelectable(): any;
    syncLoadData: (props: any) => void;
    renderIndent(): JSX.Element;
    renderSwitcher(isLeaf: any): JSX.Element;
    renderCheckbox(): JSX.Element;
    renderSelector(filterTitle: any, isLeafNode: any): JSX.Element;
    render(): JSX.Element;
}
export default VirtualTreeNode;
