import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { IconTimes } from 'dls-icons-react';
/**
 * @deprecated
 */

var Horizon = /*#__PURE__*/function (_PureComponent) {
  _inheritsLoose(Horizon, _PureComponent);

  function Horizon(props) {
    var _this;

    _this = _PureComponent.call(this, props) || this;

    _this.onClose = function () {
      _this.setState({
        visible: false
      });

      _this.props.onClose();
    };

    _this.state = {
      visible: true
    };
    return _this;
  }

  var _proto = Horizon.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        prefixCls = _this$props.prefixCls,
        className = _this$props.className,
        closable = _this$props.closable,
        children = _this$props.children;
    var visible = this.state.visible;

    if ('visible' in this.props) {
      visible = this.props.visible;
    }

    if (!visible) {
      return null;
    }

    return /*#__PURE__*/React.createElement("div", {
      className: prefixCls + " " + className
    }, closable ? /*#__PURE__*/React.createElement("span", {
      className: prefixCls + "-close",
      onClick: this.onClose
    }, /*#__PURE__*/React.createElement(IconTimes, {
      className: prefixCls + "-close-icon"
    })) : null, /*#__PURE__*/React.createElement("div", {
      className: prefixCls + "-body"
    }, children));
  };

  return Horizon;
}(PureComponent);

Horizon.propTypes = {
  onClose: PropTypes.func,
  closable: PropTypes.bool,
  prefixCls: PropTypes.string,
  className: PropTypes.string,
  children: PropTypes.node,
  visible: PropTypes.bool
};
Horizon.defaultProps = {
  closable: true,
  prefixCls: 'one-embedded-horizon',
  className: ''
};
export { Horizon as default };