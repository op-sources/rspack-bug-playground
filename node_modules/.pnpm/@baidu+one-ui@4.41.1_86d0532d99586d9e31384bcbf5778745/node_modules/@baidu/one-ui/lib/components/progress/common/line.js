"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireWildcard(require("react"));

var _dlsIconsReact = require("dls-icons-react");

var _classnames = _interopRequireDefault(require("classnames"));

;
;

var Line = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(Line, _PureComponent);

  function Line() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;
    _this.state = {
      prevPercent: 0
    };

    _this.renderOperation = function () {
      var _this$props = _this.props,
          prefixCls = _this$props.prefixCls,
          showRetry = _this$props.showRetry,
          showCancel = _this$props.showCancel,
          onRetry = _this$props.onRetry,
          onCancel = _this$props.onCancel;

      if (!showRetry && !showCancel) {
        return null;
      }

      var cancelProps = {
        type: 'close',
        title: '取消',
        onClick: onCancel
      };
      var retryProps = {
        type: 'refresh',
        title: '刷新',
        onClick: onRetry
      };
      return /*#__PURE__*/_react["default"].createElement("span", {
        className: prefixCls + "-operation"
      }, showRetry ? /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconAnticlockwise, retryProps) : null, showCancel ? /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconTimes, cancelProps) : null);
    };

    return _this;
  }

  Line.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    var percent = props.percent;
    return {
      prevPercent: percent,
      increasing: percent >= state.prevPercent
    };
  };

  var _proto = Line.prototype;

  _proto.render = function render() {
    var _classNames;

    var _this$props2 = this.props,
        prefixCls = _this$props2.prefixCls,
        percent = _this$props2.percent,
        strokeWidth = _this$props2.strokeWidth,
        strokeColor = _this$props2.strokeColor,
        trailColor = _this$props2.trailColor,
        strokeLinecap = _this$props2.strokeLinecap,
        width = _this$props2.width,
        children = _this$props2.children;
    var borderRadius = strokeLinecap === 'square' ? 0 : null;
    var outerStyle = {
      width: width
    };
    var percentStyle = {
      width: percent + "%",
      height: strokeWidth,
      borderRadius: borderRadius,
      background: strokeColor
    };
    var trailStyle = {
      borderRadius: borderRadius,
      height: strokeWidth,
      backgroundColor: trailColor
    };
    return /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement("div", {
      className: prefixCls + "-outer",
      style: outerStyle
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: prefixCls + "-inner",
      style: trailStyle
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: (0, _classnames["default"])(prefixCls + "-bg", (_classNames = {}, _classNames[prefixCls + "-bg-transition"] = this.state.increasing, _classNames)),
      style: percentStyle
    }))), children, this.renderOperation());
  };

  return Line;
}(_react.PureComponent);

exports["default"] = Line;
Line.defaultProps = {
  prefixCls: 'one-progress',
  percent: 0,
  strokeLinecap: 'round',
  strokeColor: '',
  trailColor: '',
  showRetry: false,
  showCancel: false
};
module.exports = exports.default;