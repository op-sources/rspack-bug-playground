"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports["default"] = void 0;

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireWildcard(require("react"));

var _commonTools = require("../../core/commonTools");

var _radio = _interopRequireDefault(require("./radio"));

var _button = _interopRequireDefault(require("./button"));

var _radioAndCheckboxTools = require("../../core/radioAndCheckboxTools");

var _context = _interopRequireDefault(require("./context"));

var _context2 = require("../providerConfig/context");

var _dec, _class, _class2, _temp;

;
var RadioGroup = (_dec = (0, _context2.withConfigConsumer)('radio-group'), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(RadioGroup, _PureComponent);

  function RadioGroup(props) {
    var _this;

    _this = _PureComponent.call(this, props) || this;

    _this.onRadioChange = function (ev) {
      var lastValue = _this.state.value;
      var newValue = ev.target.value;

      if (newValue !== lastValue) {
        var onChange = _this.props.onChange;

        if (!('value' in _this.props)) {
          _this.setState({
            value: newValue
          });
        }

        if (onChange) {
          onChange(ev);
        }
      }
    };

    _this.state = {
      value: (0, _radioAndCheckboxTools.getRealValue)(props, true)
    };
    return _this;
  }

  var _proto = RadioGroup.prototype;

  _proto.getContext = function getContext() {
    var _this$props = this.props,
        disabled = _this$props.disabled,
        name = _this$props.name,
        type = _this$props.type;
    return {
      onChange: this.onRadioChange,
      value: this.state.value,
      disabled: disabled,
      name: name,
      type: type
    };
  };

  _proto.render = function render() {
    var _classnames,
        _this2 = this;

    var _this$props2 = this.props,
        prefixCls = _this$props2.prefixCls,
        className = _this$props2.className,
        options = _this$props2.options,
        disabled = _this$props2.disabled,
        style = _this$props2.style,
        onMouseEnter = _this$props2.onMouseEnter,
        onMouseLeave = _this$props2.onMouseLeave,
        direction = _this$props2.direction,
        size = _this$props2.size,
        type = _this$props2.type,
        name = _this$props2.name;
    var children = this.props.children;
    var value = this.state.value;
    var classString = (0, _commonTools.classnames)(prefixCls, (_classnames = {}, _classnames[prefixCls + "-" + size] = size, _classnames[prefixCls + "-" + type] = type, _classnames[prefixCls + "-" + direction] = direction, _classnames), className);
    var Item = _radio["default"];

    if (type === 'strong' || type === 'simple') {
      Item = _button["default"];
    } // 如果存在 options, 优先使用


    if (options && options.length > 0) {
      children = options.map(function (option, index) {
        if (typeof option === 'string' || typeof option === 'number') {
          // 此处类型自动推导为 string
          option = {
            label: option,
            value: option
          };
        }

        var _option = option,
            optionValue = _option.value,
            optionDisabled = _option.disabled,
            label = _option.label; // 此处类型自动推导为 { label: string, value: string }

        return /*#__PURE__*/_react["default"].createElement(Item, {
          key: index,
          name: name,
          disabled: optionDisabled || disabled,
          value: optionValue,
          onChange: _this2.onRadioChange,
          checked: value === optionValue,
          size: size
        }, label);
      });
    }

    return /*#__PURE__*/_react["default"].createElement(_context["default"].Provider, {
      value: this.getContext()
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: classString,
      style: style,
      onMouseEnter: onMouseEnter,
      onMouseLeave: onMouseLeave
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: prefixCls + "-items"
    }, children)));
  };

  return RadioGroup;
}(_react.PureComponent), _class2.defaultProps = {
  disabled: false,
  prefixCls: 'one-radio-group',
  className: '',
  direction: 'row',
  size: 'medium'
}, _class2.getDerivedStateFromProps = function (nextProps, prevState) {
  var value = nextProps.value,
      children = nextProps.children;

  if ('value' in nextProps) {
    if (prevState.value !== value) {
      return {
        value: value
      };
    }
  } else {
    var checkedValue = (0, _radioAndCheckboxTools.getCheckedValue)(children)[0];

    if (checkedValue !== undefined && prevState.value !== checkedValue) {
      return {
        value: checkedValue
      };
    }
  }

  return null;
}, _temp)) || _class);
var _default = RadioGroup;
exports["default"] = _default;
module.exports = exports.default;