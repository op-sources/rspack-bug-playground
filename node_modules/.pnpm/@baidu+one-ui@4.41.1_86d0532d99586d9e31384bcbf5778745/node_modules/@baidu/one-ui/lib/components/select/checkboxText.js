"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireWildcard(require("react"));

var _searchText = _interopRequireDefault(require("./searchText"));

var _checkbox = _interopRequireDefault(require("../checkbox"));

var _tooltip = _interopRequireDefault(require("../tooltip"));

;
;

var CheckboxText = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(CheckboxText, _PureComponent);

  function CheckboxText(props) {
    var _this;

    _this = _PureComponent.call(this, props) || this;
    _this.state = {
      searchValue: props.searchValue,
      source: props.source,
      checked: false
    };
    return _this;
  }

  var _proto = CheckboxText.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        text = _this$props.text,
        value = _this$props.value,
        label = _this$props.label,
        disabled = _this$props.disabled,
        disabledReason = _this$props.disabledReason,
        disablePlacement = _this$props.disablePlacement;
    var searchLabel = text || label;
    var _this$state = this.state,
        searchValue = _this$state.searchValue,
        source = _this$state.source;
    var searchTextProps = {
      text: searchLabel,
      showSearch: true,
      searchValue: searchValue
    };
    var checked = false;

    if (source.indexOf(value) > -1) {
      checked = true;
    }

    if ('checked' in this.props) {
      checked = this.state.checked;
    }

    var checkboxTextDom = /*#__PURE__*/_react["default"].createElement("span", null, /*#__PURE__*/_react["default"].createElement(_checkbox["default"], {
      checked: checked,
      disabled: disabled
    }), /*#__PURE__*/_react["default"].createElement(_searchText["default"], (0, _extends2["default"])({}, searchTextProps, {
      disabled: disabled
    })));

    return disabled && disabledReason ? /*#__PURE__*/_react["default"].createElement(_tooltip["default"], {
      title: disabledReason,
      placement: disablePlacement
    }, checkboxTextDom) : checkboxTextDom;
  };

  return CheckboxText;
}(_react.PureComponent);

CheckboxText.isCheckboxText = true;
CheckboxText.defaultProps = {
  searchValue: '',
  source: [],
  disablePlacement: 'right',
  disabled: false
};

CheckboxText.getDerivedStateFromProps = function (nextProps, prevState) {
  var searchValue = prevState.searchValue;
  var newState = {};

  if ('searchValue' in nextProps && searchValue !== nextProps.searchValue) {
    newState.searchValue = nextProps.searchValue;
  }

  if ('source' in nextProps) {
    newState.source = nextProps.source;
  }

  if ('checked' in nextProps) {
    newState.checked = nextProps.checked;
  }

  return newState;
};

var _default = CheckboxText;
exports["default"] = _default;
module.exports = exports.default;