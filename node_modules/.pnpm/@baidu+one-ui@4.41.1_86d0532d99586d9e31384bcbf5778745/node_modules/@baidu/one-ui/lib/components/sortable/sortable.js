"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _noop2 = _interopRequireDefault(require("lodash/noop"));

var _react = _interopRequireWildcard(require("react"));

var _commonTools = require("../../core/commonTools");

var _reactSortablejs = require("react-sortablejs");

var _cloneElement = _interopRequireDefault(require("clone-element"));

var _context = require("../providerConfig/context");

var _dec, _class, _class2, _temp;

var isSafari = (0, _commonTools.isSafari)();
var Sortable = (_dec = (0, _context.withConfigConsumer)('sortable'), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(Sortable, _PureComponent);

  function Sortable() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;
    _this.state = {
      list: []
    };
    _this.offsetX = 0;
    _this.offsetY = 0;

    _this.handleOnChange = function (event) {
      var _this$props = _this.props,
          onChange = _this$props.onChange,
          before = _this$props.before;

      if (!onChange) {
        return;
      }

      var oldIndex = event.oldIndex,
          newIndex = event.newIndex;
      var headOffset = before ? 0 : 1;

      if (!before) {
        oldIndex += headOffset;
        newIndex += headOffset;
      }

      var list = _this.state.list.slice();

      if (oldIndex === newIndex || newIndex === list.length - 1 // tail
      ) {
        return;
      }

      var oldOption = list[oldIndex];
      list.splice(oldIndex, 1);
      list.splice(newIndex, 0, oldOption);
      onChange(list.map(function (item) {
        return item.option;
      }).slice(1, -1), oldIndex - headOffset, newIndex - headOffset);
    };

    _this.setDragImage = function (dataTransfer, ele) {
      if (isSafari && (0, _commonTools.isInsideTransformedContainer)(ele)) {
        var eleImage = (0, _cloneElement["default"])(ele);
        eleImage.style.position = 'fixed';
        eleImage.style.left = '0px';
        eleImage.style.top = '0px';
        document.body.append(eleImage);
        requestAnimationFrame(function () {
          return document.body.removeChild(eleImage);
        });

        if (dataTransfer && dataTransfer.setDragImage) {
          dataTransfer.setDragImage(eleImage, _this.offsetX, _this.offsetY);
        }
      }
    };

    _this.setOffset = function (_ref) {
      var _ref$originalEvent = _ref.originalEvent,
          offsetX = _ref$originalEvent.offsetX,
          offsetY = _ref$originalEvent.offsetY;
      _this.offsetX = offsetX;
      _this.offsetY = offsetY;
    };

    _this.handleOnStart = function () {
      _this.toggleDraggingClassName(true);

      var onStart = _this.props.onStart;

      if (onStart) {
        onStart();
      }
    };

    _this.handleOnEnd = function (event) {
      _this.toggleDraggingClassName(false);

      _this.handleOnChange(event);

      var onEnd = _this.props.onEnd;

      if (onEnd) {
        onEnd();
      }
    };

    return _this;
  }

  Sortable.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
    var list = props.options.map(function (option) {
      return {
        option: option
      };
    }); // 数据适配`before`与`after`节点

    list.unshift({
      filtered: true
    });
    list.push({
      filtered: true
    });
    return {
      list: list
    };
  };

  var _proto = Sortable.prototype;

  _proto.componentWillUnmount = function componentWillUnmount() {
    // 拖拽过程中组件可能卸载，补充移除样式
    this.toggleDraggingClassName(false);
  };

  _proto.toggleDraggingClassName = function toggleDraggingClassName(add) {
    var classList = document.documentElement.classList;
    var className = this.props.prefixCls + "-dragging";

    if (add) {
      classList.add(className);
    } else {
      classList.remove(className);
    }
  };

  _proto.render = function render() {
    var _classnames;

    var _this$props2 = this.props,
        prefixCls = _this$props2.prefixCls,
        className = _this$props2.className,
        options = _this$props2.options,
        renderOption = _this$props2.renderOption,
        useHandle = _this$props2.useHandle,
        onChange = _this$props2.onChange,
        before = _this$props2.before,
        after = _this$props2.after,
        lightPrefix = _this$props2.lightPrefix,
        restProps = (0, _objectWithoutPropertiesLoose2["default"])(_this$props2, ["prefixCls", "className", "options", "renderOption", "useHandle", "onChange", "before", "after", "lightPrefix"]);
    return /*#__PURE__*/_react["default"].createElement(_reactSortablejs.ReactSortable, (0, _extends2["default"])({}, restProps, {
      key: lightPrefix,
      className: (0, _commonTools.classnames)(prefixCls, className, (_classnames = {}, _classnames[prefixCls + "-use-handle"] = useHandle, _classnames)),
      handle: useHandle ? "." + prefixCls + "-handle" : null,
      list: this.state.list,
      setData: this.setDragImage,
      onChoose: this.setOffset,
      onStart: this.handleOnStart,
      onEnd: this.handleOnEnd,
      ghostClass: (0, _commonTools.classnames)(prefixCls + "-ghost"),
      dragClass: (0, _commonTools.classnames)(prefixCls + "-drag"),
      chosenClass: (0, _commonTools.classnames)(prefixCls + "-chosen"),
      draggable: "." + prefixCls + "-draggable",
      setList: _noop2["default"]
    }), /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, before), options.map(function (option, index) {
      var optionElement = renderOption(option, index);
      return /*#__PURE__*/_react["default"].cloneElement(optionElement, {
        className: (0, _commonTools.classnames)(prefixCls + "-draggable", optionElement.props.className)
      });
    }), /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, after));
  };

  return Sortable;
}(_react.PureComponent), _class2.defaultProps = {
  prefixCls: 'one-sortable',
  options: [],
  renderOption: function renderOption(option) {},
  useHandle: false,
  // 未放开属性
  animation: 200,
  easing: 'cubic-bezier(.25, .1, .25, 1)'
}, _class2.Handle = void 0, _temp)) || _class);
var _default = Sortable;
exports["default"] = _default;
module.exports = exports.default;