"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireWildcard(require("react"));

var _miniStore = require("mini-store");

var _commonTools = require("../../../core/commonTools");

var _headerCell = _interopRequireDefault(require("./headerCell"));

var TableHeaderRow = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(TableHeaderRow, _PureComponent);

  function TableHeaderRow(props) {
    var _this;

    _this = _PureComponent.call(this, props) || this;
    _this.state = {
      position: {},
      width: 0
    };
    return _this;
  }

  var _proto = TableHeaderRow.prototype;

  _proto.getLeftChildColumn = function getLeftChildColumn(columns) {
    if (columns && columns.length) {
      var column = columns[0];
      var children = column.children;

      if (children && children.length) {
        return this.getLeftChildColumn(children);
      }

      return column.key;
    }
  };

  _proto.getRightChildColumn = function getRightChildColumn(columns) {
    if (columns && columns.length) {
      var column = columns[columns.length - 1];
      var children = column.children;

      if (children && children.length) {
        return this.getRightChildColumn(children);
      }

      return column.key;
    }
  };

  _proto.render = function render() {
    var _this2 = this;

    var _this$props = this.props,
        row = _this$props.row,
        index = _this$props.index,
        onHeaderRow = _this$props.onHeaderRow,
        prefixCls = _this$props.prefixCls,
        _this$props$allColumn = _this$props.allColumnsWidth,
        allColumnsWidth = _this$props$allColumn === void 0 ? [] : _this$props$allColumn,
        onMoving = _this$props.onMoving,
        dynamicWidth = _this$props.dynamicWidth,
        onDragEnd = _this$props.onDragEnd,
        onDragStart = _this$props.onDragStart,
        onHeaderCellMouseEnter = _this$props.onHeaderCellMouseEnter,
        onHeaderCellMouseLeave = _this$props.onHeaderCellMouseLeave,
        last = _this$props.last,
        rows = _this$props.rows;
    var rowProps = onHeaderRow(row.map(function (cell) {
      return cell.column;
    }), index);
    var existStickyRight = false;
    return /*#__PURE__*/_react["default"].createElement("tr", (0, _extends2["default"])({}, rowProps, {
      className: (0, _commonTools.classnames)(prefixCls + "-head-row", last ? prefixCls + "-head-row-last" : null, rowProps ? rowProps.className : null)
    }), row.map(function (cell, i) {
      var _classnames;

      var column = cell.column,
          className = cell.className,
          render = cell.render;
      var stickyLeft = column.fixed === 'left';
      var stickyRight = column.fixed === 'right';

      var _ref = row[i + 1] || {},
          nextColumn = _ref.column;

      var nextStickyLeft = nextColumn && nextColumn.fixed === 'left';
      var columnKey = (stickyLeft ? _this2.getLeftChildColumn(column.children) : _this2.getRightChildColumn(column.children)) || column.key;
      var curCol = allColumnsWidth.filter(function (col) {
        return col.key === columnKey;
      })[0] || {};
      var colWidth = 0;
      allColumnsWidth.forEach(function (col) {
        colWidth += col.width;
      });
      var classNames = (0, _commonTools.classnames)(prefixCls + "-head-cell", className, (_classnames = {}, _classnames[prefixCls + "-column-has-sort"] = column.sorter || column.customSortNode, _classnames[prefixCls + "-head-first-cell"] = i === 0 && (index === 0 || index !== 0 && !rows[index - 1][0].column.rowSpan), _classnames[prefixCls + "-head-cell-sticky-left"] = stickyLeft, _classnames[prefixCls + "-head-cell-sticky-right"] = stickyRight, _classnames[prefixCls + "-head-cell-sticky-left-last"] = stickyLeft && !nextStickyLeft, _classnames[prefixCls + "-head-cell-sticky-right-first"] = stickyRight && !existStickyRight, _classnames));

      if (stickyRight) {
        existStickyRight = true;
      }

      return /*#__PURE__*/_react["default"].createElement(_headerCell["default"], (0, _extends2["default"])({
        className: classNames,
        render: render,
        key: column.key || column.dataIndex || i,
        prefixCls: prefixCls,
        column: column,
        index: index
      }, curCol, {
        left: curCol.left || null,
        onMoving: onMoving,
        dynamicWidth: dynamicWidth || colWidth,
        onDragEnd: onDragEnd,
        onDragStart: onDragStart,
        onHeaderCellMouseEnter: onHeaderCellMouseEnter,
        onHeaderCellMouseLeave: onHeaderCellMouseLeave
      }));
    }));
  };

  return TableHeaderRow;
}(_react.PureComponent);

var _default = (0, _miniStore.connect)(function (state) {
  return {
    dynamicWidth: state.dynamicWidth,
    allColumnsWidth: state.allColumnsWidth
  };
})(TableHeaderRow);

exports["default"] = _default;
module.exports = exports.default;