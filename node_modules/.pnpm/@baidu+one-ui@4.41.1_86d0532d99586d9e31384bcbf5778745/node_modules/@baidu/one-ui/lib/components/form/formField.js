"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _isEqual2 = _interopRequireDefault(require("lodash/isEqual"));

var _isNil2 = _interopRequireDefault(require("lodash/isNil"));

var _isEmpty2 = _interopRequireDefault(require("lodash/isEmpty"));

var _pickBy2 = _interopRequireDefault(require("lodash/pickBy"));

var _flattenDeep2 = _interopRequireDefault(require("lodash/flattenDeep"));

var _react = _interopRequireWildcard(require("react"));

var _commonTools = require("../../core/commonTools");

var _message = _interopRequireDefault(require("../message"));

var _dlsIconsReact = require("dls-icons-react");

var _context = require("./context");

var _loading = _interopRequireDefault(require("../loading"));

var _config = require("../config");

var _context2 = require("../providerConfig/context");

var _dec, _class, _class2, _temp;

var FormField = (_dec = (0, _context2.withConfigConsumer)('form'), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(FormField, _PureComponent);

  function FormField() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;
    _this.formContext = void 0;
    _this.fieldNode = void 0;
    _this.state = {
      abstractFields: []
    };

    _this.registerAbstractField = function (name) {
      _this.setState(function (state) {
        var fields = state.abstractFields.slice();
        fields.push(name);
        return {
          abstractFields: fields
        };
      });
    };

    _this.unregisterAbstractField = function (name) {
      _this.setState(function (state) {
        var fields = state.abstractFields.filter(function (o) {
          return o !== name;
        });
        return {
          abstractFields: fields
        };
      });
    };

    return _this;
  }

  var _proto = FormField.prototype;

  _proto.componentDidMount = function componentDidMount() {
    var _this$props = this.props,
        name = _this$props.name,
        _abstract = _this$props["abstract"];

    if (this.context && _abstract && name) {
      this.context.register(name);
    }
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (!(0, _isEqual2["default"])(prevProps.rules, this.props.rules)) {
      var form = this.formContext.form;
      form.setFieldAsDirty(this.props.name);
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    var _this$props2 = this.props,
        name = _this$props2.name,
        _abstract2 = _this$props2["abstract"];

    if (this.context && _abstract2 && name) {
      this.context.unregister(name);
    }
  };

  _proto.className = function className(name) {
    var fieldName = this.props.prefixCls + "-field";

    if (name) {
      return fieldName + '-' + name;
    }

    return fieldName;
  };

  _proto.renderFieldNode = function renderFieldNode() {
    var _this$props3 = this.props,
        name = _this$props3.name,
        rules = _this$props3.rules,
        children = _this$props3.children,
        initialValue = _this$props3.initialValue,
        trigger = _this$props3.trigger,
        validateTrigger = _this$props3.validateTrigger,
        valuePropName = _this$props3.valuePropName,
        validate = _this$props3.validate,
        normalize = _this$props3.normalize,
        getValueFromEvent = _this$props3.getValueFromEvent,
        validateFirst = _this$props3.validateFirst,
        validateStatus = _this$props3.validateStatus,
        hidden = _this$props3.hidden,
        preserve = _this$props3.preserve,
        fillWidth = _this$props3.fillWidth,
        lightPrefix = _this$props3.lightPrefix;
    var form = this.formContext.form;
    var fieldNode = children;

    if (name && form && /*#__PURE__*/_react["default"].isValidElement(children)) {
      var _classnames;

      var normalizeFill = (0, _isNil2["default"])(fillWidth) ? this.formContext.fillWidth : fillWidth;
      fieldNode = /*#__PURE__*/_react["default"].cloneElement(children, {
        className: (0, _commonTools.classnames)(children.props.className, (_classnames = {}, _classnames[(0, _config.COMPONENT_INVALID)(lightPrefix)] = validateStatus === 'error' || !(0, _isEmpty2["default"])(form.getFieldError(name)), _classnames)),
        // @ts-ignore
        width: (0, _isNil2["default"])(children.props.width) ? normalizeFill ? '100%' : undefined : children.props.width
      });
      var options = {
        rules: rules,
        initialValue: initialValue,
        trigger: trigger,
        validateTrigger: validateTrigger,
        valuePropName: valuePropName,
        validate: validate,
        normalize: normalize,
        getValueFromEvent: getValueFromEvent,
        validateFirst: validateFirst,
        hidden: hidden,
        preserve: preserve
      };
      fieldNode = form.getFieldDecorator(name, (0, _pickBy2["default"])(options, function (val) {
        return val !== undefined;
      }))(fieldNode);
    }

    return fieldNode;
  };

  _proto.required = function required() {
    var _this$props4 = this.props,
        required = _this$props4.required,
        rules = _this$props4.rules;
    return required == null ? rules && rules.some(function (o) {
      return o.required;
    }) : required;
  };

  _proto.renderTip = function renderTip() {
    var tip = this.props.tip;

    if (tip) {
      if (typeof tip === 'object' && ! /*#__PURE__*/(0, _react.isValidElement)(tip)) {
        // message属性自定义
        return /*#__PURE__*/_react["default"].createElement(_message["default"], (0, _extends2["default"])({
          className: this.className('tip'),
          icon: /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconQuestionCircle, null),
          type: "aux",
          size: "small",
          display: "popup"
        }, tip));
      }

      return /*#__PURE__*/_react["default"].createElement(_message["default"], {
        className: this.className('tip'),
        icon: /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconQuestionCircle, null),
        type: "aux",
        size: "small",
        display: "popup"
      }, tip);
    }

    return null;
  };

  _proto.renderMain = function renderMain() {
    var _this2 = this;

    var _this$props5 = this.props,
        help = _this$props5.help,
        helpPosition = _this$props5.helpPosition;
    var labelPosition = this.formContext.labelPosition;
    var children = this.renderFieldNode();

    var childrenNode = function childrenNode(helpNode) {
      return /*#__PURE__*/_react["default"].createElement("div", {
        key: "Content",
        className: _this2.className('content')
      }, children, helpNode);
    };

    if (!help) {
      return [childrenNode(null), this.renderMessages()];
    }

    var helpNode = this.renderHelp();

    if (helpPosition === 'top') {
      return [labelPosition !== 'top' ? helpNode : null, childrenNode(null), this.renderMessages()];
    } else if (helpPosition === 'side') {
      return [childrenNode(helpNode), this.renderMessages()];
    }

    return [childrenNode(null), this.renderMessages(helpNode)];
  };

  _proto.renderHelp = function renderHelp() {
    var _this$props6 = this.props,
        help = _this$props6.help,
        helpPosition = _this$props6.helpPosition,
        messageDisplay = _this$props6.messageDisplay;

    if (!help) {
      return null;
    }

    return /*#__PURE__*/_react["default"].createElement(_message["default"], {
      type: "aux",
      size: "small",
      display: messageDisplay,
      key: "Help",
      className: (0, _commonTools.classnames)(this.className('help'), this.className("help-position-" + helpPosition))
    }, help);
  };

  _proto.getMessage = function getMessage(fn, name, type) {
    return (fn(name) || []).map(function (content) {
      return {
        type: type,
        content: content
      };
    });
  };

  _proto.renderMessages = function renderMessages(helpNode) {
    var _this3 = this;

    if (helpNode === void 0) {
      helpNode = null;
    }

    var _this$props7 = this.props,
        messageDisplay = _this$props7.messageDisplay,
        _abstract3 = _this$props7["abstract"],
        name = _this$props7.name,
        validateStatus = _this$props7.validateStatus,
        validateMessage = _this$props7.validateMessage,
        validatingMessage = _this$props7.validatingMessage;

    if (!helpNode && _abstract3) {
      return null;
    }

    var form = this.formContext.form;
    var messages = [];

    if (!_abstract3 && form) {
      if (validateMessage && validateStatus) {
        messages.push({
          type: validateStatus,
          content: validateMessage
        });
      } else {
        var fields = this.state.abstractFields.concat(name ? name : []);
        messages = fields.map(function (name) {
          var items = [];
          var validating = form.isFieldValidating(name);

          if (validating && !form.isFormValidating()) {
            items.push({
              type: 'validating',
              content: validatingMessage || '校验中...'
            });
          }

          items.push.apply(items, _this3.getMessage(form.getFieldError, name, 'error'));
          items.push.apply(items, _this3.getMessage(form.getFieldWarning, name, 'warning'));
          items.push.apply(items, _this3.getMessage(form.getFieldSuccess, name, 'success'));
          return items;
        });
      }
    }

    var flattenMessages = (0, _flattenDeep2["default"])(messages);
    return flattenMessages.length ? /*#__PURE__*/_react["default"].createElement("div", {
      key: "Messages",
      className: this.className('messages')
    }, flattenMessages.map(function (message, index) {
      if (message.type === 'validating') {
        return typeof message.content === 'string' ? /*#__PURE__*/_react["default"].createElement(_loading["default"], {
          key: index,
          size: "small",
          tip: message.content
        }) : message.content;
      }

      return /*#__PURE__*/_react["default"].createElement(_message["default"], {
        size: "small",
        type: message.type,
        key: index,
        display: messageDisplay
      }, message.content);
    }), helpNode) : helpNode ? /*#__PURE__*/_react["default"].createElement("div", {
      key: "Messages",
      className: this.className('message')
    }, helpNode) : null;
  };

  _proto.renderField = function renderField(formContext) {
    var _classnames2;

    if (formContext === void 0) {
      formContext = {};
    }

    var _this$props8 = this.props,
        style = _this$props8.style,
        className = _this$props8.className,
        _abstract4 = _this$props8["abstract"],
        actions = _this$props8.actions,
        fillWidth = _this$props8.fillWidth,
        display = _this$props8.display;
    this.formContext = formContext;
    var normalizeFillAvailable = (0, _isNil2["default"])(fillWidth) ? formContext.fillWidth : fillWidth;
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: (0, _commonTools.classnames)(className, this.className(), (_classnames2 = {}, _classnames2[this.className('fill')] = normalizeFillAvailable, _classnames2[this.className('abstract')] = _abstract4, _classnames2[this.className('actions')] = actions, _classnames2[this.className('standalone')] = display === 'standalone', _classnames2)),
      style: style
    }, this.renderLabel(), /*#__PURE__*/_react["default"].createElement("div", {
      className: this.className('main')
    }, _abstract4 ? this.renderMain() : /*#__PURE__*/_react["default"].createElement(_context.FormFieldContext.Provider, {
      value: {
        register: this.registerAbstractField,
        unregister: this.unregisterAbstractField
      }
    }, this.renderMain())));
  };

  _proto.renderLabel = function renderLabel(helpNode) {
    var _this$props9 = this.props,
        label = _this$props9.label,
        _abstract5 = _this$props9["abstract"],
        htmlFor = _this$props9.htmlFor,
        helpPosition = _this$props9.helpPosition,
        help = _this$props9.help;
    var _this$formContext = this.formContext,
        labelPosition = _this$formContext.labelPosition,
        labelAlign = _this$formContext.labelAlign;

    if (label != null && !_abstract5) {
      var _classnames3;

      var required = this.required();
      return /*#__PURE__*/_react["default"].createElement("div", {
        className: (0, _commonTools.classnames)(this.className('label'), (_classnames3 = {}, _classnames3[this.className('label-left')] = labelAlign === 'left', _classnames3[this.className('label-required')] = required, _classnames3[this.className('label-align-help')] = help && labelPosition === 'side' && helpPosition === 'top', _classnames3))
      }, /*#__PURE__*/_react["default"].createElement("label", {
        title: typeof label === 'string' ? label : '',
        htmlFor: htmlFor
      }, required && /*#__PURE__*/_react["default"].createElement(_dlsIconsReact.IconAsterisk, {
        className: this.className('icon-required')
      }), label), this.renderTip(), labelPosition === 'top' && helpPosition === 'top' ? this.renderHelp() : helpNode);
    }

    return labelPosition === 'top' && helpPosition === 'top' ? this.renderHelp() : null;
  };

  _proto.render = function render() {
    var _this4 = this;

    return /*#__PURE__*/_react["default"].createElement(_context.FormContext.Consumer, null, function (context) {
      return _this4.renderField(context);
    });
  };

  return FormField;
}(_react.PureComponent), _class2.defaultProps = {
  prefixCls: 'one-form',
  helpPosition: 'bottom',
  messageDisplay: 'simple',
  validateFirst: true
}, _class2.contextType = _context.FormFieldContext, _temp)) || _class);
var _default = FormField;
exports["default"] = _default;
module.exports = exports.default;