"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _partial2 = _interopRequireDefault(require("lodash/partial"));

var _react = _interopRequireWildcard(require("react"));

var _commonTools = require("../../../core/commonTools");

var _dropdown = _interopRequireDefault(require("../../dropdown"));

var _menu = _interopRequireDefault(require("../../menu"));

var _mediaIcon = _interopRequireDefault(require("./mediaIcon"));

/**
 * @file 多路径的anchor
 * @author huangshiming@baidu.com
 * @date 2020-10-31
 */
;

var MultipleAnchor = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(MultipleAnchor, _PureComponent);

  function MultipleAnchor() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;
    _this.state = {
      visible: false,
      expand: false
    };

    _this.onPickerClick = function (item) {
      if (item.disabled) {
        return;
      }

      var isDefaultUpload = item.isDefaultUpload;

      if (isDefaultUpload) {
        _this.props.onClick();
      } else if (typeof item.onClick === 'function') {
        item.onClick();
      }
    };

    _this.onVisibleChange = function (visible) {
      _this.setState({
        visible: visible
      });
    };

    _this.handleMenuClick = function (e) {
      var onClick = e.onClick;

      if (onClick) {
        onClick();
      }

      setTimeout(function () {
        _this.setState({
          visible: false
        });
      }, 1000);
    };

    _this.renderItem = function (item) {
      var _classnames;

      var children = item.children,
          icon = item.icon,
          label = item.label,
          key = item.key,
          disabled = item.disabled;
      var _this$props = _this.props,
          prefixCls = _this$props.prefixCls,
          size = _this$props.size;

      var target = /*#__PURE__*/_react["default"].createElement("span", {
        key: key,
        className: (0, _commonTools.classnames)(prefixCls + "-entries-item", (_classnames = {}, _classnames[prefixCls + "-entries-item-disabled"] = disabled, _classnames)),
        onClick: (0, _partial2["default"])(_this.onPickerClick, item)
      }, /*#__PURE__*/_react["default"].createElement("span", {
        className: prefixCls + "-entries-item-icon"
      }, icon), /*#__PURE__*/_react["default"].createElement("span", {
        className: prefixCls + "-entries-item-label"
      }, label));

      return children && children.length ? /*#__PURE__*/_react["default"].createElement(_dropdown["default"], {
        key: key,
        transparent: false,
        overlay: /*#__PURE__*/_react["default"].createElement(_menu["default"], {
          size: size
        }, children.map(function (child, index) {
          return /*#__PURE__*/_react["default"].createElement(_menu["default"].Item, {
            key: String(index),
            onClick: (0, _partial2["default"])(_this.handleMenuClick, child)
          }, child.label);
        })),
        onVisibleChange: _this.onVisibleChange
      }, target) : target;
    };

    return _this;
  }

  var _proto = MultipleAnchor.prototype;

  _proto.render = function render() {
    var _classnames2,
        _this2 = this;

    var _this$props2 = this.props,
        loading = _this$props2.loading,
        prefixCls = _this$props2.prefixCls,
        disabled = _this$props2.disabled,
        realType = _this$props2.realType,
        entries = _this$props2.entries,
        theme = _this$props2.theme;
    var buttonClassName = (0, _commonTools.classnames)(prefixCls + "-anchor-image-button", (_classnames2 = {}, _classnames2[prefixCls + "-anchor-image-button-loading"] = loading, _classnames2[prefixCls + "-anchor-image-button-disabled"] = disabled, _classnames2[prefixCls + "-anchor-image-button-overlay-open"] = this.state.visible, _classnames2));
    var buttonProps = {
      className: buttonClassName
    };
    return /*#__PURE__*/_react["default"].createElement("div", buttonProps, /*#__PURE__*/_react["default"].createElement("span", {
      className: prefixCls + "-entries-icon"
    }, /*#__PURE__*/_react["default"].createElement(_mediaIcon["default"], {
      theme: theme,
      type: realType,
      className: prefixCls + "-" + realType + "-add-icon"
    })), /*#__PURE__*/_react["default"].createElement("span", {
      className: prefixCls + "-entries-path"
    }, entries.map(function (item) {
      return _this2.renderItem(item);
    })));
  };

  return MultipleAnchor;
}(_react.PureComponent);

exports["default"] = MultipleAnchor;
module.exports = exports.default;