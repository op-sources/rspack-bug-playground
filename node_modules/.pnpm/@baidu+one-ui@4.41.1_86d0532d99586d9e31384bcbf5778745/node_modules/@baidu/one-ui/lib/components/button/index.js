"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
var _exportNames = {};
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _noop2 = _interopRequireDefault(require("lodash/noop"));

var _react = _interopRequireWildcard(require("react"));

var _context = require("../providerConfig/context");

var _commonTools = require("../../core/commonTools");

var _loading = _interopRequireDefault(require("../loading"));

var _iconSvg = _interopRequireDefault(require("../iconSvg"));

var _config = require("../config");

var _reactIs = require("react-is");

var _interface = require("./interface");

Object.keys(_interface).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _interface[key]) return;
  exports[key] = _interface[key];
});

var _dec, _class, _class2, _temp;

var Button = (_dec = (0, _context.withConfigConsumer)('button'), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(Button, _PureComponent);

  function Button() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;

    _this.handleClick = function (e) {
      var _this$props = _this.props,
          disabled = _this$props.disabled,
          readonly = _this$props.readonly,
          onClick = _this$props.onClick,
          readOnly = _this$props.readOnly,
          loading = _this$props.loading;

      if (disabled || readonly || readOnly || loading) {
        e.preventDefault();
        return;
      }

      if (onClick) {
        onClick(e);
      }
    };

    return _this;
  }

  var _proto = Button.prototype;

  _proto.render = function render() {
    var _classnames;

    var _this$props2 = this.props,
        type = _this$props2.type,
        className = _this$props2.className,
        icon = _this$props2.icon,
        htmlType = _this$props2.htmlType,
        disabled = _this$props2.disabled,
        readonly = _this$props2.readonly,
        readOnly = _this$props2.readOnly,
        loading = _this$props2.loading,
        children = _this$props2.children,
        prefixCls = _this$props2.prefixCls,
        size = _this$props2.size,
        lightPrefix = _this$props2.lightPrefix,
        rest = (0, _objectWithoutPropertiesLoose2["default"])(_this$props2, ["type", "className", "icon", "htmlType", "disabled", "readonly", "readOnly", "loading", "children", "prefixCls", "size", "lightPrefix"]);
    var onlyIcon = !children && icon;
    var newType = type === 'link' ? 'text' : type;
    var classes = (0, _commonTools.classnames)(prefixCls, className, (0, _config.COMPONENT_MAIN)(lightPrefix), (_classnames = {}, _classnames[prefixCls + "-" + newType] = newType, _classnames[prefixCls + "-" + size] = size, _classnames[prefixCls + "-" + newType + "-disabled"] = disabled, _classnames[prefixCls + "-readOnly"] = readonly || readOnly, _classnames[prefixCls + "-icon-only"] = onlyIcon, _classnames[prefixCls + "-" + newType + "-loading"] = loading, _classnames[prefixCls + "-has-icon"] = icon, _classnames));
    var buttonProps = (0, _extends2["default"])({
      type: htmlType || 'button',
      disabled: disabled
    }, rest, {
      onClick: this.handleClick
    });
    var iconNode = null;

    if (icon) {
      if (typeof icon === 'string') {
        iconNode = /*#__PURE__*/_react["default"].createElement(_iconSvg["default"], {
          type: icon
        });
      } else if ((0, _reactIs.isValidElementType)(icon)) {
        var RealIcon = icon;
        iconNode = /*#__PURE__*/_react["default"].createElement(RealIcon, null);
      } else if (typeof icon === 'object') {
        iconNode = icon;
      }

      if ( /*#__PURE__*/_react["default"].isValidElement(iconNode)) {
        iconNode = /*#__PURE__*/_react["default"].cloneElement(iconNode, {
          className: (0, _commonTools.classnames)(iconNode.props.className, prefixCls + "-icon")
        });
      }
    }

    if (onlyIcon && loading) {
      // 只有图标，并且只在loading状态的时候，只展现loading状态
      return (
        /*#__PURE__*/
        // eslint-disable-next-line react/button-has-type
        _react["default"].createElement("button", (0, _extends2["default"])({}, buttonProps, {
          className: classes
        }), /*#__PURE__*/_react["default"].createElement(_loading["default"], {
          size: "small",
          className: prefixCls + "-loading-icon"
        }))
      );
    }

    return /*#__PURE__*/_react["default"].createElement("button", (0, _extends2["default"])({}, buttonProps, {
      className: classes
    }), loading ? /*#__PURE__*/_react["default"].createElement(_loading["default"], {
      size: "small",
      className: prefixCls + "-loading-icon"
    }) : iconNode, children && /*#__PURE__*/_react["default"].createElement("span", null, children));
  };

  return Button;
}(_react.PureComponent), _class2.defaultProps = {
  prefixCls: 'one-button',
  type: 'normal',
  size: 'medium',
  name: '',
  icon: '',
  htmlType: 'button',
  disabled: false,
  readonly: false,
  readOnly: false,
  onClick: _noop2["default"],
  loading: false
}, _class2.displayName = 'Button', _temp)) || _class);
var _default = Button;
exports["default"] = _default;
module.exports = exports.default;