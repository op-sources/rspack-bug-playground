"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = BodyTable;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _baseTable = _interopRequireDefault(require("./baseTable"));

var _context = _interopRequireDefault(require("./context"));

function BodyTable(props) {
  var _useContext = (0, _react.useContext)(_context["default"]),
      table = _useContext.table;

  var _table$props = table.props,
      prefixCls = _table$props.prefixCls,
      scroll = _table$props.scroll;
  var columns = props.columns,
      tableClassName = props.tableClassName,
      getRowKey = props.getRowKey,
      handleBodyScroll = props.handleBodyScroll,
      handleWheel = props.handleWheel,
      expander = props.expander,
      isAnyColumnsFixed = props.isAnyColumnsFixed,
      onDragStart = props.onDragStart,
      onDraging = props.onDraging,
      onDragEnd = props.onDragEnd,
      onHeaderCellMouseEnter = props.onHeaderCellMouseEnter,
      onHeaderCellMouseLeave = props.onHeaderCellMouseLeave;
  var saveRef = table.saveRef;
  var useFixedHeader = table.props.useFixedHeader;
  var bodyStyle = (0, _extends2["default"])({}, table.props.bodyStyle);

  if (scroll.x) {
    bodyStyle.overflowX = bodyStyle.overflowX || 'auto';
    bodyStyle.WebkitTransform = 'translate3d (0, 0, 0)';
  }

  if (scroll.y) {
    useFixedHeader = true;
    bodyStyle.maxHeight = bodyStyle.maxHeight || scroll.y;
  }

  bodyStyle.overflowY = bodyStyle.overflowY || 'auto';
  var _table$props2 = table.props,
      loadingOption = _table$props2.loadingOption,
      headerFixTop = _table$props2.headerFixTop,
      headerBottom = _table$props2.headerBottom;
  var showLoadBar = !loadingOption || loadingOption.type !== 'spinner';

  if (headerFixTop !== null || headerBottom || showLoadBar) {
    useFixedHeader = true;
  }

  var baseTable = /*#__PURE__*/_react["default"].createElement(_baseTable["default"], {
    tableClassName: tableClassName,
    hasHead: !useFixedHeader,
    hasBody: true,
    columns: columns,
    expander: expander,
    getRowKey: getRowKey,
    isAnyColumnsFixed: isAnyColumnsFixed,
    onDragStart: onDragStart,
    onDraging: onDraging,
    onDragEnd: onDragEnd,
    onHeaderCellMouseEnter: onHeaderCellMouseEnter,
    onHeaderCellMouseLeave: onHeaderCellMouseLeave
  });

  return /*#__PURE__*/_react["default"].createElement("div", {
    key: "bodyTable",
    className: prefixCls + "-body",
    style: bodyStyle,
    ref: saveRef('bodyTable'),
    onWheel: handleWheel,
    onScroll: handleBodyScroll
  }, baseTable);
}

BodyTable.defaultProps = {
  onDragStart: function onDragStart() {},
  onDraging: function onDraging() {},
  onDragEnd: function onDragEnd() {}
};
module.exports = exports.default;