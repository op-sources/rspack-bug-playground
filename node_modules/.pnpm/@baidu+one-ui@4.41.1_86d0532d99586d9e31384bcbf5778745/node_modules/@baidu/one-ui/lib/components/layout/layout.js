"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireWildcard(require("react"));

var _context = require("../providerConfig/context");

var _commonTools = require("../../core/commonTools");

var _sidebar = _interopRequireDefault(require("./sidebar"));

var _context2 = _interopRequireDefault(require("./context"));

var _dec, _class, _class2, _temp;

;
var Layout = (_dec = (0, _context.withConfigConsumer)('layout'), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(Layout, _PureComponent);

  function Layout() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;
    _this.state = {
      sidebarCount: 0,
      hasStickyFooter: false
    };

    _this.registerSidebar = function () {
      _this.setState(function (_ref) {
        var sidebarCount = _ref.sidebarCount;
        return {
          sidebarCount: sidebarCount + 1
        };
      });
    };

    _this.unregisterSidebar = function () {
      _this.setState(function (_ref2) {
        var sidebarCount = _ref2.sidebarCount;
        return {
          sidebarCount: sidebarCount - 1
        };
      });
    };

    _this.registerStickyFooter = function () {
      _this.setState({
        hasStickyFooter: true
      });
    };

    _this.unregisterStickyFooter = function () {
      _this.setState({
        hasStickyFooter: false
      });
    };

    _this.contextValue = {
      registerSidebar: _this.registerSidebar,
      unregisterSidebar: _this.unregisterSidebar,
      registerStickyFooter: _this.registerStickyFooter,
      unregisterStickyFooter: _this.unregisterStickyFooter
    };
    return _this;
  }

  var _proto = Layout.prototype;

  _proto.render = function render() {
    var _classnames;

    var _this$props = this.props,
        className = _this$props.className,
        prefixCls = _this$props.prefixCls,
        children = _this$props.children,
        direction = _this$props.direction,
        lightPrefix = _this$props.lightPrefix,
        restProps = (0, _objectWithoutPropertiesLoose2["default"])(_this$props, ["className", "prefixCls", "children", "direction", "lightPrefix"]);
    var _this$state = this.state,
        sidebarCount = _this$state.sidebarCount,
        hasStickyFooter = _this$state.hasStickyFooter;
    var hasSidebar = _react["default"].Children.toArray(children).filter(_react.isValidElement).some(function (child) {
      return child.type === _sidebar["default"];
    }) || sidebarCount > 0;
    var rowDirection = direction === 'row' || hasSidebar;
    return /*#__PURE__*/_react["default"].createElement(_context2["default"].Provider, {
      value: this.contextValue
    }, /*#__PURE__*/_react["default"].createElement("div", (0, _extends2["default"])({
      className: (0, _commonTools.classnames)(prefixCls, className, (_classnames = {}, _classnames[prefixCls + "-row-direction"] = rowDirection, _classnames[prefixCls + "-with-sidebar"] = hasSidebar, _classnames[prefixCls + "-with-sticky-footer"] = hasStickyFooter, _classnames))
    }, restProps), children));
  };

  return Layout;
}(_react.PureComponent), _class2.defaultProps = {
  prefixCls: 'one-layout',
  direction: 'column'
}, _class2.Sidebar = void 0, _class2.Header = void 0, _class2.Content = void 0, _class2.Footer = void 0, _temp)) || _class);
var _default = Layout;
exports["default"] = _default;
module.exports = exports.default;