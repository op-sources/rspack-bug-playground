"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _noop2 = _interopRequireDefault(require("lodash/noop"));

var _react = _interopRequireWildcard(require("react"));

var _imageItem = _interopRequireDefault(require("./imageItem"));

var _lightbox = _interopRequireDefault(require("../../lightbox"));

var _fileItem = _interopRequireDefault(require("./fileItem"));

var _sortable = _interopRequireDefault(require("../../sortable"));

var _commonTools = require("../../../core/commonTools");

;

var UploaderList = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(UploaderList, _PureComponent);

  function UploaderList() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;
    _this.state = {
      showPreview: false,
      index: null
    };

    _this.onRemove = function (index) {
      var fileList = [].concat(_this.props.fileList);
      fileList.splice(index, 1);

      _this.props.onRemove({
        fileList: fileList,
        index: index,
        originFileList: _this.props.fileList
      });
    };

    _this.onPreview = function (index) {
      var _this$props = _this.props,
          fileList = _this$props.fileList,
          onPreview = _this$props.onPreview;
      var currentItem = fileList[index];
      var preview = onPreview({
        file: currentItem,
        fileList: fileList,
        index: index
      });

      if (preview !== false) {
        _this.setState({
          showPreview: true,
          index: index
        });
      }
    };

    _this.onReUpload = function (index) {
      var _this$props2 = _this.props,
          fileList = _this$props2.fileList,
          onInsertImage = _this$props2.onInsertImage,
          onReUpload = _this$props2.onReUpload;
      var currentItem = fileList[index];
      var reUpload = onReUpload({
        file: currentItem,
        fileList: fileList,
        index: index
      });

      if (reUpload !== false) {
        onInsertImage(true, index);
      }
    };

    _this.onClose = function () {
      _this.setState({
        showPreview: false,
        index: null
      });
    };

    _this.formatPreviewList = function () {
      var _this$props3 = _this.props,
          previewList = _this$props3.previewList,
          fileList = _this$props3.fileList;
      var index = _this.state.index;

      if (previewList && previewList.length) {
        return previewList;
      }

      var file = fileList[index];

      if (file) {
        return [{
          src: file.thumbUrl,
          alt: file.name,
          type: 'image'
        }];
      }

      return [];
    };

    _this.renderItem = function (item, index) {
      var _this$props4 = _this.props,
          prefixCls = _this$props4.prefixCls,
          listType = _this$props4.listType,
          _this$props4$fileList = _this$props4.fileList,
          fileList = _this$props4$fileList === void 0 ? [] : _this$props4$fileList,
          realType = _this$props4.realType,
          showUploadListIcon = _this$props4.showUploadListIcon,
          renderCustomIcon = _this$props4.renderCustomIcon,
          size = _this$props4.size,
          pickerIcon = _this$props4.pickerIcon,
          errorDisplay = _this$props4.errorDisplay,
          helperText = _this$props4.helperText,
          helperTextPosition = _this$props4.helperTextPosition,
          maxFileLength = _this$props4.maxFileLength,
          pickerPosition = _this$props4.pickerPosition,
          controls = _this$props4.controls,
          theme = _this$props4.theme;

      if (listType === 'file') {
        return /*#__PURE__*/_react["default"].createElement(_fileItem["default"], (0, _extends2["default"])({}, item, {
          key: index,
          index: index,
          onRemove: _this.onRemove,
          prefixCls: prefixCls,
          file: item,
          controls: controls
        }));
      }

      var showHelper = helperText && pickerPosition !== 'none' && (maxFileLength === 1 // 单文件
      // 多文件末尾右侧
      || maxFileLength === fileList.length && pickerPosition === 'after' && index === fileList.length - 1 && helperTextPosition === 'right');
      return /*#__PURE__*/_react["default"].createElement(_imageItem["default"], (0, _extends2["default"])({}, item, {
        fileList: fileList,
        key: index,
        index: index,
        onRemove: _this.onRemove,
        onPreview: _this.onPreview,
        prefixCls: prefixCls,
        onReUpload: _this.onReUpload,
        showUploadListIcon: showUploadListIcon,
        renderCustomIcon: renderCustomIcon,
        size: size,
        realType: realType,
        pickerIcon: pickerIcon,
        errorDisplay: errorDisplay,
        helperText: helperText,
        helperTextPosition: helperTextPosition,
        showHelper: showHelper,
        file: item,
        controls: controls,
        theme: theme
      }));
    };

    return _this;
  }

  var _proto = UploaderList.prototype;

  _proto.render = function render() {
    var _this$props5 = this.props,
        prefixCls = _this$props5.prefixCls,
        listType = _this$props5.listType,
        _this$props5$fileList = _this$props5.fileList,
        fileList = _this$props5$fileList === void 0 ? [] : _this$props5$fileList,
        pickerPosition = _this$props5.pickerPosition,
        onSort = _this$props5.onSort,
        sortable = _this$props5.sortable,
        picker = _this$props5.picker,
        lightboxProps = _this$props5.lightboxProps;
    var pickerAtFirst = pickerPosition === 'top' || pickerPosition === 'before';
    var uploadListClassNames = (0, _commonTools.classnames)(prefixCls + "-list", prefixCls + "-list-" + listType);
    var itemList = sortable ? /*#__PURE__*/_react["default"].createElement(_sortable["default"], {
      options: fileList,
      onChange: onSort,
      className: prefixCls + "-sortable",
      renderOption: this.renderItem,
      after: !pickerAtFirst ? picker : null,
      before: pickerAtFirst ? picker : null
    }) : fileList.map(this.renderItem);
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: uploadListClassNames
    }, !sortable && pickerAtFirst && picker, itemList, fileList[this.state.index] ? /*#__PURE__*/_react["default"].createElement(_lightbox["default"], (0, _extends2["default"])({
      open: this.state.showPreview,
      onClose: this.onClose,
      indicator: "number",
      dataSource: this.formatPreviewList()
    }, lightboxProps)) : null, !sortable && !pickerAtFirst && picker);
  };

  return UploaderList;
}(_react.PureComponent);

UploaderList.defaultProps = {
  onPreview: _noop2["default"],
  onInsertImage: _noop2["default"],
  onReUpload: _noop2["default"]
};
var _default = UploaderList;
exports["default"] = _default;
module.exports = exports.default;