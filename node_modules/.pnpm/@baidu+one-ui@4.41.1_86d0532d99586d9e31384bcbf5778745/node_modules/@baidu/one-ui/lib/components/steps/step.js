"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireWildcard(require("react"));

var _commonTools = require("../../core/commonTools");

var _tooltip = _interopRequireDefault(require("../tooltip"));

var _button = _interopRequireDefault(require("../button"));

var _context = require("../providerConfig/context");

var _dec, _class, _temp;

var Step = (_dec = (0, _context.withConfigConsumer)('steps'), _dec(_class = (_temp = /*#__PURE__*/function (_PureComponent) {
  (0, _inheritsLoose2["default"])(Step, _PureComponent);

  function Step() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;

    _this.onClickStep = function () {
      var _this$props = _this.props,
          onClickStep = _this$props.onClickStep,
          onChange = _this$props.onChange,
          stepNumber = _this$props.stepNumber;

      if (onClickStep) {
        onClickStep(stepNumber);
      }

      if (onChange) {
        onChange(Number(stepNumber) - 1);
      }
    };

    _this.renderIconNode = function () {
      var _classnames;

      var _this$props2 = _this.props,
          prefixCls = _this$props2.prefixCls,
          stepNumber = _this$props2.stepNumber,
          status = _this$props2.status,
          icons = _this$props2.icons,
          icon = _this$props2.icon,
          _this$props2$iconClas = _this$props2.iconClassName,
          iconClassName = _this$props2$iconClas === void 0 ? '' : _this$props2$iconClas;
      var iconNode;
      var iconClx = (0, _commonTools.classnames)(prefixCls + "-icon", iconClassName, (_classnames = {}, _classnames[prefixCls + "-icon-check"] = status === 'finish' && icons && !icons.finish, _classnames[prefixCls + "-icon-close"] = status === 'error' && icons && !icons.error, _classnames));

      if (icon && iconClassName) {
        iconNode = /*#__PURE__*/_react["default"].createElement("span", {
          className: iconClassName
        }, icon);
      } else if (icons && icons.finish && status === 'finish') {
        iconNode = /*#__PURE__*/_react["default"].createElement("span", {
          className: prefixCls + "-icon"
        }, icons.finish);
      } else if (icons && icons.error && status === 'error') {
        iconNode = /*#__PURE__*/_react["default"].createElement("span", {
          className: prefixCls + "-icon"
        }, icons.error);
      } else if (status === 'finish' || status === 'error') {
        iconNode = /*#__PURE__*/_react["default"].createElement("span", {
          className: iconClx
        });
      } else {
        iconNode = /*#__PURE__*/_react["default"].createElement("span", {
          className: prefixCls + "-icon"
        }, stepNumber);
      }

      return iconNode;
    };

    return _this;
  }

  var _proto = Step.prototype;

  _proto.render = function render() {
    var _classnames2, _classnames3, _classnames4;

    var _this$props3 = this.props,
        className = _this$props3.className,
        prefixCls = _this$props3.prefixCls,
        style = _this$props3.style,
        itemWidth = _this$props3.itemWidth,
        _this$props3$status = _this$props3.status,
        status = _this$props3$status === void 0 ? 'wait' : _this$props3$status,
        adjustMarginRight = _this$props3.adjustMarginRight,
        description = _this$props3.description,
        title = _this$props3.title,
        tailContent = _this$props3.tailContent,
        icon = _this$props3.icon,
        showTipWhenHover = _this$props3.showTipWhenHover,
        hoverTip = _this$props3.hoverTip,
        stepNumber = _this$props3.stepNumber,
        currentStep = _this$props3.currentStep,
        type = _this$props3.type;
    var classString = (0, _commonTools.classnames)(prefixCls + "-item", prefixCls + "-item-type-" + type, prefixCls + "-item-" + status, (_classnames2 = {}, _classnames2[prefixCls + "-item-custom"] = icon, _classnames2[prefixCls + "-item-is-current"] = currentStep, _classnames2), className);
    var stepItemStyle = (0, _extends2["default"])({}, style);

    if (itemWidth) {
      stepItemStyle.width = itemWidth;
    }

    if (adjustMarginRight) {
      stepItemStyle.marginRight = adjustMarginRight;
    }

    var stepText = '';

    if (status === 'finish') {
      stepText = '已完成';
    } else if (status === 'wait') {
      stepText = '未开始';
    } else if (status === 'process') {
      stepText = '进行中';
    } else if (status === 'error') {
      stepText = '错误';
    }

    var iconNode = this.renderIconNode();
    var iconHoverTip = hoverTip || "\u7B2C" + stepNumber + "\u6B65" + stepText;
    var iconRenderItem = showTipWhenHover ? /*#__PURE__*/_react["default"].createElement(_tooltip["default"], {
      placement: "top",
      title: iconHoverTip,
      style: {
        marginBottom: '5px'
      }
    }, /*#__PURE__*/_react["default"].createElement(_button["default"], {
      className: prefixCls + "-item-icon",
      icon: iconNode
    })) : /*#__PURE__*/_react["default"].createElement(_button["default"], {
      className: prefixCls + "-item-icon",
      icon: iconNode
    });
    var contentClassNames = (0, _commonTools.classnames)(prefixCls + "-item-content", (_classnames3 = {}, _classnames3[prefixCls + "-item-title-only"] = !description, _classnames3));
    var titleTextClassNames = (0, _commonTools.classnames)(prefixCls + "-item-title-text", (_classnames4 = {}, _classnames4[prefixCls + "-item-title-text-only"] = !description, _classnames4));
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: classString,
      style: stepItemStyle,
      onClick: this.onClickStep
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: prefixCls + "-item-tail"
    }, tailContent), iconRenderItem, /*#__PURE__*/_react["default"].createElement("div", {
      className: contentClassNames
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: prefixCls + "-item-title"
    }, /*#__PURE__*/_react["default"].createElement("span", {
      className: titleTextClassNames
    }, title)), description && /*#__PURE__*/_react["default"].createElement("div", {
      className: prefixCls + "-item-description"
    }, description)));
  };

  return Step;
}(_react.PureComponent), _temp)) || _class);
var _default = Step;
exports["default"] = _default;
module.exports = exports.default;